{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 9;}
{\s50\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext51 List Continue 0;}
{\s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext52 List Continue 1;}
{\s52\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext53 List Continue 2;}
{\s53\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext54 List Continue 3;}
{\s54\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext55 List Continue 4;}
{\s55\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext56 List Continue 5;}
{\s56\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext57 List Continue 6;}
{\s57\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext58 List Continue 7;}
{\s58\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext59 List Continue 8;}
{\s59\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext59 List Continue 9;}
{\s60\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext61 DescContinue 0;}
{\s61\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext62 DescContinue 1;}
{\s62\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext63 DescContinue 2;}
{\s63\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext64 DescContinue 3;}
{\s64\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext65 DescContinue 4;}
{\s65\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext66 DescContinue 5;}
{\s66\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext67 DescContinue 6;}
{\s67\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext68 DescContinue 7;}
{\s68\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext69 DescContinue 8;}
{\s69\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext69 DescContinue 9;}
{\s70\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext81 LatexTOC 0;}
{\s71\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext82 LatexTOC 1;}
{\s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext83 LatexTOC 2;}
{\s73\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext84 LatexTOC 3;}
{\s74\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext85 LatexTOC 4;}
{\s75\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext86 LatexTOC 5;}
{\s76\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext87 LatexTOC 6;}
{\s77\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext88 LatexTOC 7;}
{\s78\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext89 LatexTOC 8;}
{\s79\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext89 LatexTOC 9;}
{\s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext81 \sautoupd List Bullet 0;}
{\s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid \sbasedon0 \snext82 \sautoupd List Bullet 1;}
{\s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid \sbasedon0 \snext83 \sautoupd List Bullet 2;}
{\s83\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls4\adjustright \fs20\cgrid \sbasedon0 \snext84 \sautoupd List Bullet 3;}
{\s84\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls5\adjustright \fs20\cgrid \sbasedon0 \snext85 \sautoupd List Bullet 4;}
{\s85\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls6\adjustright \fs20\cgrid \sbasedon0 \snext86 \sautoupd List Bullet 5;}
{\s86\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls7\adjustright \fs20\cgrid \sbasedon0 \snext87 \sautoupd List Bullet 6;}
{\s87\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls8\adjustright \fs20\cgrid \sbasedon0 \snext88 \sautoupd List Bullet 7;}
{\s88\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls9\adjustright \fs20\cgrid \sbasedon0 \snext89 \sautoupd List Bullet 8;}
{\s89\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls10\adjustright \fs20\cgrid \sbasedon0 \snext89 \sautoupd List Bullet 9;}
{\s90\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext91 \sautoupd List Enum 0;}
{\s91\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext92 \sautoupd List Enum 1;}
{\s92\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext93 \sautoupd List Enum 2;}
{\s93\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext94 \sautoupd List Enum 3;}
{\s94\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext95 \sautoupd List Enum 4;}
{\s95\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext96 \sautoupd List Enum 5;}
{\s96\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext96 \sautoupd List Enum 5;}
{\s97\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext98 \sautoupd List Enum 7;}
{\s98\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext99 \sautoupd List Enum 8;}
{\s99\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext99 \sautoupd List Enum 9;}
}
{\comment begin body}
{\info 
{\title {\comment YarnSpinner }YarnSpinner}
{\comment Generated byDoxgyen. }
{\creatim \yr2017\mo5\dy30\hr2\min15\sec48}
}\pard\plain 
\sectd\pgnlcrm
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\vertalc\qc\par\par\par\par\par\par\par
\pard\plain \s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid 
{\field\fldedit {\*\fldinst TITLE \\*MERGEFORMAT}{\fldrslt TITLE}}\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\par
\par\par\par\par\par\par\par\par\par\par\par\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
{\field\fldedit {\*\fldinst AUTHOR \\*MERGEFORMAT}{\fldrslt AUTHOR}}\par
Version \par{\field\fldedit {\*\fldinst CREATEDATE \\*MERGEFORMAT}{\fldrslt CREATEDATE}}\par
\page\page\vertalt
\pard\plain 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Table of Contents\par
\pard\plain \par
{\field\fldedit {\*\fldinst TOC \\f \\*MERGEFORMAT}{\fldrslt Table of contents}}\par
\pard\plain 
\sect \sbkpage \pgndec \pgnrestart
\sect \sectd \sbknone
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Contributing to Yarn Spinner{\tc \v Contributing to Yarn Spinner}\par \pard\plain 
{\bkmkstart AAAAAAABGS}
{\bkmkend AAAAAAABGS}
\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hi there! We're thrilled that you'd like to contribute to this project. Your help is essential for keeping it great.\par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}How to send in your contributions\par}
There are many ways you can send your contributions to {\b Yarn} Spinner. You can either {\b report a bug} , or you can make the changes yourself and {\b submit a pull request} !\par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}Reporting bugs and opening issues\par}
Please {\f2 report bugs} and open issues generously. Don't be afraid that your idea is silly, or you're reporting a duplicate. We're happy to hear from you. Seriously.\par
{\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid ***Please Note:*** {\b Yarn} Spinner is written by volunteers. If you encounter a problem while using it, we'll do our best to help you, but neither the authors, or Secret Lab Pty. Ltd. can offer any support.\par
}{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}Submitting a pull request\par}
{
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\f2 Fork} and clone the repository\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Create a new branch: git checkout -b my-branch-name\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Make your changes\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Push to your fork and {\f2 submit a pull request}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Pat your self on the back and wait for your pull request to be reviewed.\par}
If you're unfamiliar with how pull requests work, {\f2 GitHub's documentation on them} is very good.\par
Here are a few things you can do that will increase the likelihood of your pull request being accepted:\par
{
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Update the documentation as necessary, as well as making code changes.\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Keep your change as focused as possible. If there are multiple changes you would like to make that are not dependent upon each other, consider submitting them as separate pull requests.\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\f2 Write a good commit message}.\par}
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}Branches\par}
All of {\b Yarn} Spinner's in-progress work happens on the {\f2 development}  branch. When we make a release, we merge from {\f2 development}  into {\f2 master} . This means that {\f2 master}  is always in a releasable state.\par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}Code and other contributions\par}
Contributions to {\b Yarn} Spinner (via pull request or otherwise) must be licensed under the MIT license. \par
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Contributors to Yarn Spinner{\tc \v Contributors to Yarn Spinner}\par \pard\plain 
{\bkmkstart AAAAAAABGT}
{\bkmkend AAAAAAABGT}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
20??-ongoing: Secret Lab Team - Jon Manning and Paris Buttfield-Addison {\f2 lab@secretlab.com.au}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
2017: Peter Lawler {\f2 relwalretep@gmail.com} \par}
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Building Yarn Spinner{\tc \v Building Yarn Spinner}\par \pard\plain 
{\bkmkstart AAAAAAABGU}
{\bkmkend AAAAAAABGU}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid ***Important:*** This document only matters to you if you want to build {\b Yarn} Spinner from source. In almost all cases, you'll be totally fine with {\f2 downloading a build}, and using that in your project.\par
}{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}Windows, Mac and Linux using MonoDevelop\par}
To build {\b Yarn} Spinner on Windows or Mac, you'll need MonoDevelop. You can {\f2 download MonoDevelop for your OS from the MonoDevelop site}. To build {\b Yarn} Spinner on Linux, you'll need MonoDevelop's Flatpak. Once you have installed {\f2 Flatpak for your distribution}, you can {\f2 download MonoDevelop from the MonoDevelop site}.\par
Once it's downloaded, follow these steps:\par
{
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Open {\b YarnSpinner.sln} .\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Open the {\b Build menu} , and choose {\b Build All} .\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Open the {\b Unity/Assets/Yarn Spinner}  folder. You'll find a copy of {\b YarnSpinner.dll}  there. You can now copy that DLL file wherever you need it.\par}
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}Linux\par}
As well as using MonoDevelop, you can use xbuild to build on Linux. At this stage, see the {\f2 build.sh} script for information on how to do this.\par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}Building Documentation\par}
{\b Yarn} Spinner uses {\f2 Doxygen} to generate {\f2 DocBook}, {\f2 HTML}, {\f2 LaTeX}, {\f2 RTF}, and {\f2 XML} documentation. {\f2 GNU GLOBAL} is also used.\par
Basic steps to clean out existing documentation, generate new documentation and check the new documentation for generation errors. Note that some ocurrences of the word 'error' will be due to classes/methods etc. of {\b YarnSpinner} itself and not an actual error in the documentation.\par
{
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
rm -fr Documentation/\{docbook,html,latex,rtf,xml\}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
doxygen Documentation/Doxyfile > doxyoutput.txt 2>&1\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
grep -i error doxyoutput.txt\par}
{\f2 MarkDown} documentation is available via conversion of the XML output to Markdown using third party tools such as {\f2 Pandoc} or {\f2 doxygen2md} \par
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Extending Yarn Spinner{\tc \v Extending Yarn Spinner}\par \pard\plain 
{\bkmkstart AAAAAAABGV}
{\bkmkend AAAAAAABGV}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is a quick-and-dirty document that shows how to add new functions so that they can be called from inside {\b Yarn}.\par
First, get your {\f2 Dialogue}  object: {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid // some_implementation is the object that handles variable storage - \par
// it's not important in this example\par
var dialogue = new Dialogue(some_implementation);\par
}
\par
Next, register your new function. For example, let's make a function that takes 1 parameter, which is a number, and returns {\f2 true}  if it's even:\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid dialogue.library.RegisterFunction ("is_even", 1, delegate(Value[] parameters) \{\par
    return (int)parameters[0].AsNumber % 2 == 0;\par
\});\par
}
\par
When the function is called, the delegate you provide will be run.\par
Some notes:\par
{
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
You don't have to return a value from your function.\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
The parameters passed to your function are of type {\b Yarn.Value}. You can get their value as numbers, bools or strings by using the {\f2 AsNumber} , {\f2 AsString}  and {\f2 AsBool}  properties.\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
You can only return values of the following types:{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
String\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Float\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Double\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Integer\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b Yarn.Value}\par}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Yarn} Spinner will make sure that the correct number of parameters is passed to your method. If you specify {\f2 -1}  as your parameter count, the function may have any number of parameters. \par}
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Yarn Spinner Documentation{\tc \v Yarn Spinner Documentation}\par \pard\plain 
{\bkmkstart AAAAAAABGW}
{\bkmkend AAAAAAABGW}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}{\b Yarn} Documentation\par}
Documentation for {\b Yarn} Spinner is under active development. Please submit any suggestions you may have.\par
{\b YarnSpinner} documentation is generated automatically by the {\f2 Doxygen} system.\par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}Building Yarnspinner\par}
Yarnspinner is automatically built by Travis Continual Integration system. For information on how to build it yourself, please refer to the {\b Building} document.\par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}Using Yarnspinner\par}
For information on how to write stories for Yarnspinner, refer to the {\b Usage} document.\par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}Using Unity\par}
At this point in time, only examples for the Unity game engine are available. We hope to include a more generic example in the future. Please refer to the {\b Unity} document for more information.\par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}Tips during Unity install\par}
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}Windows\par}
Find the temp folder the installer has executed from and back it up before it completes installing.\par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}Mac\par}
(This space left intentionally blank)\par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}Linux\par}
Unity for Linux is not available in formal release and we are not actively pursuing this platform, however we are very enthusastic about this future prospect. We have confirmed that Yarnspinner works with the current 5.6 release of {\f2 Unity for Linux}, although this has only been tested with our example Unity code on Debian Stretch (amd64 architecture).\par
We encourge Linux users to test Yarnspinner using the {\f2 Monodevelop FlatPak}. Although FlatPak is designed to be Linux agnostic, we are currently utilising Gnome3 on Debian Stretch for desktop development purposes. Your mileage may vary on other Linux combinations and flavours, we are eager to receive your feedback.\par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}Extending Tarnspinner\par}
For information on how to extend Yarnspinner's functionality, please refer to the {\b Extending Yarnspinner} document. \par
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Using Yarn Spinner in your Unity game{\tc \v Using Yarn Spinner in your Unity game}\par \pard\plain 
{\bkmkstart AAAAAAABGX}
{\bkmkend AAAAAAABGX}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}{\b Yarn} Spinner Quick Start\par}
Here's how to quickly jump in to {\b Yarn} Spinner, if you're already reasonably comfortable with Unity.\par
{
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Download and import {\f2 the YarnSpinner package} into your project.} \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Inside the {\b YarnSpinner} folder, open the {\f2 Examples/Yarn Spinner Basic Example}  scene.} \par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Start the game. Play through the dialogue.} \par}
Once you've played with it, open the Example Script file in the {\b Yarn} editor (it's in the {\f2 Examples/Demo Assets}  folder), and make some changes to the script. Once you've done that, take a look at how {\f2 {\b Code/DialogueRunner.cs}} , {\f2 Examples/Demo {\b Scripts/ExampleDialogueUI.cs}}  and {\f2 Examples/Demo {\b Scripts/ExampleVariableStorage.cs}}  work. You can also {\b add your own functions to Yarn}.\par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}Tutorial\par}
{\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid ***Note:*** This tutorial assumes that you know at least a little bit about {\f2 Unity}. In particular, it assumes that you know how to get around the Unity editor, how to work with game objects, and how to write scripts in C#. If you don't know these things, check out {\f2 Unity's documentation}!\par
}{\b Yarn} Spinner is designed to be easy to work with in Unity. It makes no assumptions about how your game presents dialogue to the player, or about how the player chooses their responses.\par
To use {\b Yarn} Spinner, you use three classes:\par
{
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\f2 DialogueRunner} , which is responsible for loading and running your dialogue script;\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
A subclass of {\f2 DialogueUIBehaviour} , which is reponsible for displaying the lines and dialogue choices to the player; and\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
A subclass of {\f2 VariableStorageBehaviour} , which is responsible for storing the state of the conversation.\par}
These three classes exist in the {\f2 {\b Yarn.Unity}}  namespace. To create your subclasses of {\f2 DialogueUIBehaviour}  and {\f2 VariableStorageBehaviour} , you'll need to add the following code to the top of your C# code: {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid using Yarn.Unity;\par
}
\par
Additionally, you store your {\b Yarn} files as {\f2 .json}  assets in your Unity projects. These can be stored anywhere - you simply provide add them to the {\f2 DialogueRunner} 's inspector. You can also call {\f2 AddScript}  on the {\f2 DialogueRunner}  at runtime; this is useful for cases like spawning a character who comes with some extra dialogue - all that needs to happen is that character just needs to pass their {\b Yarn} script to the {\f2 DialogueRunner} .\par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}Load your conversation with {\f2 DialogueRunner} \par}
{\b Yarn} conversations are loaded and managed by a {\f2 DialogueRunner}  object. This object is responsible for loading and parsing your {\b Yarn} {\f2 .json}  files. It also runs the script when it's told to - for example, when you walk up to a character in your game and talk to them.\par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}Display your conversation with {\f2 DialogueUI} \par}
Your game's dialogue needs to be shown to the user. Additionally, you need a way to let the player choose what their reaction is going to be.\par
{\b Yarn} Spinner makes no assumptions about how you want to handle your dialogue's UI. Want to present as simple list of options? That's fine. Want a fancy Mass Effect style radial menu? Totally cool. Want a totally bonkers gesture-based UI with a countdown timer? Oh man that would be sweet.\par
{\b Yarn} Spinner leaves all of the work of actually presenting the conversation up to you; all it's responsible for is delivering the lines that the player should see, and notifying {\b Yarn} Spinner about what response the user selected.\par
{\b Yarn} Spinner comes with an example script that uses Unity's UI system. It's a good place to start.\par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}Store your conversation state with a {\f2 VariableStorageBehaviour} \par}
There's one last necessary component. As you play through a conversation, you'll probably want to record the user's choices somewhere. {\b Yarn} Spinner doesn't care about the details of how you save your game state; instead, it just expects you to give it an object that conforms to a C# *{\f2 interface}*, which defines methods like "set variable" and "get value of variable".\par
The simplest implementation of this is one that just keeps your variables in memory, but it's pretty straightforward to adapt an existing save game system to use it.\par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}Respond to commands with {\f2 YarnCommand} \par}
In {\b Yarn}, you can create {\i commands}  that tell your game to do something. For example, if you want a character to move to a certain point on the screen, you might have a command that looks like this: {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid <<move Sally exit>>\par
}
\par
For this to work, the game object named "Sally" needs to have a script component attached to it, and one of those scripts needs to have a method that looks like this: {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid [YarnCommand("move")]\par
public void MoveCharacter(string destinationName) \{\par
    // move to the destination\par
\}\par
}
\par
When {\b Yarn} encounters a command that contains two or more words, it looks for a game object with the same name as the second word ("Sally", in the above example), and then searches that object's scripts for any method that has a {\f2 YarnCommand}  with the same name as the first word (in this case, "move").\par
Any further words in the command are passed as string parameters to the method ("exit", in this case, which is used as the {\f2 destinationName}  parameter)\par
Note that {\b all}  parameters must be strings. {\f2 DialogueRunner}  will throw an error if it finds a method that has parameters of any other type. It's up to your method to convert the strings into other types, like numbers. \par
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Yarn for Writers{\tc \v Yarn for Writers}\par \pard\plain 
{\bkmkstart AAAAAAABGY}
{\bkmkend AAAAAAABGY}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This document talks about how to use {\b Yarn} if you're using it to write content. It doesn't talk about how to integrate {\b Yarn} Spinner into your project; for that, see {\b Unity.md}Using {\b Yarn} Spinner in your Unity game"".\par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}Lines\par}
{\b Yarn} lets you define multiple chunks of dialogue that are linked together. Each chunk is called a {\i node} .\par
Nodes are filled with different kinds of text. The simplest is lines of dialogue, which look like this: {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Alice: Hey, I'm a character speaking in a dialogue!\par
Bob: Wild!\par
}
\par
Each line is delivered to your game one at a time.\par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}Options\par}
To link a node to another node, you provide {\i options} . Options look like this: {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid [[Go to the woods|GoToWoods]]\par
[[Go back to the city|GoToCity]]\par
}
\par
Options have two parts: the label, which is shown to the user, and the name of the node that we should link to when the user selects the option. The label and the node name are separated by a vertical bar ({\f2 |} ).\par
You don't have to provide the label. Instead, you can just provide the node name, like so: {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid [[GoToCity]]\par
}
\par
If an option has no label, {\b Yarn} will automatically jump to that node when that line is run, and it won't show options to the player.\par
When all of the lines in a node have been displayed, the dialogue system gives your game the list of available options. You then let the user choose an option, and then continue loading lines of dialogue, one at a time.\par
If there are no options when we reach the end of a node, then we've reached the end of a conversation, and {\b Yarn} Spinner will let your game know.\par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}Shortcut Options\par}
Sometimes, you'll want to add little branches to your conversation, but you don't want to create separate nodes for them. Instead, you can use {\i shortcut options} : {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Mae: What did you say to her?\par
-> Nothing.\par
    Mae: Oh, man. Maybe you should have.\par
-> That she was an idiot.\par
    Mae: Hah! I bet that pissed her off.\par
Mae: Anyway, I'd better get going.\par
}
\par
When this is run, {\b Yarn} Spinner will behave just as if you'd broken all of this up into multiple nodes.\par
You can also attach conditions to shortcut options, which will make them only appear if a certain condition passes: {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid Bob: What would you like?\par
-> A burger. <<if $money >= 5>>\par
    Bob: Nice. Enjoy!\par
-> A soda. <<if $money >= 2>>\par
    Bob: Yum!\par
-> Nothing.\par
Bob: Thanks for coming!\par
}
\par
Note that in the last example, there wasn't any attached text. If the player selected the last option ("Nothing."), then the next line to appear would be "Bob: Thanks for coming!"\par
You can also nest these shortcut options, if you like. Be careful, though - too much nested options can make your text difficult to read.\par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}Commands\par}
In addition to showing lines of dialogue, your game will probably want to run actions - things like "move the camera to position X", or "make character start smiling". You can use commands for this.\par
Commands look like this: {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid <<move alice to under_bridge>>\par
}
\par
Any text inside the double-chevrons will be sent directly to your game as a string. It's up to you to decide what to do with that string.\par
{\b Yarn} has a special command, called {\f2 stop} . If you include {\f2 <<stop>>}  in your node, {\b Yarn} will stop the entire conversation when it reaches it.\par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}Variables and If statements\par}
You can store numbers in variables. To do this, use the {\f2 set}  command: {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid <<set $door_unlocked to 1>>\par
}
\par
You can check the value of a variable using the {\f2 if}  command: {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid <<if $door_unlocked is 1>>\par
    The door is unlocked! (This will only appear if $door_unlocked is equal to 1.)\par
<<endif>>\par
}
\par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}Expressions\par}
You can do math in an {\f2 if}  command. For example: {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid <<if $number_of_stars_collected > 5>>\par
    You have more than 5 stars!\par
<<endif>>\par
}
\par
You can also get fancier, and do stuff like this: {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid <<if $hostages_saved == $number_of_hostages and $time_remaining > 0>>\par
    You win the game!\par
<<elseif $hostages_saved < $number_of_hostages and $time_remaining > 0>>\par
    You need to rescue more hostages!\par
<<elseif $bomb_has_exploded == 0>>\par
    You failed to rescue the hostages before time ran out!\par
<<endif>>\par
}
\par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}Types\par}
There are four different types of value in {\b Yarn}: strings, numbers, booleans, and {\f2 null} .\par
{
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Strings contain text.\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Numbers are floating-point numbers.\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Booleans are either true or false.\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\f2 null}  means no value.\par}
{\b Yarn} will automatically convert between types for you. For example: {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid <<if "hi" == "hi">>\par
    The two strings are the same!\par
<<endif>>\par
\par
<<if 1+1+"hi" == "2hi">>\par
    Strings get joined together with other values!\par
<<endif>>\par
}
\par
{\b Warning:}  Currently, variables can only store numbers. If you try to store anything else in a variable, it will get converted to a number first.\par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}Functions\par}
You can call functions in your {\f2 if}  commands. For example, {\b Yarn} Spinner provides a function called {\f2 visited} , which you can use to find out if a node has been entered before or not. It takes a single parameter (which is a string), and returns true or false depending on whether or not the node you specified has been entered. {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid <<if visited("GoToCity")>>\par
    We have gone to the city before!\par
<<endif>>\par
}
\par
You can't define your own functions inside {\b Yarn} itself, but they can be added at run-time. See {\b Extending.md}Extending {\b Yarn} Spinner"" for more info. \par
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
LICENSE{\tc \v LICENSE}\par \pard\plain 
{\bkmkstart AAAAAAABGZ}
{\bkmkend AAAAAAABGZ}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The MIT License (MIT)\par
Copyright (c) 2015-2017 Secret Lab Pty. Ltd. and {\b Yarn} Spinner contributors.\par
Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\par
The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\par
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\par
This software contains third-party code: Unity Test Tools (MIT license), NUnit (BSD license), NSubstitute (BSD license) and Cecil (MIT/X11 license). For more information, see the {\f2 Unity Test Tools license file}. \par
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Yarn Spinner{\tc \v Yarn Spinner}\par \pard\plain 
{\bkmkstart AAAAAAABHA}
{\bkmkend AAAAAAABHA}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{\b {\b Yarn} Spinner}  is an interpreter for the {\f2 Yarn} language, written in C#.\par
{\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid {\b New!}  Join our {\f2 narrative game development} Slack! {\b New!}  Continual integration {\f2 API documentation} now available\par
}{\b Yarn} is a language that's designed to make it {\i super easy}  to create interactive dialogue for games. {\b Yarn}'s very similar in style to {\f2 Twine}, so if you already know that, you'll be right at home! If you don't, that's cool - {\b Yarn}'s syntax is extremely minimal, and there's not much there to learn. The {\b Yarn} language is used in a number of cool games, including {\f2 Night In The Woods} and {\f2 Knights and Bikes}.\par
{\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid ***Important:*** {\b Yarn} Spinner is still under development, and we haven't made our 1.0 release yet. It's {\i probably}  fine to use right now, but there are a few bits and pieces that might change between now and first release.\par
}{\f2 ![Build Status](https://travis-ci.org/thesecretlab/YarnSpinner.svg?branch=master)}\par
{\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid (Image from "[Night in the Woods](http://nightinthewoods.com)" by Scott Benson, Bethany Hockenberry and Alec Holowka. Used with permission.)\par
}{\b Yarn} Spinner is designed to be easy to add to Unity games, but it's also intended for use in other contexts as well.\par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}Quick Start\par}
{
\par
\pard\plain \s90\fi-360\li360\widctlpar\fs20\cgrid 
1.\tab Download the {\f2 Yarn editor}, so that you can create and edit {\b Yarn} files.\par}
{
\par
\pard\plain \s90\fi-360\li360\widctlpar\fs20\cgrid 
1.\tab Create a new project in {\f2 Unity}.\par
\pard\plain \s90\fi-360\li360\widctlpar\fs20\cgrid 
2.\tab Download the {\f2 latest release's Unity package}.\par
\pard\plain \s90\fi-360\li360\widctlpar\fs20\cgrid 
3.\tab Import the package.\par
\pard\plain \s90\fi-360\li360\widctlpar\fs20\cgrid 
4.\tab Go to the {\f2 {\b Yarn} Spinner/Examples/}  folder in Unity, and open one of the demo scenes.\par
\pard\plain \s90\fi-360\li360\widctlpar\fs20\cgrid 
5.\tab Run the game, and poke around!\par}
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}What To Do Next\par}
{
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\f2 Download Yarn Spinner.}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Learn how to build Yarn Spinner from source.}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\f2 Learn more about Yarn, and the Yarn editor.}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Learn more about writing dialogue in Yarn.}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Learn about using Yarn Spinner in your Unity game.}\par}
{\f2 }\par
We also produced a training video on integrating and using the basics of {\b Yarn} Spinner in Unity games, {\f2 available commercially from O'Reilly Media} (and {\f2 also on Safari}).\par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}License\par}
{\b Yarn} Spinner is available under the {\b MIT License}. This means that you can use it in any commercial or noncommercial project. The only requirement is that you need to include attribution in your game's docs. A credit would be very, very nice, too, but isn't required.\par
{
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\f2 Learn more about what this license lets you do}.\par}
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}Made by Secret Lab!\par}
{\b Yarn} Spinner was originally created by {\f2 Secret Lab}, an Australian game dev studio! {\f2 Come say hi}! You can visit the {\f2 Yarn Spinner page} on the Secret Lab website for a little more info, and to donate to {\b Yarn} Spinner open source development at Secret Lab.\par
The awesome {\f2 logo} was made by the excellent {\f2 Rex Smeal}, and is under the {\f2 Creative Commons Attribution-ShareAlike 4.0 International License}.\par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl \v 4}Help Us Make {\b Yarn} Spinner!\par}
{\b Yarn} Spinner needs your help to be as awesome as it can be! You don't have to be a coder to help out - we'd love to have your help in improving our {\b documentation}, in spreading the word, and in finding bugs.\par
{
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Our {\f2 issues page} contains a list of things we'd love your help in improving.\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Hop into our IRC channel, which is {\f2 #yarnspinner on Freenode}, to chat to the team, lend a hand, or ask questions.\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b New!}  Join our {\f2 narrative game development} Slack!\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b New!}  Continual integration {\f2 API documentation} now available\par}
If you want to contribute to {\b Yarn} Spinner (!!), {\b go read our contributor's guide!} \par
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Namespace Index\par \pard\plain 
{\tc \v Namespace Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Packages\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here are the packages with brief descriptions (if available):}
{
\par
\pard\plain \s71\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b Json} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b NUnitLite} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b NUnitLite.Tests} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Yarn} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Yarn.Analysis} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Yarn.Unity} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABAR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Yarn.Unity.Example} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABDI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b YarnSpinner} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABER \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b YarnSpinner.Tests} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABES \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Hierarchical Index\par \pard\plain 
{\tc \v Hierarchical Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Class Hierarchy\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This inheritance list is sorted roughly, but not completely, alphabetically:}
{
\par
\pard\plain \s71\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
Yarn.Analysis.ASTAnalyser\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABAH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Attribute
{
\par
\pard\plain \s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
Yarn.Unity.YarnCommandAttribute\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABBQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
Yarn.Unity.YarnSpinnerEditorWindow.CheckerResult\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABCH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Yarn.Parser.IfStatement.Clause\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Yarn.Command\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Yarn.Analysis.CompiledProgramAnalyser\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABAJ \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
Yarn.Analysis.UnusedVariableChecker\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABAN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
Yarn.Compiler.CompileFlags\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Yarn.Compiler\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Yarn.Analysis.Context\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABAA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ExampleVariableStorage.DefaultVariable\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Yarn.Unity.YarnSpinnerEditorWindow.Deprecation\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABCT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Yarn.Analysis.Diagnosis\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Yarn.Dialogue\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
EditorWindow
{
\par
\pard\plain \s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
Yarn.Unity.YarnSpinnerEditorWindow\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABBV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
Exception
{
\par
\pard\plain \s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
Json.InvalidJsonException\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Yarn.ParseException\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Yarn.YarnException\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
Yarn.FunctionInfo\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
IComparable
{
\par
\pard\plain \s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
Yarn.Value\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
IComparable< Value >
{
\par
\pard\plain \s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
Yarn.Value\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
Yarn.Unity.Icons\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABCY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Yarn.Instruction\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
InvalidOperationException
{
\par
\pard\plain \s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
Yarn.TokeniserException\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
Json.JsonParser\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Yarn.Lexer\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Yarn.Lexer.LexerState\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Yarn.Library\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPS \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
Yarn.Dialogue.StandardLibrary\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAND \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
Yarn.Line\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
List< Token >
{
\par
\pard\plain \s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
Yarn.TokenList\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
Yarn.Loader\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
MonoBehaviour
{
\par
\pard\plain \s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
MobileOnly\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Yarn.Unity.DialogueRunner\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABAS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Yarn.Unity.DialogueUIBehaviour\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABBT \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s73\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
TestDialogueUIBehaviour\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Yarn.Unity.Example.ExampleDialogueUI\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABDP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
Yarn.Unity.Example.CameraFollow\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABDJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Yarn.Unity.Example.NPC\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABDZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Yarn.Unity.Example.PlayerCharacter\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABEF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Yarn.Unity.Example.SpriteSwitcher\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABEO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Yarn.Unity.VariableStorageBehaviour\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABBU \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s73\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
ExampleVariableStorage\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
}\par
Yarn.Node\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Yarn.Loader.NodeInfo\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Yarn.Parser.Operator.OperatorInfo\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Yarn.Options\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Yarn.Parser.ParseNode\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATY \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
Yarn.Parser.AssignmentStatement\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Yarn.Parser.Block\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Yarn.Parser.CustomCommand\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Yarn.Parser.Expression\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Yarn.Parser.IfStatement\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Yarn.Parser.Node\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Yarn.Parser.Operator\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Yarn.Parser.OptionStatement\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Yarn.Parser.ShortcutOption\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Yarn.Parser.ShortcutOptionGroup\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Yarn.Parser.Statement\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Yarn.Parser.ValueNode\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
Yarn.Parser\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
NUnitLite.Tests.Program\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Yarn.Program\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
YarnSpinner.Tests.Program\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABET \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Yarn.Dialogue.RunnerResult\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANC \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
Yarn.Dialogue.CommandResult\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Yarn.Dialogue.LineResult\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Yarn.Dialogue.NodeCompleteResult\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Yarn.Dialogue.OptionSetResult\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
Yarn.VirtualMachine.SpecialVariables\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Yarn.Unity.Example.SpriteSwitcher.SpriteInfo\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABEO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Yarn.VirtualMachine.State\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
YarnSpinner.Tests.Test\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABEV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Yarn.Token\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Yarn.Lexer.TokenRule\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Yarn.TreeRunner\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Yarn.Unity.YarnSpinnerEditorWindow.ValidationMessage\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABBV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Yarn.VariableStorage\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKX \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
Yarn.BaseVariableStorage\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALO \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s73\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
Yarn.MemoryVariableStore\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
Yarn.Unity.VariableStorageBehaviour\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABBU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Yarn.YarnSpinnerConsole.ConsoleRunnerImplementation\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
Yarn.VirtualMachine\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Yarn.YarnSpinnerConsole\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
YarnSpinnerTests\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Class Index\par \pard\plain 
{\tc \v Class Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Class List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here are the classes, structs, unions and interfaces with brief descriptions:}
{
\par
\pard\plain \s71\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b Yarn.Parser.AssignmentStatement} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Yarn.Analysis.ASTAnalyser} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABAH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Yarn.BaseVariableStorage} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Yarn.Parser.Block} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Yarn.Unity.Example.CameraFollow} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABDJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Yarn.Unity.YarnSpinnerEditorWindow.CheckerResult} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABCH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Yarn.Parser.IfStatement.Clause} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Yarn.Dialogue.CommandResult} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Yarn.Analysis.CompiledProgramAnalyser} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABAJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Yarn.Compiler} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Yarn.YarnSpinnerConsole.ConsoleRunnerImplementation} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Yarn.Analysis.Context} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABAA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Yarn.Parser.CustomCommand} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Yarn.Unity.YarnSpinnerEditorWindow.Deprecation} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABCT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Yarn.Analysis.Diagnosis} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAZN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Yarn.Dialogue} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Yarn.Unity.DialogueRunner} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABAS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Yarn.Unity.DialogueUIBehaviour} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABBT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Yarn.Unity.Example.ExampleDialogueUI} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABDP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ExampleVariableStorage} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Yarn.Parser.Expression} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Yarn.FunctionInfo} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Yarn.Unity.Icons} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABCY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Yarn.Parser.IfStatement} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Yarn.Instruction} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Json.InvalidJsonException} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exception raised when {\b JsonParser} encounters an invalid token. })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Json.JsonParser} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A parser for JSON. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See Also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid http://json.org\par
}})} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Yarn.Lexer} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Yarn.Lexer.LexerState} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Yarn.Library} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Yarn.Dialogue.LineResult} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Yarn.Loader} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Yarn.MemoryVariableStore} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b MobileOnly} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Yarn.Parser.Node} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Yarn.Dialogue.NodeCompleteResult} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Yarn.Loader.NodeInfo} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Yarn.Unity.Example.NPC} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABDZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Yarn.Parser.Operator} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Yarn.Parser.Operator.OperatorInfo} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Yarn.Dialogue.OptionSetResult} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAMY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Yarn.Parser.OptionStatement} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Yarn.ParseException} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Yarn.Parser.ParseNode} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAATY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Yarn.Parser} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Yarn.Unity.Example.PlayerCharacter} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABEF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b NUnitLite.Tests.Program} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Yarn.Program} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b YarnSpinner.Tests.Program} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABET \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Yarn.Dialogue.RunnerResult} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Yarn.Parser.ShortcutOption} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Yarn.Parser.ShortcutOptionGroup} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Yarn.Unity.Example.SpriteSwitcher} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABEO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Yarn.Dialogue.StandardLibrary} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAND \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Yarn.VirtualMachine.State} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Yarn.Parser.Statement} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b YarnSpinner.Tests.Test} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABEV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b TestDialogueUIBehaviour} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Yarn.Token} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Yarn.TokeniserException} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Yarn.TokenList} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAANS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Yarn.Lexer.TokenRule} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Yarn.TreeRunner} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Yarn.Analysis.UnusedVariableChecker} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABAN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Yarn.Value} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Yarn.Parser.ValueNode} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Yarn.VariableStorage} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Yarn.Unity.VariableStorageBehaviour} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABBU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Yarn.VirtualMachine} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Yarn.Unity.YarnCommandAttribute} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABBQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Yarn.YarnException} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Yarn.YarnSpinnerConsole} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAYU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Yarn.Unity.YarnSpinnerEditorWindow} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABBV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b YarnSpinnerTests} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Index\par \pard\plain 
{\tc \v File Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
File List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here is a list of all files with brief descriptions:}
{
\par
\pard\plain \s71\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b packages/NUnitLite.3.0.1/content/{\b Program.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Unity/Assets/Yarn Spinner/Code/{\b DialogueRunner.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Unity/Assets/Yarn Spinner/Code/Editor/{\b YarnSpinnerEditorWindow.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Unity/Assets/Yarn Spinner/Code/Editor/{\b YarnSpinnerTests.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Unity/Assets/Yarn Spinner/Examples/Demo Scripts/{\b CameraFollow.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Unity/Assets/Yarn Spinner/Examples/Demo Scripts/{\b ExampleDialogueUI.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Unity/Assets/Yarn Spinner/Examples/Demo Scripts/{\b ExampleVariableStorage.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Unity/Assets/Yarn Spinner/Examples/Demo Scripts/{\b MobileOnly.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Unity/Assets/Yarn Spinner/Examples/Demo Scripts/{\b NPC.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Unity/Assets/Yarn Spinner/Examples/Demo Scripts/{\b PlayerCharacter.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b Unity/Assets/Yarn Spinner/Examples/Demo Scripts/{\b SpriteSwitcher.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b YarnSpinner/{\b Analyser.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b YarnSpinner/{\b Compiler.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b YarnSpinner/{\b Dialogue.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b YarnSpinner/{\b JsonParser.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b YarnSpinner/{\b Lexer.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b YarnSpinner/{\b Library.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b YarnSpinner/{\b Loader.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b YarnSpinner/{\b Parser.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b YarnSpinner/{\b TreeRunner.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b YarnSpinner/{\b Value.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b YarnSpinner/{\b VirtualMachine.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b YarnSpinner/obj/Release/{\b .NETFramework,Version=v4.5.AssemblyAttribute.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b YarnSpinner/Properties/{\b AssemblyInfo.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b YarnSpinnerConsole/{\b Main.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b YarnSpinnerConsole/obj/x86/Release/{\b .NETFramework,Version=v4.5.AssemblyAttribute.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b YarnSpinnerConsole/Properties/{\b AssemblyInfo.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b YarnSpinnerTests/{\b Program.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b YarnSpinnerTests/{\b Test.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b YarnSpinnerTests/obj/Release/{\b .NETFramework,Version=v4.5.AssemblyAttribute.cs} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Namespace Documentation\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Package Json\par \pard\plain 
{\tc\tcl2 \v Json}
{\xe \v Json}
{\bkmkstart AAAAAAAAEM}
{\bkmkend AAAAAAAAEM}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b InvalidJsonException}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exception raised when {\b JsonParser} encounters an invalid token. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b JsonParser}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A parser for JSON. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See Also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid http://json.org\par
}}}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b JsonToken} \{ {\b JsonToken.Unknown}, 
{\b JsonToken.LeftBrace}, 
{\b JsonToken.RightBrace}, 
{\b JsonToken.Colon}, 
{\b JsonToken.Comma}, 
{\b JsonToken.LeftBracket}, 
{\b JsonToken.RightBracket}, 
{\b JsonToken.String}, 
{\b JsonToken.Number}, 
{\b JsonToken.True}, 
{\b JsonToken.False}, 
{\b JsonToken.Null}
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Possible JSON tokens in parsed input. }}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v JsonToken\:Json}
{\xe \v Json\:JsonToken}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b Json.JsonToken}}}
\par
{\bkmkstart AAAAAAAAEN}
{\bkmkend AAAAAAAAEN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Possible JSON tokens in parsed input. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{{{\b Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v Unknown\:Json}
{\xe \v Json\:Unknown}
{\b {\i Unknown{\bkmkstart AAAAAAAAEO}
{\bkmkend AAAAAAAAEO}
}}  \par
{\xe \v LeftBrace\:Json}
{\xe \v Json\:LeftBrace}
{\b {\i LeftBrace{\bkmkstart AAAAAAAAEP}
{\bkmkend AAAAAAAAEP}
}}  \par
{\xe \v RightBrace\:Json}
{\xe \v Json\:RightBrace}
{\b {\i RightBrace{\bkmkstart AAAAAAAAEQ}
{\bkmkend AAAAAAAAEQ}
}}  \par
{\xe \v Colon\:Json}
{\xe \v Json\:Colon}
{\b {\i Colon{\bkmkstart AAAAAAAAER}
{\bkmkend AAAAAAAAER}
}}  \par
{\xe \v Comma\:Json}
{\xe \v Json\:Comma}
{\b {\i Comma{\bkmkstart AAAAAAAAES}
{\bkmkend AAAAAAAAES}
}}  \par
{\xe \v LeftBracket\:Json}
{\xe \v Json\:LeftBracket}
{\b {\i LeftBracket{\bkmkstart AAAAAAAAET}
{\bkmkend AAAAAAAAET}
}}  \par
{\xe \v RightBracket\:Json}
{\xe \v Json\:RightBracket}
{\b {\i RightBracket{\bkmkstart AAAAAAAAEU}
{\bkmkend AAAAAAAAEU}
}}  \par
{\xe \v String\:Json}
{\xe \v Json\:String}
{\b {\i String{\bkmkstart AAAAAAAAEV}
{\bkmkend AAAAAAAAEV}
}}  \par
{\xe \v Number\:Json}
{\xe \v Json\:Number}
{\b {\i Number{\bkmkstart AAAAAAAAEW}
{\bkmkend AAAAAAAAEW}
}}  \par
{\xe \v True\:Json}
{\xe \v Json\:True}
{\b {\i True{\bkmkstart AAAAAAAAEX}
{\bkmkend AAAAAAAAEX}
}}  \par
{\xe \v False\:Json}
{\xe \v Json\:False}
{\b {\i False{\bkmkstart AAAAAAAAEY}
{\bkmkend AAAAAAAAEY}
}}  \par
{\xe \v Null\:Json}
{\xe \v Json\:Null}
{\b {\i Null{\bkmkstart AAAAAAAAEZ}
{\bkmkend AAAAAAAAEZ}
}}  \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 23     \{\par
24         Unknown,\par
25         LeftBrace,\par
26         RightBrace,\par
27         Colon,\par
28         Comma,\par
29         LeftBracket,\par
30         RightBracket,\par
31         String,\par
32         Number,\par
33         True,\par
34         False,\par
35         Null\par
36     \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Package NUnitLite\par \pard\plain 
{\tc\tcl2 \v NUnitLite}
{\xe \v NUnitLite}
{\bkmkstart AAAAAAAAGQ}
{\bkmkend AAAAAAAAGQ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Tests}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Package NUnitLite.Tests\par \pard\plain 
{\tc\tcl2 \v NUnitLite.Tests}
{\xe \v NUnitLite.Tests}
{\bkmkstart AAAAAAAAGR}
{\bkmkend AAAAAAAAGR}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Program}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Package Yarn\par \pard\plain 
{\tc\tcl2 \v Yarn}
{\xe \v Yarn}
{\bkmkstart AAAAAAAAGU}
{\bkmkend AAAAAAAAGU}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Analysis}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Unity}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Program}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Node}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Instruction}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Compiler}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b YarnException}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Line}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Options}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Command}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
interface {\b VariableStorage}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b BaseVariableStorage}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Dialogue}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b TokeniserException}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b TokenList}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Token}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Lexer}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b FunctionInfo}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Library}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Loader}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ParseException}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Parser}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b TreeRunner}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b MemoryVariableStore}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Value}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b VirtualMachine}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b YarnSpinnerConsole}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b ByteCode} \{ {\b ByteCode.Label}, 
{\b ByteCode.JumpTo}, 
{\b ByteCode.Jump}, 
{\b ByteCode.RunLine}, 
{\b ByteCode.RunCommand}, 
{\b ByteCode.AddOption}, 
{\b ByteCode.ShowOptions}, 
{\b ByteCode.PushString}, 
{\b ByteCode.PushNumber}, 
{\b ByteCode.PushBool}, 
{\b ByteCode.PushNull}, 
{\b ByteCode.JumpIfFalse}, 
{\b ByteCode.Pop}, 
{\b ByteCode.CallFunc}, 
{\b ByteCode.PushVariable}, 
{\b ByteCode.StoreVariable}, 
{\b ByteCode.Stop}, 
{\b ByteCode.RunNode}
 \}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b TokenType} \{ {\b TokenType.Whitespace}, 
{\b TokenType.Indent}, 
{\b TokenType.Dedent}, 
{\b TokenType.EndOfLine}, 
{\b TokenType.EndOfInput}, 
{\b TokenType.Number}, 
{\b TokenType.String}, 
{\b TokenType.BeginCommand}, 
{\b TokenType.EndCommand}, 
{\b TokenType.Variable}, 
{\b TokenType.ShortcutOption}, 
{\b TokenType.OptionStart}, 
{\b TokenType.OptionDelimit}, 
{\b TokenType.OptionEnd}, 
{\b TokenType.If}, 
{\b TokenType.ElseIf}, 
{\b TokenType.Else}, 
{\b TokenType.EndIf}, 
{\b TokenType.Set}, 
{\b TokenType.True}, 
{\b TokenType.False}, 
{\b TokenType.Null}, 
{\b TokenType.LeftParen}, 
{\b TokenType.RightParen}, 
{\b TokenType.Comma}, 
{\b TokenType.EqualTo}, 
{\b TokenType.GreaterThan}, 
{\b TokenType.GreaterThanOrEqualTo}, 
{\b TokenType.LessThan}, 
{\b TokenType.LessThanOrEqualTo}, 
{\b TokenType.NotEqualTo}, 
{\b TokenType.Or}, 
{\b TokenType.And}, 
{\b TokenType.Xor}, 
{\b TokenType.Not}, 
{\b TokenType.EqualToOrAssign}, 
{\b TokenType.UnaryMinus}, 
{\b TokenType.Add}, 
{\b TokenType.Minus}, 
{\b TokenType.Multiply}, 
{\b TokenType.Divide}, 
{\b TokenType.AddAssign}, 
{\b TokenType.MinusAssign}, 
{\b TokenType.MultiplyAssign}, 
{\b TokenType.DivideAssign}, 
{\b TokenType.Comment}, 
{\b TokenType.Identifier}, 
{\b TokenType.Text}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
delegate void {\b OptionChooser} (int selectedOptionIndex)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
delegate void {\b Logger} (string message)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
delegate Object {\b ReturningFunction} (params {\b Value}[] parameters)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
delegate void {\b Function} (params {\b Value}[] parameters)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Class Documentation\par
\pard\plain 
{\xe \v Yarn::Node}
{\bkmkstart AAAAAAAABH}
{\bkmkend AAAAAAAABH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
class Yarn::Node\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
Collaboration diagram for Yarn.Node:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d1/d0d/a00171.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Class Members:\par}
\pard\plain \s60\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr List< {\b Instruction} >{\bkmkstart AAAAAAAABI}
{\bkmkend AAAAAAAABI}
\cell }{instructions\cell }{\cell }{\row }
{\qr Dictionary< string, int >{\bkmkstart AAAAAAAABJ}
{\bkmkend AAAAAAAABJ}
\cell }{labels\cell }{\cell }{\row }
{\qr string{\bkmkstart AAAAAAAABK}
{\bkmkend AAAAAAAABK}
\cell }{name\cell }{\cell }{\row }
{\qr string{\bkmkstart AAAAAAAABL}
{\bkmkend AAAAAAAABL}
\cell }{sourceTextStringID\cell }{\cell }{\row }
}
{\xe \v Yarn::Line}
{\bkmkstart AAAAAAAABP}
{\bkmkend AAAAAAAABP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
struct Yarn::Line\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
Collaboration diagram for Yarn.Line:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d7/d3f/a00173.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Class Members:\par}
\pard\plain \s60\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr string{\bkmkstart AAAAAAAABQ}
{\bkmkend AAAAAAAABQ}
\cell }{text\cell }{\cell }{\row }
}
{\xe \v Yarn::Options}
{\bkmkstart AAAAAAAABR}
{\bkmkend AAAAAAAABR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
struct Yarn::Options\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
Collaboration diagram for Yarn.Options:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d8/df1/a00174.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Class Members:\par}
\pard\plain \s60\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr IList< string >{\bkmkstart AAAAAAAABS}
{\bkmkend AAAAAAAABS}
\cell }{options\cell }{\cell }{\row }
}
{\xe \v Yarn::Command}
{\bkmkstart AAAAAAAABT}
{\bkmkend AAAAAAAABT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
struct Yarn::Command\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
Collaboration diagram for Yarn.Command:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "de/d45/a00175.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Class Members:\par}
\pard\plain \s60\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr string{\bkmkstart AAAAAAAABU}
{\bkmkend AAAAAAAABU}
\cell }{text\cell }{\cell }{\row }
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v ByteCode\:Yarn}
{\xe \v Yarn\:ByteCode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b Yarn.ByteCode}{\f2 [package]}}}
\par
{\bkmkstart AAAAAAAAGV}
{\bkmkend AAAAAAAAGV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v Label\:Yarn}
{\xe \v Yarn\:Label}
{\b {\i Label{\bkmkstart AAAAAAAAGW}
{\bkmkend AAAAAAAAGW}
}}  \par
{\xe \v JumpTo\:Yarn}
{\xe \v Yarn\:JumpTo}
{\b {\i JumpTo{\bkmkstart AAAAAAAAGX}
{\bkmkend AAAAAAAAGX}
}}  \par
{\xe \v Jump\:Yarn}
{\xe \v Yarn\:Jump}
{\b {\i Jump{\bkmkstart AAAAAAAAGY}
{\bkmkend AAAAAAAAGY}
}}  \par
{\xe \v RunLine\:Yarn}
{\xe \v Yarn\:RunLine}
{\b {\i RunLine{\bkmkstart AAAAAAAAGZ}
{\bkmkend AAAAAAAAGZ}
}}  \par
{\xe \v RunCommand\:Yarn}
{\xe \v Yarn\:RunCommand}
{\b {\i RunCommand{\bkmkstart AAAAAAAAHA}
{\bkmkend AAAAAAAAHA}
}}  \par
{\xe \v AddOption\:Yarn}
{\xe \v Yarn\:AddOption}
{\b {\i AddOption{\bkmkstart AAAAAAAAHB}
{\bkmkend AAAAAAAAHB}
}}  \par
{\xe \v ShowOptions\:Yarn}
{\xe \v Yarn\:ShowOptions}
{\b {\i ShowOptions{\bkmkstart AAAAAAAAHC}
{\bkmkend AAAAAAAAHC}
}}  \par
{\xe \v PushString\:Yarn}
{\xe \v Yarn\:PushString}
{\b {\i PushString{\bkmkstart AAAAAAAAHD}
{\bkmkend AAAAAAAAHD}
}}  \par
{\xe \v PushNumber\:Yarn}
{\xe \v Yarn\:PushNumber}
{\b {\i PushNumber{\bkmkstart AAAAAAAAHE}
{\bkmkend AAAAAAAAHE}
}}  \par
{\xe \v PushBool\:Yarn}
{\xe \v Yarn\:PushBool}
{\b {\i PushBool{\bkmkstart AAAAAAAAHF}
{\bkmkend AAAAAAAAHF}
}}  \par
{\xe \v PushNull\:Yarn}
{\xe \v Yarn\:PushNull}
{\b {\i PushNull{\bkmkstart AAAAAAAAHG}
{\bkmkend AAAAAAAAHG}
}}  \par
{\xe \v JumpIfFalse\:Yarn}
{\xe \v Yarn\:JumpIfFalse}
{\b {\i JumpIfFalse{\bkmkstart AAAAAAAAHH}
{\bkmkend AAAAAAAAHH}
}}  \par
{\xe \v Pop\:Yarn}
{\xe \v Yarn\:Pop}
{\b {\i Pop{\bkmkstart AAAAAAAAHI}
{\bkmkend AAAAAAAAHI}
}}  \par
{\xe \v CallFunc\:Yarn}
{\xe \v Yarn\:CallFunc}
{\b {\i CallFunc{\bkmkstart AAAAAAAAHJ}
{\bkmkend AAAAAAAAHJ}
}}  \par
{\xe \v PushVariable\:Yarn}
{\xe \v Yarn\:PushVariable}
{\b {\i PushVariable{\bkmkstart AAAAAAAAHK}
{\bkmkend AAAAAAAAHK}
}}  \par
{\xe \v StoreVariable\:Yarn}
{\xe \v Yarn\:StoreVariable}
{\b {\i StoreVariable{\bkmkstart AAAAAAAAHL}
{\bkmkend AAAAAAAAHL}
}}  \par
{\xe \v Stop\:Yarn}
{\xe \v Yarn\:Stop}
{\b {\i Stop{\bkmkstart AAAAAAAAHM}
{\bkmkend AAAAAAAAHM}
}}  \par
{\xe \v RunNode\:Yarn}
{\xe \v Yarn\:RunNode}
{\b {\i RunNode{\bkmkstart AAAAAAAAHN}
{\bkmkend AAAAAAAAHN}
}}  \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 214                            \{\par
215         \par
216         Label,              // opA = string: label name\par
217         JumpTo,             // opA = string: label name\par
218         Jump,               // peek string from stack and jump to that label\par
219         RunLine,            // opA = int: string number\par
220         RunCommand,         // opA = string: command text\par
221         AddOption,          // opA = int: string number for option to add\par
222         ShowOptions,        // present the current list of options, then clear the list; most recently selected option will be on the top of the stack\par
223         PushString,         // opA = int: string number in table; push string to stack\par
224         PushNumber,         // opA = float: number to push to stack\par
225         PushBool,           // opA = int (0 or 1): bool to push to stack\par
226         PushNull,           // pushes a null value onto the stack\par
227         JumpIfFalse,        // opA = string: label name if top of stack is not null, zero or false, jumps to that label\par
228         Pop,                // discard top of stack\par
229         CallFunc,           // opA = string; looks up function, pops as many arguments as needed, result is pushed to stack\par
230         PushVariable,               // opA = name of variable to get value of and push to stack\par
231         StoreVariable,              // opA = name of variable to store top of stack in\par
232         Stop,               // stops execution\par
233         RunNode             // run the node whose name is at the top of the stack\par
234 \par
235     \}\par
}
}
{\xe \v TokenType\:Yarn}
{\xe \v Yarn\:TokenType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b Yarn.TokenType}{\f2 [package]}}}
\par
{\bkmkstart AAAAAAAAHO}
{\bkmkend AAAAAAAAHO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v Whitespace\:Yarn}
{\xe \v Yarn\:Whitespace}
{\b {\i Whitespace{\bkmkstart AAAAAAAAHP}
{\bkmkend AAAAAAAAHP}
}}  \par
{\xe \v Indent\:Yarn}
{\xe \v Yarn\:Indent}
{\b {\i Indent{\bkmkstart AAAAAAAAHQ}
{\bkmkend AAAAAAAAHQ}
}}  \par
{\xe \v Dedent\:Yarn}
{\xe \v Yarn\:Dedent}
{\b {\i Dedent{\bkmkstart AAAAAAAAHR}
{\bkmkend AAAAAAAAHR}
}}  \par
{\xe \v EndOfLine\:Yarn}
{\xe \v Yarn\:EndOfLine}
{\b {\i EndOfLine{\bkmkstart AAAAAAAAHS}
{\bkmkend AAAAAAAAHS}
}}  \par
{\xe \v EndOfInput\:Yarn}
{\xe \v Yarn\:EndOfInput}
{\b {\i EndOfInput{\bkmkstart AAAAAAAAHT}
{\bkmkend AAAAAAAAHT}
}}  \par
{\xe \v Number\:Yarn}
{\xe \v Yarn\:Number}
{\b {\i Number{\bkmkstart AAAAAAAAHU}
{\bkmkend AAAAAAAAHU}
}}  \par
{\xe \v String\:Yarn}
{\xe \v Yarn\:String}
{\b {\i String{\bkmkstart AAAAAAAAHV}
{\bkmkend AAAAAAAAHV}
}}  \par
{\xe \v BeginCommand\:Yarn}
{\xe \v Yarn\:BeginCommand}
{\b {\i BeginCommand{\bkmkstart AAAAAAAAHW}
{\bkmkend AAAAAAAAHW}
}}  \par
{\xe \v EndCommand\:Yarn}
{\xe \v Yarn\:EndCommand}
{\b {\i EndCommand{\bkmkstart AAAAAAAAHX}
{\bkmkend AAAAAAAAHX}
}}  \par
{\xe \v Variable\:Yarn}
{\xe \v Yarn\:Variable}
{\b {\i Variable{\bkmkstart AAAAAAAAHY}
{\bkmkend AAAAAAAAHY}
}}  \par
{\xe \v ShortcutOption\:Yarn}
{\xe \v Yarn\:ShortcutOption}
{\b {\i ShortcutOption{\bkmkstart AAAAAAAAHZ}
{\bkmkend AAAAAAAAHZ}
}}  \par
{\xe \v OptionStart\:Yarn}
{\xe \v Yarn\:OptionStart}
{\b {\i OptionStart{\bkmkstart AAAAAAAAIA}
{\bkmkend AAAAAAAAIA}
}}  \par
{\xe \v OptionDelimit\:Yarn}
{\xe \v Yarn\:OptionDelimit}
{\b {\i OptionDelimit{\bkmkstart AAAAAAAAIB}
{\bkmkend AAAAAAAAIB}
}}  \par
{\xe \v OptionEnd\:Yarn}
{\xe \v Yarn\:OptionEnd}
{\b {\i OptionEnd{\bkmkstart AAAAAAAAIC}
{\bkmkend AAAAAAAAIC}
}}  \par
{\xe \v If\:Yarn}
{\xe \v Yarn\:If}
{\b {\i If{\bkmkstart AAAAAAAAID}
{\bkmkend AAAAAAAAID}
}}  \par
{\xe \v ElseIf\:Yarn}
{\xe \v Yarn\:ElseIf}
{\b {\i ElseIf{\bkmkstart AAAAAAAAIE}
{\bkmkend AAAAAAAAIE}
}}  \par
{\xe \v Else\:Yarn}
{\xe \v Yarn\:Else}
{\b {\i Else{\bkmkstart AAAAAAAAIF}
{\bkmkend AAAAAAAAIF}
}}  \par
{\xe \v EndIf\:Yarn}
{\xe \v Yarn\:EndIf}
{\b {\i EndIf{\bkmkstart AAAAAAAAIG}
{\bkmkend AAAAAAAAIG}
}}  \par
{\xe \v Set\:Yarn}
{\xe \v Yarn\:Set}
{\b {\i Set{\bkmkstart AAAAAAAAIH}
{\bkmkend AAAAAAAAIH}
}}  \par
{\xe \v True\:Yarn}
{\xe \v Yarn\:True}
{\b {\i True{\bkmkstart AAAAAAAAII}
{\bkmkend AAAAAAAAII}
}}  \par
{\xe \v False\:Yarn}
{\xe \v Yarn\:False}
{\b {\i False{\bkmkstart AAAAAAAAIJ}
{\bkmkend AAAAAAAAIJ}
}}  \par
{\xe \v Null\:Yarn}
{\xe \v Yarn\:Null}
{\b {\i Null{\bkmkstart AAAAAAAAIK}
{\bkmkend AAAAAAAAIK}
}}  \par
{\xe \v LeftParen\:Yarn}
{\xe \v Yarn\:LeftParen}
{\b {\i LeftParen{\bkmkstart AAAAAAAAIL}
{\bkmkend AAAAAAAAIL}
}}  \par
{\xe \v RightParen\:Yarn}
{\xe \v Yarn\:RightParen}
{\b {\i RightParen{\bkmkstart AAAAAAAAIM}
{\bkmkend AAAAAAAAIM}
}}  \par
{\xe \v Comma\:Yarn}
{\xe \v Yarn\:Comma}
{\b {\i Comma{\bkmkstart AAAAAAAAIN}
{\bkmkend AAAAAAAAIN}
}}  \par
{\xe \v EqualTo\:Yarn}
{\xe \v Yarn\:EqualTo}
{\b {\i EqualTo{\bkmkstart AAAAAAAAIO}
{\bkmkend AAAAAAAAIO}
}}  \par
{\xe \v GreaterThan\:Yarn}
{\xe \v Yarn\:GreaterThan}
{\b {\i GreaterThan{\bkmkstart AAAAAAAAIP}
{\bkmkend AAAAAAAAIP}
}}  \par
{\xe \v GreaterThanOrEqualTo\:Yarn}
{\xe \v Yarn\:GreaterThanOrEqualTo}
{\b {\i GreaterThanOrEqualTo{\bkmkstart AAAAAAAAIQ}
{\bkmkend AAAAAAAAIQ}
}}  \par
{\xe \v LessThan\:Yarn}
{\xe \v Yarn\:LessThan}
{\b {\i LessThan{\bkmkstart AAAAAAAAIR}
{\bkmkend AAAAAAAAIR}
}}  \par
{\xe \v LessThanOrEqualTo\:Yarn}
{\xe \v Yarn\:LessThanOrEqualTo}
{\b {\i LessThanOrEqualTo{\bkmkstart AAAAAAAAIS}
{\bkmkend AAAAAAAAIS}
}}  \par
{\xe \v NotEqualTo\:Yarn}
{\xe \v Yarn\:NotEqualTo}
{\b {\i NotEqualTo{\bkmkstart AAAAAAAAIT}
{\bkmkend AAAAAAAAIT}
}}  \par
{\xe \v Or\:Yarn}
{\xe \v Yarn\:Or}
{\b {\i Or{\bkmkstart AAAAAAAAIU}
{\bkmkend AAAAAAAAIU}
}}  \par
{\xe \v And\:Yarn}
{\xe \v Yarn\:And}
{\b {\i And{\bkmkstart AAAAAAAAIV}
{\bkmkend AAAAAAAAIV}
}}  \par
{\xe \v Xor\:Yarn}
{\xe \v Yarn\:Xor}
{\b {\i Xor{\bkmkstart AAAAAAAAIW}
{\bkmkend AAAAAAAAIW}
}}  \par
{\xe \v Not\:Yarn}
{\xe \v Yarn\:Not}
{\b {\i Not{\bkmkstart AAAAAAAAIX}
{\bkmkend AAAAAAAAIX}
}}  \par
{\xe \v EqualToOrAssign\:Yarn}
{\xe \v Yarn\:EqualToOrAssign}
{\b {\i EqualToOrAssign{\bkmkstart AAAAAAAAIY}
{\bkmkend AAAAAAAAIY}
}}  \par
{\xe \v UnaryMinus\:Yarn}
{\xe \v Yarn\:UnaryMinus}
{\b {\i UnaryMinus{\bkmkstart AAAAAAAAIZ}
{\bkmkend AAAAAAAAIZ}
}}  \par
{\xe \v Add\:Yarn}
{\xe \v Yarn\:Add}
{\b {\i Add{\bkmkstart AAAAAAAAJA}
{\bkmkend AAAAAAAAJA}
}}  \par
{\xe \v Minus\:Yarn}
{\xe \v Yarn\:Minus}
{\b {\i Minus{\bkmkstart AAAAAAAAJB}
{\bkmkend AAAAAAAAJB}
}}  \par
{\xe \v Multiply\:Yarn}
{\xe \v Yarn\:Multiply}
{\b {\i Multiply{\bkmkstart AAAAAAAAJC}
{\bkmkend AAAAAAAAJC}
}}  \par
{\xe \v Divide\:Yarn}
{\xe \v Yarn\:Divide}
{\b {\i Divide{\bkmkstart AAAAAAAAJD}
{\bkmkend AAAAAAAAJD}
}}  \par
{\xe \v AddAssign\:Yarn}
{\xe \v Yarn\:AddAssign}
{\b {\i AddAssign{\bkmkstart AAAAAAAAJE}
{\bkmkend AAAAAAAAJE}
}}  \par
{\xe \v MinusAssign\:Yarn}
{\xe \v Yarn\:MinusAssign}
{\b {\i MinusAssign{\bkmkstart AAAAAAAAJF}
{\bkmkend AAAAAAAAJF}
}}  \par
{\xe \v MultiplyAssign\:Yarn}
{\xe \v Yarn\:MultiplyAssign}
{\b {\i MultiplyAssign{\bkmkstart AAAAAAAAJG}
{\bkmkend AAAAAAAAJG}
}}  \par
{\xe \v DivideAssign\:Yarn}
{\xe \v Yarn\:DivideAssign}
{\b {\i DivideAssign{\bkmkstart AAAAAAAAJH}
{\bkmkend AAAAAAAAJH}
}}  \par
{\xe \v Comment\:Yarn}
{\xe \v Yarn\:Comment}
{\b {\i Comment{\bkmkstart AAAAAAAAJI}
{\bkmkend AAAAAAAAJI}
}}  \par
{\xe \v Identifier\:Yarn}
{\xe \v Yarn\:Identifier}
{\b {\i Identifier{\bkmkstart AAAAAAAAJJ}
{\bkmkend AAAAAAAAJJ}
}}  \par
{\xe \v Text\:Yarn}
{\xe \v Yarn\:Text}
{\b {\i Text{\bkmkstart AAAAAAAAJK}
{\bkmkend AAAAAAAAJK}
}}  \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 79                             \{\par
80 \par
81 \par
82         \par
83         // Special tokens\par
84         Whitespace,\par
85         Indent,\par
86         Dedent,\par
87         EndOfLine,\par
88         EndOfInput,\par
89 \par
90         // Numbers. Everybody loves a number\par
91         Number,\par
92 \par
93         // Strings. Everybody also loves a string\par
94         String,\par
95 \par
96         // Command syntax ("<<foo>>")\par
97         BeginCommand,\par
98         EndCommand,\par
99 \par
100         // Variables ("$foo")\par
101         Variable,\par
102 \par
103         // Shortcut syntax ("->")\par
104         ShortcutOption,\par
105 \par
106         // Option syntax ("[[Let's go here|Destination]]")\par
107         OptionStart, // [[\par
108         OptionDelimit, // |\par
109         OptionEnd, // ]]\par
110 \par
111         // Command types (specially recognised command word)\par
112         If,\par
113         ElseIf,\par
114         Else,\par
115         EndIf,\par
116         Set,\par
117 \par
118         // Boolean values\par
119         True,\par
120         False,\par
121 \par
122         // The null value\par
123         Null,\par
124 \par
125         // Parentheses\par
126         LeftParen,\par
127         RightParen,\par
128 \par
129         // Parameter delimiters\par
130         Comma,\par
131 \par
132         // Operators\par
133         EqualTo, // ==, eq, is\par
134         GreaterThan, // >, gt\par
135         GreaterThanOrEqualTo, // >=, gte\par
136         LessThan, // <, lt\par
137         LessThanOrEqualTo, // <=, lte\par
138         NotEqualTo, // !=, neq\par
139 \par
140         // Logical operators\par
141         Or, // ||, or\par
142         And, // &&, and\par
143         Xor, // ^, xor\par
144         Not, // !, not\par
145 \par
146 \par
147         // this guy's special because '=' can mean either 'equal to' \par
148         // or 'becomes' depending on context\par
149         EqualToOrAssign, // =, to\par
150 \par
151         UnaryMinus, // -; this is differentiated from Minus \par
152                     // when parsing expressions\par
153 \par
154         Add, // +\par
155         Minus, // -\par
156         Multiply, // *\par
157         Divide, // /\par
158         \par
159         AddAssign, // +=\par
160         MinusAssign, // -=\par
161         MultiplyAssign, // *=\par
162         DivideAssign, // /=\par
163 \par
164         Comment, // a run of text that we ignore\par
165 \par
166         Identifier, // a single word (used for functions)\par
167 \par
168         Text // a run of text until we hit other syntax\par
169     \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v Function\:Yarn}
{\xe \v Yarn\:Function}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
delegate void Yarn.Function (params Value[] {\i parameters})}}
\par
{\bkmkstart AAAAAAAAJL}
{\bkmkend AAAAAAAAJL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Logger\:Yarn}
{\xe \v Yarn\:Logger}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
delegate void Yarn.Logger (string {\i message})}}
\par
{\bkmkstart AAAAAAAAJM}
{\bkmkend AAAAAAAAJM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v OptionChooser\:Yarn}
{\xe \v Yarn\:OptionChooser}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
delegate void Yarn.OptionChooser (int {\i selectedOptionIndex})}}
\par
{\bkmkstart AAAAAAAAJN}
{\bkmkend AAAAAAAAJN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ReturningFunction\:Yarn}
{\xe \v Yarn\:ReturningFunction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
delegate Object Yarn.ReturningFunction (params Value[] {\i parameters})}}
\par
{\bkmkstart AAAAAAAAJO}
{\bkmkend AAAAAAAAJO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Package Yarn.Analysis\par \pard\plain 
{\tc\tcl2 \v Yarn.Analysis}
{\xe \v Yarn.Analysis}
{\bkmkstart AAAAAAAAZM}
{\bkmkend AAAAAAAAZM}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Diagnosis}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Context}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ASTAnalyser}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CompiledProgramAnalyser}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b UnusedVariableChecker}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Package Yarn.Unity\par \pard\plain 
{\tc\tcl2 \v Yarn.Unity}
{\xe \v Yarn.Unity}
{\bkmkstart AAAAAAABAR}
{\bkmkend AAAAAAABAR}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Example}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b DialogueRunner}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b YarnCommandAttribute}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b DialogueUIBehaviour}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b VariableStorageBehaviour}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b YarnSpinnerEditorWindow}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Icons}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Package Yarn.Unity.Example\par \pard\plain 
{\tc\tcl2 \v Yarn.Unity.Example}
{\xe \v Yarn.Unity.Example}
{\bkmkstart AAAAAAABDI}
{\bkmkend AAAAAAABDI}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CameraFollow}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ExampleDialogueUI}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b NPC}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b PlayerCharacter}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SpriteSwitcher}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Package YarnSpinner\par \pard\plain 
{\tc\tcl2 \v YarnSpinner}
{\xe \v YarnSpinner}
{\bkmkstart AAAAAAABER}
{\bkmkend AAAAAAABER}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Tests}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Package YarnSpinner.Tests\par \pard\plain 
{\tc\tcl2 \v YarnSpinner.Tests}
{\xe \v YarnSpinner.Tests}
{\bkmkstart AAAAAAABES}
{\bkmkend AAAAAAABES}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Program}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Test}\par
}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Class Documentation{\tc \v Class Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Yarn.Parser.AssignmentStatement Class Reference\par \pard\plain 
{\tc\tcl2 \v Yarn.Parser.AssignmentStatement}
{\xe \v Yarn.Parser.AssignmentStatement}
{\bkmkstart AAAAAAAAQX}
{\bkmkend AAAAAAAAQX}
Inheritance diagram for Yarn.Parser.AssignmentStatement:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d7/d2f/a00258.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for Yarn.Parser.AssignmentStatement:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d0/d2f/a00259.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b ToString} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Package Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b AssignmentStatement} ({\b ParseNode} {\b parent}, {\b Parser} p)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b PrintTree} (int indentLevel)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Node} {\b NodeParent} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Package Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b CanParse} ({\b Parser} p)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b destinationVariableName}{\f2  [get, set]}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Expression} {\b valueExpression}{\f2  [get, set]}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TokenType} {\b operation}{\f2  [get, set]}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b TokenType}[] {\b validOperators}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v AssignmentStatement\:Yarn::Parser::AssignmentStatement}
{\xe \v Yarn::Parser::AssignmentStatement\:AssignmentStatement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Yarn.Parser.AssignmentStatement.AssignmentStatement ({\b ParseNode} {\i parent}, {\b Parser} {\i p}){\f2 [package]}}}
\par
{\bkmkstart AAAAAAAAQY}
{\bkmkend AAAAAAAAQY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1098                                                                      : base(parent, p) \{\par
1099 \par
1100                 p.ExpectSymbol(TokenType.BeginCommand);\par
1101                 p.ExpectSymbol(TokenType.Set);\par
1102                 destinationVariableName = p.ExpectSymbol(TokenType.Variable).value as string;\par
1103                 operation = p.ExpectSymbol(validOperators).type;\par
1104                 valueExpression = Expression.Parse(this, p);\par
1105                 p.ExpectSymbol(TokenType.EndCommand);\par
1106 \par
1107             \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v CanParse\:Yarn::Parser::AssignmentStatement}
{\xe \v Yarn::Parser::AssignmentStatement\:CanParse}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static bool Yarn.Parser.AssignmentStatement.CanParse ({\b Parser} {\i p}){\f2 [static]}, {\f2 [package]}}}
\par
{\bkmkstart AAAAAAAAQZ}
{\bkmkend AAAAAAAAQZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1080             \{\par
1081                 return p.NextSymbolsAre (TokenType.BeginCommand, TokenType.Set);\par
1082             \}\par
}
}
{\xe \v NodeParent\:Yarn::Parser::AssignmentStatement}
{\xe \v Yarn::Parser::AssignmentStatement\:NodeParent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Node} Yarn.Parser.ParseNode.NodeParent (){\f2 [package]}, {\f2 [inherited]}}}
\par
{\bkmkstart AAAAAAAARA}
{\bkmkend AAAAAAAARA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 116                                        \{\par
117                 var node = this;\par
118 \par
119                 do \{\par
120                     if (node is Node) \{\par
121                         return node as Node;\par
122                     \}\par
123                     node = node.parent;\par
124                 \} while (node \par
125                     != null);                   \par
126 \par
127                 return null;\par
128             \}\par
}
}
{\xe \v PrintTree\:Yarn::Parser::AssignmentStatement}
{\xe \v Yarn::Parser::AssignmentStatement\:PrintTree}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string Yarn.Parser.AssignmentStatement.PrintTree (int {\i indentLevel}){\f2 [package]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAARB}
{\bkmkend AAAAAAAARB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Yarn.Parser.ParseNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAARC \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1110             \{\par
1111                 var sb = new StringBuilder ();\par
1112                 sb.Append (Tab(indentLevel, "Set:"));\par
1113                 sb.Append (Tab(indentLevel+1, destinationVariableName));\par
1114                 sb.Append (Tab (indentLevel+1,  operation.ToString()));\par
1115                 sb.Append (valueExpression.PrintTree (indentLevel + 1));\par
1116                 return sb.ToString ();\par
1117 \par
1118             \}\par
}
}
{\xe \v ToString\:Yarn::Parser::AssignmentStatement}
{\xe \v Yarn::Parser::AssignmentStatement\:ToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string Yarn.Parser.ParseNode.ToString (){\f2 [inherited]}}}
\par
{\bkmkstart AAAAAAAARD}
{\bkmkend AAAAAAAARD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 111             \{\par
112                 return this.GetType ().Name;\par
113             \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v validOperators\:Yarn::Parser::AssignmentStatement}
{\xe \v Yarn::Parser::AssignmentStatement\:validOperators}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TokenType} [] Yarn.Parser.AssignmentStatement.validOperators{\f2 [static]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAAARE}
{\bkmkend AAAAAAAARE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = \{\par
                TokenType.EqualToOrAssign,\par
                TokenType.AddAssign,\par
                TokenType.MinusAssign,\par
                TokenType.DivideAssign,\par
                TokenType.MultiplyAssign\par
            \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v destinationVariableName\:Yarn::Parser::AssignmentStatement}
{\xe \v Yarn::Parser::AssignmentStatement\:destinationVariableName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string Yarn.Parser.AssignmentStatement.destinationVariableName{\f2 [get]}, {\f2 [set]}, {\f2 [package]}}}
\par
{\bkmkstart AAAAAAAARF}
{\bkmkend AAAAAAAARF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v operation\:Yarn::Parser::AssignmentStatement}
{\xe \v Yarn::Parser::AssignmentStatement\:operation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TokenType} Yarn.Parser.AssignmentStatement.operation{\f2 [get]}, {\f2 [set]}, {\f2 [package]}}}
\par
{\bkmkstart AAAAAAAARG}
{\bkmkend AAAAAAAARG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v valueExpression\:Yarn::Parser::AssignmentStatement}
{\xe \v Yarn::Parser::AssignmentStatement\:valueExpression}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Expression} Yarn.Parser.AssignmentStatement.valueExpression{\f2 [get]}, {\f2 [set]}, {\f2 [package]}}}
\par
{\bkmkstart AAAAAAAARH}
{\bkmkend AAAAAAAARH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
YarnSpinner/{\b Parser.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Yarn.Analysis.ASTAnalyser Class Reference\par \pard\plain 
{\tc\tcl2 \v Yarn.Analysis.ASTAnalyser}
{\xe \v Yarn.Analysis.ASTAnalyser}
{\bkmkstart AAAAAAABAH}
{\bkmkend AAAAAAABAH}
Collaboration diagram for Yarn.Analysis.ASTAnalyser:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "de/de9/a00322.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
abstract IEnumerable< {\b Diagnosis} > {\b Diagnose} ({\b Yarn.Parser.Node} node)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Diagnose\:Yarn::Analysis::ASTAnalyser}
{\xe \v Yarn::Analysis::ASTAnalyser\:Diagnose}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
abstract IEnumerable<{\b Diagnosis}> Yarn.Analysis.ASTAnalyser.Diagnose ({\b Yarn.Parser.Node} {\i node}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABAI}
{\bkmkend AAAAAAABAI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
YarnSpinner/{\b Analyser.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Yarn.BaseVariableStorage Class Reference\par \pard\plain 
{\tc\tcl2 \v Yarn.BaseVariableStorage}
{\xe \v Yarn.BaseVariableStorage}
{\bkmkstart AAAAAAAALO}
{\bkmkend AAAAAAAALO}
Inheritance diagram for Yarn.BaseVariableStorage:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dc/d31/a00208.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for Yarn.BaseVariableStorage:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d3/de5/a00209.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SetNumber} (string variableName, float number)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b GetNumber} (string variableName)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
abstract void {\b SetValue} (string variableName, {\b Value} value)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
abstract {\b Value} {\b GetValue} (string variableName)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
abstract void {\b Clear} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Clear\:Yarn::BaseVariableStorage}
{\xe \v Yarn::BaseVariableStorage\:Clear}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
abstract void Yarn.BaseVariableStorage.Clear (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAALB}
{\bkmkend AAAAAAAALB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Yarn.VariableStorage} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKY \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Implemented in {\b Yarn.MemoryVariableStore} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAALA \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v GetNumber\:Yarn::BaseVariableStorage}
{\xe \v Yarn::BaseVariableStorage\:GetNumber}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float Yarn.BaseVariableStorage.GetNumber (string {\i variableName})}}
\par
{\bkmkstart AAAAAAAALD}
{\bkmkend AAAAAAAALD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Yarn.VariableStorage} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAACS \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 73                                                     \{\par
74             return this.GetValue(variableName).AsNumber;\par
75         \}\par
}
}
{\xe \v GetValue\:Yarn::BaseVariableStorage}
{\xe \v Yarn::BaseVariableStorage\:GetValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
abstract {\b Value} Yarn.BaseVariableStorage.GetValue (string {\i variableName}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAALH}
{\bkmkend AAAAAAAALH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Yarn.VariableStorage} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAALE \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Implemented in {\b Yarn.MemoryVariableStore} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAALG \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v SetNumber\:Yarn::BaseVariableStorage}
{\xe \v Yarn::BaseVariableStorage\:SetNumber}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Yarn.BaseVariableStorage.SetNumber (string {\i variableName}, float {\i number})}}
\par
{\bkmkstart AAAAAAAALJ}
{\bkmkend AAAAAAAALJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Yarn.VariableStorage} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAACY \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 68                                                                  \{\par
69             this.SetValue(variableName, new Value(number));\par
70         \}\par
}
}
{\xe \v SetValue\:Yarn::BaseVariableStorage}
{\xe \v Yarn::BaseVariableStorage\:SetValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
abstract void Yarn.BaseVariableStorage.SetValue (string {\i variableName}, {\b Value} {\i value}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAALN}
{\bkmkend AAAAAAAALN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Yarn.VariableStorage} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAALK \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Implemented in {\b Yarn.MemoryVariableStore} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAALM \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
YarnSpinner/{\b Dialogue.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Yarn.Parser.Block Class Reference\par \pard\plain 
{\tc\tcl2 \v Yarn.Parser.Block}
{\xe \v Yarn.Parser.Block}
{\bkmkstart AAAAAAAARI}
{\bkmkend AAAAAAAARI}
Inheritance diagram for Yarn.Parser.Block:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dc/d6a/a00261.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for Yarn.Parser.Block:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d9/d8d/a00262.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b ToString} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Package Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Block} ({\b ParseNode} {\b parent}, {\b Parser} p)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b PrintTree} (int indentLevel)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Node} {\b NodeParent} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Package Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b CanParse} ({\b Parser} p)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IEnumerable< {\b Statement} > {\b statements}{\f2  [get]}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
List< {\b Statement} > {\b _statements} = new List<{\b Statement}> ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Block\:Yarn::Parser::Block}
{\xe \v Yarn::Parser::Block\:Block}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Yarn.Parser.Block.Block ({\b ParseNode} {\i parent}, {\b Parser} {\i p}){\f2 [package]}}}
\par
{\bkmkstart AAAAAAAARJ}
{\bkmkend AAAAAAAARJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 430                                                        : base(parent, p) \{\par
431 \par
432                 // Read the indent token\par
433                 p.ExpectSymbol(TokenType.Indent);\par
434 \par
435                 // Keep reading statements until we hit a dedent\par
436                 while (p.NextSymbolIs(TokenType.Dedent) == false) \{\par
437                     // fun fact! because Blocks are a type of Statement,\par
438                     // we get nested block parsing for free! \\:D/\par
439                     _statements.Add(new Statement(this, p));\par
440                 \}\par
441 \par
442                 // Tidy up by reading the dedent\par
443                 p.ExpectSymbol(TokenType.Dedent);\par
444 \par
445             \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v CanParse\:Yarn::Parser::Block}
{\xe \v Yarn::Parser::Block\:CanParse}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static bool Yarn.Parser.Block.CanParse ({\b Parser} {\i p}){\f2 [static]}, {\f2 [package]}}}
\par
{\bkmkstart AAAAAAAARK}
{\bkmkend AAAAAAAARK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 421             \{\par
422                 return p.NextSymbolIs (TokenType.Indent);\par
423             \}\par
}
}
{\xe \v NodeParent\:Yarn::Parser::Block}
{\xe \v Yarn::Parser::Block\:NodeParent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Node} Yarn.Parser.ParseNode.NodeParent (){\f2 [package]}, {\f2 [inherited]}}}
\par
{\bkmkstart AAAAAAAARA}
{\bkmkend AAAAAAAARA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 116                                        \{\par
117                 var node = this;\par
118 \par
119                 do \{\par
120                     if (node is Node) \{\par
121                         return node as Node;\par
122                     \}\par
123                     node = node.parent;\par
124                 \} while (node \par
125                     != null);                   \par
126 \par
127                 return null;\par
128             \}\par
}
}
{\xe \v PrintTree\:Yarn::Parser::Block}
{\xe \v Yarn::Parser::Block\:PrintTree}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string Yarn.Parser.Block.PrintTree (int {\i indentLevel}){\f2 [package]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAARL}
{\bkmkend AAAAAAAARL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Yarn.Parser.ParseNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAARC \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 449             \{\par
450                 var sb = new StringBuilder ();\par
451                 sb.Append (Tab(indentLevel, "Block \{"));\par
452                 foreach (var statement in _statements) \{\par
453                     sb.Append (statement.PrintTree (indentLevel + 1));\par
454                 \}\par
455                 sb.Append (Tab(indentLevel, "\}"));\par
456 \par
457                 return sb.ToString ();\par
458             \}\par
}
}
{\xe \v ToString\:Yarn::Parser::Block}
{\xe \v Yarn::Parser::Block\:ToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string Yarn.Parser.ParseNode.ToString (){\f2 [inherited]}}}
\par
{\bkmkstart AAAAAAAARD}
{\bkmkend AAAAAAAARD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 111             \{\par
112                 return this.GetType ().Name;\par
113             \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v _statements\:Yarn::Parser::Block}
{\xe \v Yarn::Parser::Block\:_statements}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
List<{\b Statement}> Yarn.Parser.Block._statements = new List<{\b Statement}> (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAARM}
{\bkmkend AAAAAAAARM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v statements\:Yarn::Parser::Block}
{\xe \v Yarn::Parser::Block\:statements}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IEnumerable<{\b Statement}> Yarn.Parser.Block.statements{\f2 [get]}, {\f2 [package]}}}
\par
{\bkmkstart AAAAAAAARN}
{\bkmkend AAAAAAAARN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
YarnSpinner/{\b Parser.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Yarn.Unity.Example.CameraFollow Class Reference\par \pard\plain 
{\tc\tcl2 \v Yarn.Unity.Example.CameraFollow}
{\xe \v Yarn.Unity.Example.CameraFollow}
{\bkmkstart AAAAAAABDJ}
{\bkmkend AAAAAAABDJ}
Inheritance diagram for Yarn.Unity.Example.CameraFollow:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d0/d48/a00351.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for Yarn.Unity.Example.CameraFollow:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/d9c/a00352.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Transform {\b target}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b minPosition} = -5.3f\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b maxPosition} = 5.3f\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b moveSpeed} = 1.0f\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Update} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Update\:Yarn::Unity::Example::CameraFollow}
{\xe \v Yarn::Unity::Example::CameraFollow\:Update}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Yarn.Unity.Example.CameraFollow.Update (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABDK}
{\bkmkend AAAAAAABDK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 42                        \{\par
43             if (target == null) \{\par
44                 return;\par
45             \}\par
46             var newPosition = Vector3.Lerp(transform.position, target.position, moveSpeed * Time.deltaTime);\par
47 \par
48             newPosition.x = Mathf.Clamp(newPosition.x, minPosition, maxPosition);\par
49             newPosition.y = transform.position.y;\par
50             newPosition.z = transform.position.z;\par
51 \par
52             transform.position = newPosition;\par
53         \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v maxPosition\:Yarn::Unity::Example::CameraFollow}
{\xe \v Yarn::Unity::Example::CameraFollow\:maxPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float Yarn.Unity.Example.CameraFollow.maxPosition = 5.3f}}
\par
{\bkmkstart AAAAAAABDL}
{\bkmkend AAAAAAABDL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v minPosition\:Yarn::Unity::Example::CameraFollow}
{\xe \v Yarn::Unity::Example::CameraFollow\:minPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float Yarn.Unity.Example.CameraFollow.minPosition = -5.3f}}
\par
{\bkmkstart AAAAAAABDM}
{\bkmkend AAAAAAABDM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v moveSpeed\:Yarn::Unity::Example::CameraFollow}
{\xe \v Yarn::Unity::Example::CameraFollow\:moveSpeed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float Yarn.Unity.Example.CameraFollow.moveSpeed = 1.0f}}
\par
{\bkmkstart AAAAAAABDN}
{\bkmkend AAAAAAABDN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v target\:Yarn::Unity::Example::CameraFollow}
{\xe \v Yarn::Unity::Example::CameraFollow\:target}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Transform Yarn.Unity.Example.CameraFollow.target}}
\par
{\bkmkstart AAAAAAABDO}
{\bkmkend AAAAAAABDO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Unity/Assets/Yarn Spinner/Examples/Demo Scripts/{\b CameraFollow.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Yarn.Unity.YarnSpinnerEditorWindow.CheckerResult Class Reference\par \pard\plain 
{\tc\tcl2 \v Yarn.Unity.YarnSpinnerEditorWindow.CheckerResult}
{\xe \v Yarn.Unity.YarnSpinnerEditorWindow.CheckerResult}
{\bkmkstart AAAAAAABCH}
{\bkmkend AAAAAAABCH}
Collaboration diagram for Yarn.Unity.YarnSpinnerEditorWindow.CheckerResult:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d9/d48/a00345.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Types\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b State} \{ {\b State.NotTested}, 
{\b State.Ignored}, 
{\b State.Passed}, 
{\b State.Failed}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override bool {\b Equals} (object obj)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override int {\b GetHashCode} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CheckerResult} (TextAsset {\b script})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b State} {\b state}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
TextAsset {\b script}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValidationMessage}[] {\b messages} = new {\b ValidationMessage}[0]\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Enumeration Documentation\par
\pard\plain 
{\xe \v State\:Yarn::Unity::YarnSpinnerEditorWindow::CheckerResult}
{\xe \v Yarn::Unity::YarnSpinnerEditorWindow::CheckerResult\:State}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b Yarn.Unity.YarnSpinnerEditorWindow.CheckerResult.State}}}
\par
{\bkmkstart AAAAAAABCI}
{\bkmkend AAAAAAABCI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v NotTested\:Yarn::Unity::YarnSpinnerEditorWindow::CheckerResult}
{\xe \v Yarn::Unity::YarnSpinnerEditorWindow::CheckerResult\:NotTested}
{\b {\i NotTested{\bkmkstart AAAAAAABCJ}
{\bkmkend AAAAAAABCJ}
}}  \par
{\xe \v Ignored\:Yarn::Unity::YarnSpinnerEditorWindow::CheckerResult}
{\xe \v Yarn::Unity::YarnSpinnerEditorWindow::CheckerResult\:Ignored}
{\b {\i Ignored{\bkmkstart AAAAAAABCK}
{\bkmkend AAAAAAABCK}
}}  \par
{\xe \v Passed\:Yarn::Unity::YarnSpinnerEditorWindow::CheckerResult}
{\xe \v Yarn::Unity::YarnSpinnerEditorWindow::CheckerResult\:Passed}
{\b {\i Passed{\bkmkstart AAAAAAABCL}
{\bkmkend AAAAAAABCL}
}}  \par
{\xe \v Failed\:Yarn::Unity::YarnSpinnerEditorWindow::CheckerResult}
{\xe \v Yarn::Unity::YarnSpinnerEditorWindow::CheckerResult\:Failed}
{\b {\i Failed{\bkmkstart AAAAAAABCM}
{\bkmkend AAAAAAABCM}
}}  \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 36                               \{\par
37                 NotTested,\par
38                 Ignored,\par
39                 Passed,\par
40                 Failed\par
41             \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v CheckerResult\:Yarn::Unity::YarnSpinnerEditorWindow::CheckerResult}
{\xe \v Yarn::Unity::YarnSpinnerEditorWindow::CheckerResult\:CheckerResult}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Yarn.Unity.YarnSpinnerEditorWindow.CheckerResult.CheckerResult (TextAsset {\i script})}}
\par
{\bkmkstart AAAAAAABCN}
{\bkmkend AAAAAAABCN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 61                                                    \{\par
62                 this.script = script;\par
63                 this.state = State.NotTested;\par
64             \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Equals\:Yarn::Unity::YarnSpinnerEditorWindow::CheckerResult}
{\xe \v Yarn::Unity::YarnSpinnerEditorWindow::CheckerResult\:Equals}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override bool Yarn.Unity.YarnSpinnerEditorWindow.CheckerResult.Equals (object {\i obj})}}
\par
{\bkmkstart AAAAAAABCO}
{\bkmkend AAAAAAABCO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 49             \{\par
50                 if (obj is CheckerResult && ((CheckerResult)obj).script == this.script)\par
51                     return true;\par
52                 else\par
53                     return false;\par
54             \}\par
}
}
{\xe \v GetHashCode\:Yarn::Unity::YarnSpinnerEditorWindow::CheckerResult}
{\xe \v Yarn::Unity::YarnSpinnerEditorWindow::CheckerResult\:GetHashCode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override int Yarn.Unity.YarnSpinnerEditorWindow.CheckerResult.GetHashCode ()}}
\par
{\bkmkstart AAAAAAABCP}
{\bkmkend AAAAAAABCP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 57             \{\par
58                 return this.script.GetHashCode();\par
59             \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v messages\:Yarn::Unity::YarnSpinnerEditorWindow::CheckerResult}
{\xe \v Yarn::Unity::YarnSpinnerEditorWindow::CheckerResult\:messages}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ValidationMessage} [] Yarn.Unity.YarnSpinnerEditorWindow.CheckerResult.messages = new {\b ValidationMessage}[0]}}
\par
{\bkmkstart AAAAAAABCQ}
{\bkmkend AAAAAAABCQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v script\:Yarn::Unity::YarnSpinnerEditorWindow::CheckerResult}
{\xe \v Yarn::Unity::YarnSpinnerEditorWindow::CheckerResult\:script}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TextAsset Yarn.Unity.YarnSpinnerEditorWindow.CheckerResult.script}}
\par
{\bkmkstart AAAAAAABCR}
{\bkmkend AAAAAAABCR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v state\:Yarn::Unity::YarnSpinnerEditorWindow::CheckerResult}
{\xe \v Yarn::Unity::YarnSpinnerEditorWindow::CheckerResult\:state}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b State} Yarn.Unity.YarnSpinnerEditorWindow.CheckerResult.state}}
\par
{\bkmkstart AAAAAAABCS}
{\bkmkend AAAAAAABCS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Unity/Assets/Yarn Spinner/Code/Editor/{\b YarnSpinnerEditorWindow.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Yarn.Parser.IfStatement.Clause Struct Reference\par \pard\plain 
{\tc\tcl2 \v Yarn.Parser.IfStatement.Clause}
{\xe \v Yarn.Parser.IfStatement.Clause}
{\bkmkstart AAAAAAAASQ}
{\bkmkend AAAAAAAASQ}
Collaboration diagram for Yarn.Parser.IfStatement.Clause:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d0/d19/a00273.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Package Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b PrintTree} (int indentLevel)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Package Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Expression} {\b expression}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IEnumerable< {\b Statement} > {\b statements}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v PrintTree\:Yarn::Parser::IfStatement::Clause}
{\xe \v Yarn::Parser::IfStatement::Clause\:PrintTree}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string Yarn.Parser.IfStatement.Clause.PrintTree (int {\i indentLevel}){\f2 [package]}}}
\par
{\bkmkstart AAAAAAAASR}
{\bkmkend AAAAAAAASR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 536                                                            \{\par
537                     var sb = new StringBuilder ();\par
538                     if (expression != null)\par
539                         sb.Append (expression.PrintTree (indentLevel));\par
540                     sb.Append (Tab (indentLevel, "\{"));\par
541                     foreach (var statement in statements) \{\par
542                         sb.Append (statement.PrintTree (indentLevel + 1));\par
543                     \}\par
544                     sb.Append (Tab (indentLevel, "\}"));\par
545                     return sb.ToString ();\par
546                 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v expression\:Yarn::Parser::IfStatement::Clause}
{\xe \v Yarn::Parser::IfStatement::Clause\:expression}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Expression} Yarn.Parser.IfStatement.Clause.expression{\f2 [package]}}}
\par
{\bkmkstart AAAAAAAASS}
{\bkmkend AAAAAAAASS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v statements\:Yarn::Parser::IfStatement::Clause}
{\xe \v Yarn::Parser::IfStatement::Clause\:statements}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IEnumerable<{\b Statement}> Yarn.Parser.IfStatement.Clause.statements{\f2 [package]}}}
\par
{\bkmkstart AAAAAAAAST}
{\bkmkend AAAAAAAAST}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
YarnSpinner/{\b Parser.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Yarn.Dialogue.CommandResult Class Reference\par \pard\plain 
{\tc\tcl2 \v Yarn.Dialogue.CommandResult}
{\xe \v Yarn.Dialogue.CommandResult}
{\bkmkstart AAAAAAAAMP}
{\bkmkend AAAAAAAAMP}
Inheritance diagram for Yarn.Dialogue.CommandResult:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d1/de1/a00213.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for Yarn.Dialogue.CommandResult:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d3/dd1/a00214.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CommandResult} (string text)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Command} {\b command}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v CommandResult\:Yarn::Dialogue::CommandResult}
{\xe \v Yarn::Dialogue::CommandResult\:CommandResult}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Yarn.Dialogue.CommandResult.CommandResult (string {\i text})}}
\par
{\bkmkstart AAAAAAAAMQ}
{\bkmkend AAAAAAAAMQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 108                                                \{\par
109                 var command = new Command();\par
110                 command.text = text;\par
111                 this.command = command;\par
112             \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v command\:Yarn::Dialogue::CommandResult}
{\xe \v Yarn::Dialogue::CommandResult\:command}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Command} Yarn.Dialogue.CommandResult.command}}
\par
{\bkmkstart AAAAAAAAMR}
{\bkmkend AAAAAAAAMR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
YarnSpinner/{\b Dialogue.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Yarn.Analysis.CompiledProgramAnalyser Class Reference\par \pard\plain 
{\tc\tcl2 \v Yarn.Analysis.CompiledProgramAnalyser}
{\xe \v Yarn.Analysis.CompiledProgramAnalyser}
{\bkmkstart AAAAAAABAJ}
{\bkmkend AAAAAAABAJ}
Inheritance diagram for Yarn.Analysis.CompiledProgramAnalyser:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d4/d8f/a00324.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for Yarn.Analysis.CompiledProgramAnalyser:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "de/dc8/a00325.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
abstract void {\b Diagnose} ({\b Yarn.Program} program)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
abstract IEnumerable< {\b Diagnosis} > {\b GatherDiagnoses} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Diagnose\:Yarn::Analysis::CompiledProgramAnalyser}
{\xe \v Yarn::Analysis::CompiledProgramAnalyser\:Diagnose}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
abstract void Yarn.Analysis.CompiledProgramAnalyser.Diagnose ({\b Yarn.Program} {\i program}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABAK}
{\bkmkend AAAAAAABAK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v GatherDiagnoses\:Yarn::Analysis::CompiledProgramAnalyser}
{\xe \v Yarn::Analysis::CompiledProgramAnalyser\:GatherDiagnoses}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
abstract IEnumerable<{\b Diagnosis}> Yarn.Analysis.CompiledProgramAnalyser.GatherDiagnoses (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAABAL}
{\bkmkend AAAAAAABAL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b Yarn.Analysis.UnusedVariableChecker} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABAM \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
YarnSpinner/{\b Analyser.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Yarn.Compiler Class Reference\par \pard\plain 
{\tc\tcl2 \v Yarn.Compiler}
{\xe \v Yarn.Compiler}
{\bkmkstart AAAAAAAAKD}
{\bkmkend AAAAAAAAKD}
Collaboration diagram for Yarn.Compiler:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d3/db1/a00200.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b CompileFlags}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Package Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Compiler} (string programName)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CompileNode} ({\b Parser.Node} node)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Program} {\b program}{\f2  [get, set]}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b RegisterLabel} (string commentary=null)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Emit} ({\b Node} node, {\b ByteCode} code, object operandA=null, object operandB=null)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b GenerateCode} ({\b Node} node, {\b Parser.Statement} statement)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b GenerateCode} ({\b Node} node, {\b Parser.CustomCommand} statement)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b GenerateCode} ({\b Node} node, string line)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b GenerateCode} ({\b Node} node, {\b Parser.ShortcutOptionGroup} statement)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b GenerateCode} ({\b Node} node, IEnumerable< {\b Yarn.Parser.Statement} > statementList)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b GenerateCode} ({\b Node} node, {\b Parser.IfStatement} statement)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b GenerateCode} ({\b Node} node, {\b Parser.OptionStatement} statement)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b GenerateCode} ({\b Node} node, {\b Parser.AssignmentStatement} statement)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b GenerateCode} ({\b Node} node, {\b Parser.Expression} expression)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b GenerateCode} ({\b Node} node, {\b Parser.ValueNode} value)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CompileFlags} {\b flags}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b labelCount} = 0\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Class Documentation\par
\pard\plain 
{\xe \v Yarn::Compiler::CompileFlags}
{\bkmkstart AAAAAAAABM}
{\bkmkend AAAAAAAABM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
struct Yarn::Compiler::CompileFlags\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
Collaboration diagram for Yarn.Compiler.CompileFlags:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/dfb/a00172.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Class Members:\par}
\pard\plain \s60\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr bool{\bkmkstart AAAAAAAABN}
{\bkmkend AAAAAAAABN}
\cell }{DisableShuffleOptionsAfterNextSet\cell }{\cell }{\row }
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Compiler\:Yarn::Compiler}
{\xe \v Yarn::Compiler\:Compiler}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Yarn.Compiler.Compiler (string {\i programName}){\f2 [package]}}}
\par
{\bkmkstart AAAAAAAAKE}
{\bkmkend AAAAAAAAKE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 254         \{\par
255             program = new Program ();\par
256         \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v CompileNode\:Yarn::Compiler}
{\xe \v Yarn::Compiler\:CompileNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Yarn.Compiler.CompileNode ({\b Parser.Node} {\i node}){\f2 [package]}}}
\par
{\bkmkstart AAAAAAAAKF}
{\bkmkend AAAAAAAAKF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 258                                                     \{\par
259 \par
260             if (program.nodes.ContainsKey(node.name)) \{\par
261                 throw new ArgumentException ("Duplicate node name " + node.name);\par
262             \}\par
263 \par
264             var compiledNode =  new Node();\par
265 \par
266             compiledNode.name = node.name;\par
267 \par
268             var startLabel = RegisterLabel ();\par
269             Emit (compiledNode, ByteCode.Label, startLabel);\par
270 \par
271             foreach (var statement in node.statements) \{\par
272                 GenerateCode (compiledNode, statement);\par
273             \}\par
274 \par
275             // Does this node end after emitting AddOptions codes\par
276             // without calling ShowOptions?\par
277 \par
278             // Note: this only works when we know that we don't have\par
279             // AddOptions and then Jump up back into the code to run them.\par
280             // TODO: A better solution would be for the parser to flag\par
281             // whether a node has Options at the end.\par
282             var hasRemainingOptions = false;\par
283             foreach (var instruction in compiledNode.instructions) \{\par
284                 if (instruction.operation == ByteCode.AddOption) \{\par
285                     hasRemainingOptions = true;\par
286                 \}\par
287                 if (instruction.operation == ByteCode.ShowOptions) \{\par
288                     hasRemainingOptions = false;\par
289                 \}\par
290             \}\par
291 \par
292             // If this compiled node has no lingering options to show at the end of the node, then stop at the end\par
293             if (hasRemainingOptions == false) \{\par
294                 Emit (compiledNode, ByteCode.Stop);\par
295             \} else \{\par
296                 // Otherwise, show the accumulated nodes and then jump to the selected node\par
297 \par
298                 Emit (compiledNode, ByteCode.ShowOptions);\par
299 \par
300                 if (flags.DisableShuffleOptionsAfterNextSet == true) \{\par
301                     Emit (compiledNode, ByteCode.PushBool, false);\par
302                     Emit (compiledNode, ByteCode.StoreVariable, VirtualMachine.SpecialVariables.ShuffleOptions);\par
303                     Emit (compiledNode, ByteCode.Pop);\par
304                     flags.DisableShuffleOptionsAfterNextSet = false;\par
305                 \}\par
306 \par
307                 Emit (compiledNode, ByteCode.RunNode);\par
308             \}\par
309 \par
310             if (node.source != null) \{\par
311                 compiledNode.sourceTextStringID = program.RegisterString (node.source, node.name);\par
312             \}\par
313 \par
314             program.nodes [compiledNode.name] = compiledNode;\par
315         \}\par
}
}
{\xe \v Emit\:Yarn::Compiler}
{\xe \v Yarn::Compiler\:Emit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Yarn.Compiler.Emit ({\b Node} {\i node}, {\b ByteCode} {\i code}, object {\i operandA} = {\f2 null}, object {\i operandB} = {\f2 null}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAKG}
{\bkmkend AAAAAAAAKG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 324                                                                                             \{\par
325             var instruction = new Instruction();\par
326             instruction.operation = code;\par
327             instruction.operandA = operandA;\par
328             instruction.operandB = operandB;\par
329 \par
330             node.instructions.Add (instruction);\par
331 \par
332             if (code == ByteCode.Label) \{\par
333                 // Add this label to the label table\par
334                 node.labels.Add ((string)instruction.operandA, node.instructions.Count - 1);\par
335             \}\par
336         \}\par
}
}
{\xe \v GenerateCode\:Yarn::Compiler}
{\xe \v Yarn::Compiler\:GenerateCode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Yarn.Compiler.GenerateCode ({\b Node} {\i node}, {\b Parser.Statement} {\i statement}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAKH}
{\bkmkend AAAAAAAAKH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 339                                                                  \{\par
340             switch (statement.type) \{\par
341             case Parser.Statement.Type.CustomCommand:\par
342                 GenerateCode (node, statement.customCommand);\par
343                 break;\par
344             case Parser.Statement.Type.ShortcutOptionGroup:\par
345                 GenerateCode (node, statement.shortcutOptionGroup);\par
346                 break;\par
347             case Parser.Statement.Type.Block:\par
348                 \par
349                 // Blocks are just groups of statements\par
350                 foreach (var blockStatement in statement.block.statements) \{\par
351                     GenerateCode(node, blockStatement);\par
352                 \}\par
353 \par
354                 break;\par
355 \par
356 \par
357             case Parser.Statement.Type.IfStatement:\par
358                 GenerateCode (node, statement.ifStatement);\par
359                 break;\par
360 \par
361             case Parser.Statement.Type.OptionStatement:\par
362                 GenerateCode (node, statement.optionStatement);\par
363                 break;\par
364 \par
365             case Parser.Statement.Type.AssignmentStatement:\par
366                 GenerateCode (node, statement.assignmentStatement);\par
367                 break;\par
368 \par
369             case Parser.Statement.Type.Line:\par
370                 GenerateCode (node, statement.line);\par
371                 break;\par
372 \par
373             default:\par
374                 throw new ArgumentOutOfRangeException ();\par
375             \}\par
376 \par
377 \par
378         \}\par
}
}
{\xe \v GenerateCode\:Yarn::Compiler}
{\xe \v Yarn::Compiler\:GenerateCode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Yarn.Compiler.GenerateCode ({\b Node} {\i node}, {\b Parser.CustomCommand} {\i statement}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAKI}
{\bkmkend AAAAAAAAKI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 380                                                                      \{\par
381 \par
382             // If this command is an evaluable expression, evaluate it\par
383             if (statement.expression != null) \{\par
384                 GenerateCode (node, statement.expression);\par
385             \} else \{\par
386                 switch (statement.clientCommand) \{\par
387                 case "stop":\par
388                     Emit (node, ByteCode.Stop);\par
389                     break;\par
390                 case "shuffleNextOptions":\par
391                     // Emit code that sets "VAR_SHUFFLE_OPTIONS" to true\par
392                     Emit (node, ByteCode.PushBool, true);\par
393                     Emit (node, ByteCode.StoreVariable, VirtualMachine.SpecialVariables.ShuffleOptions);\par
394                     Emit (node, ByteCode.Pop);\par
395                     flags.DisableShuffleOptionsAfterNextSet = true;\par
396                     break;\par
397 \par
398                 default:\par
399                     Emit (node, ByteCode.RunCommand, statement.clientCommand);\par
400                     break;\par
401                 \}\par
402             \}\par
403 \par
404         \}\par
}
}
{\xe \v GenerateCode\:Yarn::Compiler}
{\xe \v Yarn::Compiler\:GenerateCode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Yarn.Compiler.GenerateCode ({\b Node} {\i node}, string {\i line}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAKJ}
{\bkmkend AAAAAAAAKJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 406                                                   \{\par
407             var num = program.RegisterString (line, node.name);\par
408 \par
409             Emit (node, ByteCode.RunLine, num);\par
410 \par
411         \}\par
}
}
{\xe \v GenerateCode\:Yarn::Compiler}
{\xe \v Yarn::Compiler\:GenerateCode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Yarn.Compiler.GenerateCode ({\b Node} {\i node}, {\b Parser.ShortcutOptionGroup} {\i statement}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAKK}
{\bkmkend AAAAAAAAKK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 413                                                                            \{\par
414 \par
415             var endOfGroupLabel = RegisterLabel ("group_end");\par
416 \par
417             var labels = new List<string> ();\par
418 \par
419             int optionCount = 0;\par
420             foreach (var shortcutOption in statement.options) \{\par
421 \par
422                 var optionDestinationLabel = RegisterLabel ("option_" + (optionCount+1));\par
423                 labels.Add (optionDestinationLabel);\par
424 \par
425                 string endOfClauseLabel = null;\par
426 \par
427                 if (shortcutOption.condition != null) \{\par
428                     endOfClauseLabel = RegisterLabel ("conditional_"+optionCount);\par
429                     GenerateCode (node, shortcutOption.condition);\par
430 \par
431                     Emit (node, ByteCode.JumpIfFalse, endOfClauseLabel);\par
432                 \}\par
433 \par
434                 var labelStringID = program.RegisterString (shortcutOption.label, node.name);\par
435 \par
436                 Emit (node, ByteCode.AddOption, labelStringID, optionDestinationLabel);\par
437 \par
438                 if (shortcutOption.condition != null) \{\par
439                     Emit (node, ByteCode.Label, endOfClauseLabel);\par
440                     Emit (node, ByteCode.Pop);\par
441                 \}\par
442 \par
443                 optionCount++;\par
444             \}\par
445 \par
446             Emit (node, ByteCode.ShowOptions);\par
447 \par
448             if (flags.DisableShuffleOptionsAfterNextSet == true) \{\par
449                 Emit (node, ByteCode.PushBool, false);\par
450                 Emit (node, ByteCode.StoreVariable, VirtualMachine.SpecialVariables.ShuffleOptions);\par
451                 Emit (node, ByteCode.Pop);\par
452                 flags.DisableShuffleOptionsAfterNextSet = false;\par
453             \}\par
454 \par
455             Emit (node, ByteCode.Jump);\par
456 \par
457             optionCount = 0;\par
458             foreach (var shortcutOption in statement.options) \{\par
459 \par
460                 Emit (node, ByteCode.Label, labels [optionCount]);\par
461 \par
462                 if (shortcutOption.optionNode != null)\par
463                     GenerateCode (node, shortcutOption.optionNode.statements);\par
464 \par
465                 Emit (node, ByteCode.JumpTo, endOfGroupLabel);\par
466 \par
467                 optionCount++;\par
468 \par
469             \}\par
470 \par
471             // reached the end of the option group\par
472             Emit (node, ByteCode.Label, endOfGroupLabel);\par
473 \par
474             // clean up after the jump\par
475             Emit (node, ByteCode.Pop);\par
476 \par
477 \par
478         \}\par
}
}
{\xe \v GenerateCode\:Yarn::Compiler}
{\xe \v Yarn::Compiler\:GenerateCode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Yarn.Compiler.GenerateCode ({\b Node} {\i node}, IEnumerable< {\b Yarn.Parser.Statement} > {\i statementList}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAKL}
{\bkmkend AAAAAAAAKL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 480                                                                                        \{\par
481 \par
482             if (statementList == null)\par
483                 return;\par
484 \par
485             foreach (var statement in statementList) \{\par
486                 GenerateCode (node, statement);\par
487             \}\par
488         \}\par
}
}
{\xe \v GenerateCode\:Yarn::Compiler}
{\xe \v Yarn::Compiler\:GenerateCode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Yarn.Compiler.GenerateCode ({\b Node} {\i node}, {\b Parser.IfStatement} {\i statement}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAKM}
{\bkmkend AAAAAAAAKM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 490                                                                    \{\par
491 \par
492             // We'll jump to this label at the end of every clause\par
493             var endOfIfStatementLabel = RegisterLabel ("endif");\par
494 \par
495             foreach (var clause in statement.clauses) \{\par
496                 var endOfClauseLabel = RegisterLabel ("skipclause");\par
497 \par
498                 if (clause.expression != null) \{\par
499                     \par
500                     GenerateCode (node, clause.expression);\par
501 \par
502                     Emit (node, ByteCode.JumpIfFalse, endOfClauseLabel);\par
503 \par
504                 \}\par
505 \par
506                 GenerateCode (node, clause.statements);\par
507 \par
508                 Emit (node, ByteCode.JumpTo, endOfIfStatementLabel);\par
509 \par
510                 if (clause.expression != null) \{\par
511                     Emit (node, ByteCode.Label, endOfClauseLabel);\par
512                 \}\par
513                 // Clean up the stack by popping the expression that was tested earlier\par
514                 if (clause.expression != null) \{\par
515                     Emit (node, ByteCode.Pop);\par
516                 \}\par
517             \}\par
518 \par
519             Emit (node, ByteCode.Label, endOfIfStatementLabel);\par
520         \}\par
}
}
{\xe \v GenerateCode\:Yarn::Compiler}
{\xe \v Yarn::Compiler\:GenerateCode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Yarn.Compiler.GenerateCode ({\b Node} {\i node}, {\b Parser.OptionStatement} {\i statement}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAKN}
{\bkmkend AAAAAAAAKN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 522                                                                        \{\par
523 \par
524             var destination = statement.destination;\par
525 \par
526             if (statement.label == null) \{\par
527                 // this is a jump to another node\par
528                 Emit(node, ByteCode.RunNode, destination); \par
529             \} else \{\par
530                 var stringID = program.RegisterString (statement.label, node.name);\par
531 \par
532                 Emit (node, ByteCode.AddOption, stringID, destination);\par
533             \}\par
534 \par
535         \}\par
}
}
{\xe \v GenerateCode\:Yarn::Compiler}
{\xe \v Yarn::Compiler\:GenerateCode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Yarn.Compiler.GenerateCode ({\b Node} {\i node}, {\b Parser.AssignmentStatement} {\i statement}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAKO}
{\bkmkend AAAAAAAAKO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 537                                                                            \{\par
538 \par
539             // Is it a straight assignment?\par
540             if (statement.operation == TokenType.EqualToOrAssign) \{\par
541                 // Evaluate the expression, which will result in a value\par
542                 // on the stack\par
543                 GenerateCode (node, statement.valueExpression);\par
544 \par
545                 // Stack now contains [destinationValue]\par
546             \} else \{\par
547 \par
548                 // It's a combined operation-plus-assignment\par
549 \par
550                 // Get the current value of the variable\par
551                 Emit(node, ByteCode.PushVariable, statement.destinationVariableName);\par
552 \par
553                 // Evaluate the expression, which will result in a value\par
554                 // on the stack\par
555                 GenerateCode (node, statement.valueExpression);\par
556 \par
557                 // Stack now contains [currentValue, expressionValue]\par
558 \par
559                 switch (statement.operation) \{\par
560 \par
561                 case TokenType.AddAssign:\par
562                     Emit (node, ByteCode.CallFunc, TokenType.Add.ToString ());\par
563                     break;\par
564                 case TokenType.MinusAssign:\par
565                     Emit (node, ByteCode.CallFunc, TokenType.Minus.ToString ());\par
566                     break;\par
567                 case TokenType.MultiplyAssign:\par
568                     Emit (node, ByteCode.CallFunc, TokenType.Multiply.ToString ());\par
569                     break;\par
570                 case TokenType.DivideAssign:\par
571                     Emit (node, ByteCode.CallFunc, TokenType.Divide.ToString ());\par
572                     break;\par
573                 default:\par
574                     throw new ArgumentOutOfRangeException ();\par
575                 \}\par
576 \par
577                 // Stack now contains [destinationValue]\par
578             \}\par
579 \par
580             // Store the top of the stack in the variable\par
581             Emit(node, ByteCode.StoreVariable, statement.destinationVariableName);\par
582 \par
583             // Clean up the stack\par
584             Emit (node, ByteCode.Pop);\par
585 \par
586         \}\par
}
}
{\xe \v GenerateCode\:Yarn::Compiler}
{\xe \v Yarn::Compiler\:GenerateCode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Yarn.Compiler.GenerateCode ({\b Node} {\i node}, {\b Parser.Expression} {\i expression}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAKP}
{\bkmkend AAAAAAAAKP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 588                                                                    \{\par
589 \par
590             // Expressions are either plain values, or function calls\par
591             switch (expression.type) \{\par
592             case Parser.Expression.Type.Value:\par
593                 // Plain value? Emit that\par
594                 GenerateCode (node, expression.value);\par
595                 break;\par
596             case Parser.Expression.Type.FunctionCall:\par
597                 // Evaluate all parameter expressions (which will\par
598                 // push them to the stack)\par
599                 foreach (var parameter in expression.parameters) \{\par
600                     GenerateCode (node, parameter);\par
601                 \}\par
602                 // If this function has a variable number of parameters, put\par
603                 // the number of parameters that were passed onto the stack\par
604                 if (expression.function.paramCount == -1) \{\par
605                     Emit (node, ByteCode.PushNumber, expression.parameters.Count);\par
606                 \}\par
607 \par
608                 // And then call the function\par
609                 Emit (node, ByteCode.CallFunc, expression.function.name);\par
610                 break;\par
611             \}\par
612         \}\par
}
}
{\xe \v GenerateCode\:Yarn::Compiler}
{\xe \v Yarn::Compiler\:GenerateCode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Yarn.Compiler.GenerateCode ({\b Node} {\i node}, {\b Parser.ValueNode} {\i value}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAKQ}
{\bkmkend AAAAAAAAKQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 614                                                              \{\par
615 \par
616             // Push a value onto the stack\par
617 \par
618             switch (value.value.type) \{\par
619             case Value.Type.Number:\par
620                 Emit (node, ByteCode.PushNumber, value.value.numberValue);\par
621                 break;\par
622             case Value.Type.String:\par
623                 var id = program.RegisterString (value.value.stringValue, node.name);\par
624                 Emit (node, ByteCode.PushString, id);\par
625                 break;\par
626             case Value.Type.Bool:\par
627                 Emit (node, ByteCode.PushBool, value.value.boolValue);\par
628                 break;\par
629             case Value.Type.Variable:\par
630                 Emit (node, ByteCode.PushVariable, value.value.variableName);\par
631                 break;\par
632             case Value.Type.Null:\par
633                 Emit (node, ByteCode.PushNull);\par
634                 break;\par
635             default:\par
636                 throw new ArgumentOutOfRangeException ();\par
637             \}\par
638         \}\par
}
}
{\xe \v RegisterLabel\:Yarn::Compiler}
{\xe \v Yarn::Compiler\:RegisterLabel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string Yarn.Compiler.RegisterLabel (string {\i commentary} = {\f2 null}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAKR}
{\bkmkend AAAAAAAAKR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 320                                                        \{\par
321             return "L" + labelCount++ + commentary;\par
322         \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v flags\:Yarn::Compiler}
{\xe \v Yarn::Compiler\:flags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CompileFlags} Yarn.Compiler.flags{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAKS}
{\bkmkend AAAAAAAAKS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v labelCount\:Yarn::Compiler}
{\xe \v Yarn::Compiler\:labelCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Yarn.Compiler.labelCount = 0{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAKT}
{\bkmkend AAAAAAAAKT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v program\:Yarn::Compiler}
{\xe \v Yarn::Compiler\:program}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Program} Yarn.Compiler.program{\f2 [get]}, {\f2 [set]}, {\f2 [package]}}}
\par
{\bkmkstart AAAAAAAAKU}
{\bkmkend AAAAAAAAKU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
YarnSpinner/{\b Compiler.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Yarn.YarnSpinnerConsole.ConsoleRunnerImplementation Class Reference\par \pard\plain 
{\tc\tcl2 \v Yarn.YarnSpinnerConsole.ConsoleRunnerImplementation}
{\xe \v Yarn.YarnSpinnerConsole.ConsoleRunnerImplementation}
{\bkmkstart AAAAAAAAYX}
{\bkmkend AAAAAAAAYX}
Inheritance diagram for Yarn.YarnSpinnerConsole.ConsoleRunnerImplementation:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d4/d6f/a00315.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for Yarn.YarnSpinnerConsole.ConsoleRunnerImplementation:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d3/db8/a00316.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ConsoleRunnerImplementation} (bool {\b waitForLines}=false)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b RunLine} ({\b Yarn.Line} lineText)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b RunOptions} ({\b Options} optionsGroup, {\b OptionChooser} optionChooser)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b RunCommand} (string command)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b DialogueComplete} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b HandleErrorMessage} (string error)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b HandleDebugMessage} (string message)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b SetNumber} (string variableName, float number)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b GetNumber} (string variableName)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b SetValue} (string variableName, {\b Value} value)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b Value} {\b GetValue} (string variableName)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Clear} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b numberOfExpectedOptions} = -1\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b autoSelectOptionNumber} = -1\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b expectedNextLine} = null\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b expectedNextCommand} = null\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b autoSelectFirstOption} = false\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b waitForLines} = false\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Yarn.MemoryVariableStore} {\b variableStore}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v ConsoleRunnerImplementation\:Yarn::YarnSpinnerConsole::ConsoleRunnerImplementation}
{\xe \v Yarn::YarnSpinnerConsole::ConsoleRunnerImplementation\:ConsoleRunnerImplementation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Yarn.YarnSpinnerConsole.ConsoleRunnerImplementation.ConsoleRunnerImplementation (bool {\i waitForLines} = {\f2 false})}}
\par
{\bkmkstart AAAAAAAAYY}
{\bkmkend AAAAAAAAYY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 368                                                                           \{\par
369                 this.variableStore = new MemoryVariableStore();\par
370                 this.waitForLines = waitForLines;\par
371             \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Clear\:Yarn::YarnSpinnerConsole::ConsoleRunnerImplementation}
{\xe \v Yarn::YarnSpinnerConsole::ConsoleRunnerImplementation\:Clear}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Yarn.YarnSpinnerConsole.ConsoleRunnerImplementation.Clear ()}}
\par
{\bkmkstart AAAAAAAAKZ}
{\bkmkend AAAAAAAAKZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Yarn.VariableStorage} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKY \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 500             \{\par
501                 variableStore.Clear();\par
502             \}\par
}
}
{\xe \v DialogueComplete\:Yarn::YarnSpinnerConsole::ConsoleRunnerImplementation}
{\xe \v Yarn::YarnSpinnerConsole::ConsoleRunnerImplementation\:DialogueComplete}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Yarn.YarnSpinnerConsole.ConsoleRunnerImplementation.DialogueComplete ()}}
\par
{\bkmkstart AAAAAAAAYZ}
{\bkmkend AAAAAAAAYZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 467             \{\par
468                 // All done\par
469             \}\par
}
}
{\xe \v GetNumber\:Yarn::YarnSpinnerConsole::ConsoleRunnerImplementation}
{\xe \v Yarn::YarnSpinnerConsole::ConsoleRunnerImplementation\:GetNumber}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual float Yarn.YarnSpinnerConsole.ConsoleRunnerImplementation.GetNumber (string {\i variableName}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAALC}
{\bkmkend AAAAAAAALC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Yarn.VariableStorage} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAACS \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 487             \{\par
488                 return variableStore.GetNumber(variableName);\par
489             \}\par
}
}
{\xe \v GetValue\:Yarn::YarnSpinnerConsole::ConsoleRunnerImplementation}
{\xe \v Yarn::YarnSpinnerConsole::ConsoleRunnerImplementation\:GetValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b Value} Yarn.YarnSpinnerConsole.ConsoleRunnerImplementation.GetValue (string {\i variableName}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAALF}
{\bkmkend AAAAAAAALF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Yarn.VariableStorage} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAALE \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 495                                                                 \{\par
496                 return variableStore.GetValue(variableName);\par
497             \}\par
}
}
{\xe \v HandleDebugMessage\:Yarn::YarnSpinnerConsole::ConsoleRunnerImplementation}
{\xe \v Yarn::YarnSpinnerConsole::ConsoleRunnerImplementation\:HandleDebugMessage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Yarn.YarnSpinnerConsole.ConsoleRunnerImplementation.HandleDebugMessage (string {\i message})}}
\par
{\bkmkstart AAAAAAAAZA}
{\bkmkend AAAAAAAAZA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 477             \{\par
478                 Console.WriteLine("Debug: " + message);\par
479             \}\par
}
}
{\xe \v HandleErrorMessage\:Yarn::YarnSpinnerConsole::ConsoleRunnerImplementation}
{\xe \v Yarn::YarnSpinnerConsole::ConsoleRunnerImplementation\:HandleErrorMessage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Yarn.YarnSpinnerConsole.ConsoleRunnerImplementation.HandleErrorMessage (string {\i error})}}
\par
{\bkmkstart AAAAAAAAZB}
{\bkmkend AAAAAAAAZB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 472             \{\par
473                 Console.WriteLine("Error: " + error);\par
474             \}\par
}
}
{\xe \v RunCommand\:Yarn::YarnSpinnerConsole::ConsoleRunnerImplementation}
{\xe \v Yarn::YarnSpinnerConsole::ConsoleRunnerImplementation\:RunCommand}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Yarn.YarnSpinnerConsole.ConsoleRunnerImplementation.RunCommand (string {\i command})}}
\par
{\bkmkstart AAAAAAAAZC}
{\bkmkend AAAAAAAAZC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 452             \{\par
453 \par
454                 if (expectedNextCommand != null && expectedNextCommand != command) \{\par
455                     // TODO: Output diagnostic info here\par
456                     Console.WriteLine(string.Format("Unexpected command.\\n\\tExpected: \{0\}\\n\\tReceived: \{1\}",\par
457                         expectedNextCommand, command));\par
458                     Environment.Exit (1);\par
459                 \}\par
460 \par
461                 expectedNextCommand = null;\par
462 \par
463                 Console.WriteLine("Command: <<"+command+">>");\par
464             \}\par
}
}
{\xe \v RunLine\:Yarn::YarnSpinnerConsole::ConsoleRunnerImplementation}
{\xe \v Yarn::YarnSpinnerConsole::ConsoleRunnerImplementation\:RunLine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Yarn.YarnSpinnerConsole.ConsoleRunnerImplementation.RunLine ({\b Yarn.Line} {\i lineText})}}
\par
{\bkmkstart AAAAAAAAZD}
{\bkmkend AAAAAAAAZD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 374             \{\par
375 \par
376                 if (expectedNextLine != null && expectedNextLine != lineText.text) \{\par
377                     // TODO: Output diagnostic info here\par
378                     Console.WriteLine(string.Format("Unexpected line.\\nExpected: \{0\}\\nReceived: \{1\}",\par
379                         expectedNextLine, lineText.text));\par
380                     Environment.Exit (1);\par
381                 \}\par
382 \par
383                 expectedNextLine = null;\par
384 \par
385                 Console.WriteLine (lineText.text);\par
386                 if (waitForLines == true) \{\par
387                     Console.Read();\par
388                 \}\par
389             \}\par
}
}
{\xe \v RunOptions\:Yarn::YarnSpinnerConsole::ConsoleRunnerImplementation}
{\xe \v Yarn::YarnSpinnerConsole::ConsoleRunnerImplementation\:RunOptions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Yarn.YarnSpinnerConsole.ConsoleRunnerImplementation.RunOptions ({\b Options} {\i optionsGroup}, {\b OptionChooser} {\i optionChooser})}}
\par
{\bkmkstart AAAAAAAAZE}
{\bkmkend AAAAAAAAZE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 392             \{\par
393 \par
394                 Console.WriteLine("Options:");\par
395                 for (int i = 0; i < optionsGroup.options.Count; i++) \{\par
396                     var optionDisplay = string.Format ("\{0\}. \{1\}", i + 1, optionsGroup.options [i]);\par
397                     Console.WriteLine (optionDisplay);\par
398                 \}\par
399 \par
400 \par
401                 // Check to see if the number of expected options\par
402                 // is what we're expecting to see\par
403                 if (numberOfExpectedOptions != -1 &&\par
404                     optionsGroup.options.Count != numberOfExpectedOptions) \{\par
405                     // TODO: Output diagnostic info here\par
406                     Console.WriteLine (string.Format("[ERROR: Expected \{0\} options, but received \{1\}]", numberOfExpectedOptions, optionsGroup.options.Count));\par
407                     Environment.Exit (1);\par
408                 \}\par
409 \par
410                 // If we were told to automatically select an option, do so\par
411                 if (autoSelectOptionNumber != -1) \{\par
412                     Console.WriteLine ("[Received \{0\} options, choosing option \{1\}]", optionsGroup.options.Count, autoSelectOptionNumber);\par
413 \par
414                     optionChooser (autoSelectOptionNumber);\par
415 \par
416                     autoSelectOptionNumber = -1;\par
417 \par
418                     return;\par
419 \par
420                 \}\par
421 \par
422                 // Reset the expected options counter\par
423                 numberOfExpectedOptions = -1;\par
424 \par
425 \par
426 \par
427                 if (autoSelectFirstOption == true) \{\par
428                     Console.WriteLine ("[automatically choosing option 1]");\par
429                     optionChooser (0);\par
430                     return;\par
431                 \}\par
432 \par
433                 do \{\par
434                     Console.Write ("? ");\par
435                     try \{\par
436                         var selectedKey = Console.ReadKey ().KeyChar.ToString();\par
437                         var selection = int.Parse (selectedKey) - 1;\par
438                         Console.WriteLine();\par
439 \par
440                         if (selection > optionsGroup.options.Count) \{\par
441                             Console.WriteLine ("Invalid option.");\par
442                         \} else \{\par
443                             optionChooser(selection);\par
444                             break;\par
445                         \}\par
446                     \} catch (FormatException) \{\}\par
447 \par
448                 \} while (true);\par
449             \}\par
}
}
{\xe \v SetNumber\:Yarn::YarnSpinnerConsole::ConsoleRunnerImplementation}
{\xe \v Yarn::YarnSpinnerConsole::ConsoleRunnerImplementation\:SetNumber}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void Yarn.YarnSpinnerConsole.ConsoleRunnerImplementation.SetNumber (string {\i variableName}, float {\i number}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAALI}
{\bkmkend AAAAAAAALI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Yarn.VariableStorage} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAACY \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 482             \{\par
483                 variableStore.SetNumber(variableName, number);\par
484             \}\par
}
}
{\xe \v SetValue\:Yarn::YarnSpinnerConsole::ConsoleRunnerImplementation}
{\xe \v Yarn::YarnSpinnerConsole::ConsoleRunnerImplementation\:SetValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void Yarn.YarnSpinnerConsole.ConsoleRunnerImplementation.SetValue (string {\i variableName}, {\b Value} {\i value}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAALL}
{\bkmkend AAAAAAAALL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Yarn.VariableStorage} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAALK \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 491                                                                             \{\par
492                 variableStore.SetValue(variableName, value);\par
493             \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v autoSelectFirstOption\:Yarn::YarnSpinnerConsole::ConsoleRunnerImplementation}
{\xe \v Yarn::YarnSpinnerConsole::ConsoleRunnerImplementation\:autoSelectFirstOption}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Yarn.YarnSpinnerConsole.ConsoleRunnerImplementation.autoSelectFirstOption = false}}
\par
{\bkmkstart AAAAAAAAZF}
{\bkmkend AAAAAAAAZF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v autoSelectOptionNumber\:Yarn::YarnSpinnerConsole::ConsoleRunnerImplementation}
{\xe \v Yarn::YarnSpinnerConsole::ConsoleRunnerImplementation\:autoSelectOptionNumber}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Yarn.YarnSpinnerConsole.ConsoleRunnerImplementation.autoSelectOptionNumber = -1}}
\par
{\bkmkstart AAAAAAAAZG}
{\bkmkend AAAAAAAAZG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v expectedNextCommand\:Yarn::YarnSpinnerConsole::ConsoleRunnerImplementation}
{\xe \v Yarn::YarnSpinnerConsole::ConsoleRunnerImplementation\:expectedNextCommand}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string Yarn.YarnSpinnerConsole.ConsoleRunnerImplementation.expectedNextCommand = null}}
\par
{\bkmkstart AAAAAAAAZH}
{\bkmkend AAAAAAAAZH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v expectedNextLine\:Yarn::YarnSpinnerConsole::ConsoleRunnerImplementation}
{\xe \v Yarn::YarnSpinnerConsole::ConsoleRunnerImplementation\:expectedNextLine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string Yarn.YarnSpinnerConsole.ConsoleRunnerImplementation.expectedNextLine = null}}
\par
{\bkmkstart AAAAAAAAZI}
{\bkmkend AAAAAAAAZI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v numberOfExpectedOptions\:Yarn::YarnSpinnerConsole::ConsoleRunnerImplementation}
{\xe \v Yarn::YarnSpinnerConsole::ConsoleRunnerImplementation\:numberOfExpectedOptions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Yarn.YarnSpinnerConsole.ConsoleRunnerImplementation.numberOfExpectedOptions = -1}}
\par
{\bkmkstart AAAAAAAAZJ}
{\bkmkend AAAAAAAAZJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v variableStore\:Yarn::YarnSpinnerConsole::ConsoleRunnerImplementation}
{\xe \v Yarn::YarnSpinnerConsole::ConsoleRunnerImplementation\:variableStore}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Yarn.MemoryVariableStore} Yarn.YarnSpinnerConsole.ConsoleRunnerImplementation.variableStore{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAZK}
{\bkmkend AAAAAAAAZK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v waitForLines\:Yarn::YarnSpinnerConsole::ConsoleRunnerImplementation}
{\xe \v Yarn::YarnSpinnerConsole::ConsoleRunnerImplementation\:waitForLines}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Yarn.YarnSpinnerConsole.ConsoleRunnerImplementation.waitForLines = false{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAZL}
{\bkmkend AAAAAAAAZL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
YarnSpinnerConsole/{\b Main.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Yarn.Analysis.Context Class Reference\par \pard\plain 
{\tc\tcl2 \v Yarn.Analysis.Context}
{\xe \v Yarn.Analysis.Context}
{\bkmkstart AAAAAAABAA}
{\bkmkend AAAAAAABAA}
Collaboration diagram for Yarn.Analysis.Context:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dd/de2/a00320.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Context} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IEnumerable< {\b Diagnosis} > {\b FinishAnalysis} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Package Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b AddProgramToAnalysis} ({\b Program} program)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IEnumerable< Type > {\b defaultAnalyserClasses}{\f2  [get]}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IEnumerable< Type > {\b _defaultAnalyserClasses}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
List< {\b CompiledProgramAnalyser} > {\b analysers}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Context\:Yarn::Analysis::Context}
{\xe \v Yarn::Analysis::Context\:Context}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Yarn.Analysis.Context.Context ()}}
\par
{\bkmkstart AAAAAAABAB}
{\bkmkend AAAAAAABAB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 111         \{\par
112             analysers = new List<CompiledProgramAnalyser> ();\par
113 \par
114             foreach (var analyserType in defaultAnalyserClasses) \{\par
115                 analysers.Add((CompiledProgramAnalyser)Activator.CreateInstance (analyserType));\par
116             \}\par
117 \par
118         \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v AddProgramToAnalysis\:Yarn::Analysis::Context}
{\xe \v Yarn::Analysis::Context\:AddProgramToAnalysis}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Yarn.Analysis.Context.AddProgramToAnalysis ({\b Program} {\i program}){\f2 [package]}}}
\par
{\bkmkstart AAAAAAABAC}
{\bkmkend AAAAAAABAC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 120                                                             \{\par
121             foreach (var analyser in analysers) \{\par
122                 analyser.Diagnose (program);\par
123             \}\par
124         \}\par
}
}
{\xe \v FinishAnalysis\:Yarn::Analysis::Context}
{\xe \v Yarn::Analysis::Context\:FinishAnalysis}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IEnumerable<{\b Diagnosis}> Yarn.Analysis.Context.FinishAnalysis ()}}
\par
{\bkmkstart AAAAAAABAD}
{\bkmkend AAAAAAABAD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 126                                                        \{\par
127             List<Diagnosis> diagnoses = new List<Diagnosis> ();\par
128 \par
129             foreach (var analyser in analysers) \{\par
130                 diagnoses.AddRange (analyser.GatherDiagnoses ());\par
131             \}\par
132 \par
133             return diagnoses;\par
134         \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v _defaultAnalyserClasses\:Yarn::Analysis::Context}
{\xe \v Yarn::Analysis::Context\:_defaultAnalyserClasses}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IEnumerable<Type> Yarn.Analysis.Context._defaultAnalyserClasses{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABAE}
{\bkmkend AAAAAAABAE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v analysers\:Yarn::Analysis::Context}
{\xe \v Yarn::Analysis::Context\:analysers}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
List<{\b CompiledProgramAnalyser}> Yarn.Analysis.Context.analysers{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABAF}
{\bkmkend AAAAAAABAF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v defaultAnalyserClasses\:Yarn::Analysis::Context}
{\xe \v Yarn::Analysis::Context\:defaultAnalyserClasses}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IEnumerable<Type> Yarn.Analysis.Context.defaultAnalyserClasses{\f2 [get]}, {\f2 [package]}}}
\par
{\bkmkstart AAAAAAABAG}
{\bkmkend AAAAAAABAG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
YarnSpinner/{\b Analyser.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Yarn.Parser.CustomCommand Class Reference\par \pard\plain 
{\tc\tcl2 \v Yarn.Parser.CustomCommand}
{\xe \v Yarn.Parser.CustomCommand}
{\bkmkstart AAAAAAAARO}
{\bkmkend AAAAAAAARO}
Inheritance diagram for Yarn.Parser.CustomCommand:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d3/dcc/a00264.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for Yarn.Parser.CustomCommand:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "da/d53/a00265.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b ToString} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Package Types\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Type} \{ {\b Type.Expression}, 
{\b Type.ClientCommand}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Package Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CustomCommand} ({\b ParseNode} {\b parent}, {\b Parser} p)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b PrintTree} (int indentLevel)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Node} {\b NodeParent} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Package Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b CanParse} ({\b Parser} p)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Package Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Type} {\b type}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Expression} {\b expression}{\f2  [get, set]}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b clientCommand}{\f2  [get, set]}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Enumeration Documentation\par
\pard\plain 
{\xe \v Type\:Yarn::Parser::CustomCommand}
{\xe \v Yarn::Parser::CustomCommand\:Type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b Yarn.Parser.CustomCommand.Type}{\f2 [package]}}}
\par
{\bkmkstart AAAAAAAARP}
{\bkmkend AAAAAAAARP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v Expression\:Yarn::Parser::CustomCommand}
{\xe \v Yarn::Parser::CustomCommand\:Expression}
{\b {\i Expression{\bkmkstart AAAAAAAARQ}
{\bkmkend AAAAAAAARQ}
}}  \par
{\xe \v ClientCommand\:Yarn::Parser::CustomCommand}
{\xe \v Yarn::Parser::CustomCommand\:ClientCommand}
{\b {\i ClientCommand{\bkmkstart AAAAAAAARR}
{\bkmkend AAAAAAAARR}
}}  \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 263                                \{\par
264                 Expression,\par
265                 ClientCommand\par
266             \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v CustomCommand\:Yarn::Parser::CustomCommand}
{\xe \v Yarn::Parser::CustomCommand\:CustomCommand}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Yarn.Parser.CustomCommand.CustomCommand ({\b ParseNode} {\i parent}, {\b Parser} {\i p}){\f2 [package]}}}
\par
{\bkmkstart AAAAAAAARS}
{\bkmkend AAAAAAAARS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 279                                                                : base(parent, p) \{\par
280 \par
281                 p.ExpectSymbol(TokenType.BeginCommand);\par
282 \par
283                 // Custom commands can have ANY token in them. Read them all until we hit the\par
284                 // end command token.\par
285                 var commandTokens = new List<Token>();\par
286                 do \{\par
287                     commandTokens.Add(p.ExpectSymbol());\par
288                 \} while (p.NextSymbolIs(TokenType.EndCommand) == false);\par
289                 p.ExpectSymbol(TokenType.EndCommand);\par
290 \par
291                 // If the first token is an identifier and the second is\par
292                 // a left paren, it may be a function call expression;\par
293                 // evaluate it as such\par
294                 if (commandTokens.Count > 1 && \par
295                     commandTokens[0].type == TokenType.Identifier &&\par
296                     commandTokens[1].type == TokenType.LeftParen) \{         \par
297                     var parser = new Parser(commandTokens, p.library);\par
298                     var expression = Expression.Parse(this, parser);\par
299                     type = Type.Expression;\par
300                     this.expression = expression;\par
301                 \} else \{\par
302                     // Otherwise, evaluate it as a command\par
303                     type = Type.ClientCommand;\par
304 \par
305                     this.clientCommand = commandTokens[0].value;\par
306                 \}\par
307 \par
308 \par
309 \par
310             \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v CanParse\:Yarn::Parser::CustomCommand}
{\xe \v Yarn::Parser::CustomCommand\:CanParse}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static bool Yarn.Parser.CustomCommand.CanParse ({\b Parser} {\i p}){\f2 [static]}, {\f2 [package]}}}
\par
{\bkmkstart AAAAAAAART}
{\bkmkend AAAAAAAART}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 274             \{\par
275                 return p.NextSymbolsAre (TokenType.BeginCommand, TokenType.Text) ||\par
276                     p.NextSymbolsAre (TokenType.BeginCommand, TokenType.Identifier);\par
277             \}\par
}
}
{\xe \v NodeParent\:Yarn::Parser::CustomCommand}
{\xe \v Yarn::Parser::CustomCommand\:NodeParent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Node} Yarn.Parser.ParseNode.NodeParent (){\f2 [package]}, {\f2 [inherited]}}}
\par
{\bkmkstart AAAAAAAARA}
{\bkmkend AAAAAAAARA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 116                                        \{\par
117                 var node = this;\par
118 \par
119                 do \{\par
120                     if (node is Node) \{\par
121                         return node as Node;\par
122                     \}\par
123                     node = node.parent;\par
124                 \} while (node \par
125                     != null);                   \par
126 \par
127                 return null;\par
128             \}\par
}
}
{\xe \v PrintTree\:Yarn::Parser::CustomCommand}
{\xe \v Yarn::Parser::CustomCommand\:PrintTree}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string Yarn.Parser.CustomCommand.PrintTree (int {\i indentLevel}){\f2 [package]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAARU}
{\bkmkend AAAAAAAARU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Yarn.Parser.ParseNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAARC \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 313             \{\par
314                 switch (type) \{\par
315                 case Type.Expression:\par
316                     return Tab (indentLevel, "Expression: ") + expression.PrintTree (indentLevel + 1);\par
317                 case Type.ClientCommand:\par
318                     return Tab (indentLevel, "Command: " + clientCommand);\par
319                 \}\par
320                 return "";\par
321 \par
322             \}\par
}
}
{\xe \v ToString\:Yarn::Parser::CustomCommand}
{\xe \v Yarn::Parser::CustomCommand\:ToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string Yarn.Parser.ParseNode.ToString (){\f2 [inherited]}}}
\par
{\bkmkstart AAAAAAAARD}
{\bkmkend AAAAAAAARD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 111             \{\par
112                 return this.GetType ().Name;\par
113             \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v type\:Yarn::Parser::CustomCommand}
{\xe \v Yarn::Parser::CustomCommand\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Type} Yarn.Parser.CustomCommand.type{\f2 [package]}}}
\par
{\bkmkstart AAAAAAAARV}
{\bkmkend AAAAAAAARV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v clientCommand\:Yarn::Parser::CustomCommand}
{\xe \v Yarn::Parser::CustomCommand\:clientCommand}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string Yarn.Parser.CustomCommand.clientCommand{\f2 [get]}, {\f2 [set]}, {\f2 [package]}}}
\par
{\bkmkstart AAAAAAAARW}
{\bkmkend AAAAAAAARW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v expression\:Yarn::Parser::CustomCommand}
{\xe \v Yarn::Parser::CustomCommand\:expression}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Expression} Yarn.Parser.CustomCommand.expression{\f2 [get]}, {\f2 [set]}, {\f2 [package]}}}
\par
{\bkmkstart AAAAAAAARX}
{\bkmkend AAAAAAAARX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
YarnSpinner/{\b Parser.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Yarn.Unity.YarnSpinnerEditorWindow.Deprecation Struct Reference\par \pard\plain 
{\tc\tcl2 \v Yarn.Unity.YarnSpinnerEditorWindow.Deprecation}
{\xe \v Yarn.Unity.YarnSpinnerEditorWindow.Deprecation}
{\bkmkstart AAAAAAABCT}
{\bkmkend AAAAAAABCT}
Collaboration diagram for Yarn.Unity.YarnSpinnerEditorWindow.Deprecation:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d1/dc6/a00347.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Deprecation} (System.Type {\b type}, string {\b methodName}, string {\b usageNotes})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
System.Type {\b type}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b methodName}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b usageNotes}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Deprecation\:Yarn::Unity::YarnSpinnerEditorWindow::Deprecation}
{\xe \v Yarn::Unity::YarnSpinnerEditorWindow::Deprecation\:Deprecation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Yarn.Unity.YarnSpinnerEditorWindow.Deprecation.Deprecation (System.Type {\i type}, string {\i methodName}, string {\i usageNotes})}}
\par
{\bkmkstart AAAAAAABCU}
{\bkmkend AAAAAAABCU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 297             \{\par
298                 this.type = type;\par
299                 this.methodName = methodName;\par
300                 this.usageNotes = usageNotes;\par
301             \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v methodName\:Yarn::Unity::YarnSpinnerEditorWindow::Deprecation}
{\xe \v Yarn::Unity::YarnSpinnerEditorWindow::Deprecation\:methodName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string Yarn.Unity.YarnSpinnerEditorWindow.Deprecation.methodName}}
\par
{\bkmkstart AAAAAAABCV}
{\bkmkend AAAAAAABCV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v type\:Yarn::Unity::YarnSpinnerEditorWindow::Deprecation}
{\xe \v Yarn::Unity::YarnSpinnerEditorWindow::Deprecation\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
System.Type Yarn.Unity.YarnSpinnerEditorWindow.Deprecation.type}}
\par
{\bkmkstart AAAAAAABCW}
{\bkmkend AAAAAAABCW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v usageNotes\:Yarn::Unity::YarnSpinnerEditorWindow::Deprecation}
{\xe \v Yarn::Unity::YarnSpinnerEditorWindow::Deprecation\:usageNotes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string Yarn.Unity.YarnSpinnerEditorWindow.Deprecation.usageNotes}}
\par
{\bkmkstart AAAAAAABCX}
{\bkmkend AAAAAAABCX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Unity/Assets/Yarn Spinner/Code/Editor/{\b YarnSpinnerEditorWindow.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Yarn.Analysis.Diagnosis Class Reference\par \pard\plain 
{\tc\tcl2 \v Yarn.Analysis.Diagnosis}
{\xe \v Yarn.Analysis.Diagnosis}
{\bkmkstart AAAAAAAAZN}
{\bkmkend AAAAAAAAZN}
Collaboration diagram for Yarn.Analysis.Diagnosis:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d2/d41/a00318.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Types\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Severity} \{ {\b Severity.Error}, 
{\b Severity.Warning}, 
{\b Severity.Note}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Diagnosis} (string {\b message}, {\b Severity} {\b severity}, string {\b nodeName}=null, int {\b lineNumber}=-1, int {\b columnNumber}=-1)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b ToString} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b ToString} (bool showSeverity)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b message}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b nodeName}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b lineNumber}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b columnNumber}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Severity} {\b severity}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Enumeration Documentation\par
\pard\plain 
{\xe \v Severity\:Yarn::Analysis::Diagnosis}
{\xe \v Yarn::Analysis::Diagnosis\:Severity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b Yarn.Analysis.Diagnosis.Severity}}}
\par
{\bkmkstart AAAAAAAAZO}
{\bkmkend AAAAAAAAZO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v Error\:Yarn::Analysis::Diagnosis}
{\xe \v Yarn::Analysis::Diagnosis\:Error}
{\b {\i Error{\bkmkstart AAAAAAAAZP}
{\bkmkend AAAAAAAAZP}
}}  \par
{\xe \v Warning\:Yarn::Analysis::Diagnosis}
{\xe \v Yarn::Analysis::Diagnosis\:Warning}
{\b {\i Warning{\bkmkstart AAAAAAAAZQ}
{\bkmkend AAAAAAAAZQ}
}}  \par
{\xe \v Note\:Yarn::Analysis::Diagnosis}
{\xe \v Yarn::Analysis::Diagnosis\:Note}
{\b {\i Note{\bkmkstart AAAAAAAAZR}
{\bkmkend AAAAAAAAZR}
}}  \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 13                              \{\par
14             Error,\par
15             Warning,\par
16             Note\par
17         \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Diagnosis\:Yarn::Analysis::Diagnosis}
{\xe \v Yarn::Analysis::Diagnosis\:Diagnosis}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Yarn.Analysis.Diagnosis.Diagnosis (string {\i message}, {\b Severity} {\i severity}, string {\i nodeName} = {\f2 null}, int {\i lineNumber} = {\f2 -1}, int {\i columnNumber} = {\f2 -1})}}
\par
{\bkmkstart AAAAAAAAZS}
{\bkmkend AAAAAAAAZS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 21         \{\par
22             this.message = message;\par
23             this.nodeName = nodeName;\par
24             this.lineNumber = lineNumber;\par
25             this.columnNumber = columnNumber;\par
26             this.severity = severity;\par
27         \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v ToString\:Yarn::Analysis::Diagnosis}
{\xe \v Yarn::Analysis::Diagnosis\:ToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string Yarn.Analysis.Diagnosis.ToString ()}}
\par
{\bkmkstart AAAAAAAAZT}
{\bkmkend AAAAAAAAZT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 30         \{\par
31             return ToString (showSeverity: false);\par
32         \}\par
}
}
{\xe \v ToString\:Yarn::Analysis::Diagnosis}
{\xe \v Yarn::Analysis::Diagnosis\:ToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string Yarn.Analysis.Diagnosis.ToString (bool {\i showSeverity})}}
\par
{\bkmkstart AAAAAAAAZU}
{\bkmkend AAAAAAAAZU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 35         \{\par
36 \par
37             string contextLabel = "";\par
38 \par
39             if (showSeverity) \{\par
40                 switch (severity) \{\par
41                 case Severity.Error:\par
42                     contextLabel = "ERROR: ";\par
43                     break;\par
44                 case Severity.Warning:\par
45                     contextLabel = "WARNING: ";\par
46                     break;\par
47                 case Severity.Note:\par
48                     contextLabel = "Note: ";\par
49                     break;\par
50                 default:\par
51                     throw new ArgumentOutOfRangeException ();\par
52                 \}\par
53             \}\par
54 \par
55             if (this.nodeName != null) \{\par
56 \par
57                 contextLabel += this.nodeName;\par
58                 if (this.lineNumber != -1) \{\par
59                     contextLabel += string.Format (": \{0\}", this.lineNumber);\par
60 \par
61                     if (this.columnNumber != -1) \{\par
62                         contextLabel += string.Format (":\{0\}", this.columnNumber);\par
63                     \}\par
64                 \}\par
65             \} \par
66 \par
67             string message;\par
68 \par
69             if (string.IsNullOrEmpty(contextLabel)) \{\par
70                 message = this.message;\par
71             \} else \{\par
72                 message = string.Format ("\{0\}: \{1\}", contextLabel, this.message);\par
73             \}\par
74 \par
75             return message;\par
76         \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v columnNumber\:Yarn::Analysis::Diagnosis}
{\xe \v Yarn::Analysis::Diagnosis\:columnNumber}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Yarn.Analysis.Diagnosis.columnNumber}}
\par
{\bkmkstart AAAAAAAAZV}
{\bkmkend AAAAAAAAZV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v lineNumber\:Yarn::Analysis::Diagnosis}
{\xe \v Yarn::Analysis::Diagnosis\:lineNumber}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Yarn.Analysis.Diagnosis.lineNumber}}
\par
{\bkmkstart AAAAAAAAZW}
{\bkmkend AAAAAAAAZW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v message\:Yarn::Analysis::Diagnosis}
{\xe \v Yarn::Analysis::Diagnosis\:message}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string Yarn.Analysis.Diagnosis.message}}
\par
{\bkmkstart AAAAAAAAZX}
{\bkmkend AAAAAAAAZX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v nodeName\:Yarn::Analysis::Diagnosis}
{\xe \v Yarn::Analysis::Diagnosis\:nodeName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string Yarn.Analysis.Diagnosis.nodeName}}
\par
{\bkmkstart AAAAAAAAZY}
{\bkmkend AAAAAAAAZY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v severity\:Yarn::Analysis::Diagnosis}
{\xe \v Yarn::Analysis::Diagnosis\:severity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Severity} Yarn.Analysis.Diagnosis.severity}}
\par
{\bkmkstart AAAAAAAAZZ}
{\bkmkend AAAAAAAAZZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
YarnSpinner/{\b Analyser.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Yarn.Dialogue Class Reference\par \pard\plain 
{\tc\tcl2 \v Yarn.Dialogue}
{\xe \v Yarn.Dialogue}
{\bkmkstart AAAAAAAALP}
{\bkmkend AAAAAAAALP}
Collaboration diagram for Yarn.Dialogue:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dd/ded/a00211.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CommandResult}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b LineResult}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b NodeCompleteResult}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b OptionSetResult}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b RunnerResult}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b StandardLibrary}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Dialogue} ({\b Yarn.VariableStorage} {\b continuity})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b LoadFile} (string fileName, bool showTokens=false, bool showParseTree=false, string onlyConsiderNode=null)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b LoadString} (string text, string fileName="<input>", bool showTokens=false, bool showParseTree=false, string onlyConsiderNode=null)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IEnumerable\par
< {\b Yarn.Dialogue.RunnerResult} > {\b Run} (string startNode={\b DEFAULT_START})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b String} {\b SerializeVM} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b DeserializeVM} (string encoded)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Stop} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b GetTextForNode} (string nodeName)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b UnloadAll} (bool clearVisitedNodes=true)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b String} {\b Compile} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b String} {\b GetByteCode} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b NodeExists} (string nodeName)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Analyse} ({\b Analysis.Context} context)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Logger} {\b LogDebugMessage}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Logger} {\b LogErrorMessage}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const string {\b DEFAULT_START} = "Start"\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Library} {\b library}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Package Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b VariableStorage} {\b continuity}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IEnumerable< string > {\b visitedNodes}{\f2  [get]}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IEnumerable< string > {\b allNodes}{\f2  [get]}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b currentNode}{\f2  [get]}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Loader} {\b loader}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Program} {\b program}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HashSet< {\b String} > {\b visitedNodeNames} = new HashSet<string>()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b VirtualMachine} {\b vm}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Dialogue\:Yarn::Dialogue}
{\xe \v Yarn::Dialogue\:Dialogue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Yarn.Dialogue.Dialogue ({\b Yarn.VariableStorage} {\i continuity})}}
\par
{\bkmkstart AAAAAAAALQ}
{\bkmkend AAAAAAAALQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 160                                                          \{\par
161             this.continuity = continuity;\par
162             loader = new Loader (this);\par
163             library = new Library ();\par
164 \par
165             library.ImportLibrary (new StandardLibrary ());\par
166 \par
167             // Register the "visited" function, which returns true if we've visited\par
168             // a node previously (nodes are marked as visited when we leave them)\par
169             library.RegisterFunction ("visited", 1, delegate(Yarn.Value[] parameters) \{\par
170                 var name = parameters[0].AsString;\par
171                 return visitedNodeNames.Contains(name);\par
172             \});\par
173 \par
174         \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Analyse\:Yarn::Dialogue}
{\xe \v Yarn::Dialogue\:Analyse}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Yarn.Dialogue.Analyse ({\b Analysis.Context} {\i context})}}
\par
{\bkmkstart AAAAAAAALR}
{\bkmkend AAAAAAAALR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 353                                                       \{\par
354 \par
355             context.AddProgramToAnalysis (this.program);\par
356 \par
357         \}\par
}
}
{\xe \v Compile\:Yarn::Dialogue}
{\xe \v Yarn::Dialogue\:Compile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b String} Yarn.Dialogue.Compile ()}}
\par
{\bkmkstart AAAAAAAALS}
{\bkmkend AAAAAAAALS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 323                                 \{\par
324             return program.DumpCode (library);\par
325         \}\par
}
}
{\xe \v DeserializeVM\:Yarn::Dialogue}
{\xe \v Yarn::Dialogue\:DeserializeVM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Yarn.Dialogue.DeserializeVM (string {\i encoded})}}
\par
{\bkmkstart AAAAAAAALT}
{\bkmkend AAAAAAAALT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 269         \{\par
270             vm.DeserializeVM(encoded);\par
271         \}\par
}
}
{\xe \v GetByteCode\:Yarn::Dialogue}
{\xe \v Yarn::Dialogue\:GetByteCode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b String} Yarn.Dialogue.GetByteCode ()}}
\par
{\bkmkstart AAAAAAAALU}
{\bkmkend AAAAAAAALU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 327                                     \{\par
328             return program.DumpCode (library);\par
329         \}\par
}
}
{\xe \v GetTextForNode\:Yarn::Dialogue}
{\xe \v Yarn::Dialogue\:GetTextForNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string Yarn.Dialogue.GetTextForNode (string {\i nodeName})}}
\par
{\bkmkstart AAAAAAAALV}
{\bkmkend AAAAAAAALV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 301                                                       \{\par
302             if (program.nodes.Count == 0) \{\par
303                 LogErrorMessage ("No nodes are loaded!");\par
304                 return null;\par
305             \} else if (program.nodes.ContainsKey(nodeName)) \{\par
306                 return program.GetTextForNode (nodeName);\par
307             \} else \{\par
308                 LogErrorMessage ("No node named " + nodeName);\par
309                 return null;\par
310             \}\par
311         \}\par
}
}
{\xe \v LoadFile\:Yarn::Dialogue}
{\xe \v Yarn::Dialogue\:LoadFile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Yarn.Dialogue.LoadFile (string {\i fileName}, bool {\i showTokens} = {\f2 false}, bool {\i showParseTree} = {\f2 false}, string {\i onlyConsiderNode} = {\f2 null})}}
\par
{\bkmkstart AAAAAAAALW}
{\bkmkend AAAAAAAALW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 177                                                                                                                                  \{\par
178             System.IO.StreamReader reader = new System.IO.StreamReader(fileName);\par
179             string inputString = reader.ReadToEnd ();\par
180             reader.Close ();\par
181 \par
182             LoadString (inputString, fileName, showTokens, showParseTree, onlyConsiderNode);\par
183 \par
184         \}\par
}
}
{\xe \v LoadString\:Yarn::Dialogue}
{\xe \v Yarn::Dialogue\:LoadString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Yarn.Dialogue.LoadString (string {\i text}, string {\i fileName} = {\f2 "<input>"}, bool {\i showTokens} = {\f2 false}, bool {\i showParseTree} = {\f2 false}, string {\i onlyConsiderNode} = {\f2 null})}}
\par
{\bkmkstart AAAAAAAALX}
{\bkmkend AAAAAAAALX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 187                                                                                                                                                       \{\par
188 \par
189             if (LogDebugMessage == null) \{\par
190                 throw new YarnException ("LogDebugMessage must be set before loading");\par
191             \}\par
192 \par
193             if (LogErrorMessage == null) \{\par
194                 throw new YarnException ("LogErrorMessage must be set before loading");\par
195             \}\par
196 \par
197             program = loader.Load(text, library, fileName, program, showTokens, showParseTree, onlyConsiderNode);\par
198 \par
199         \}\par
}
}
{\xe \v NodeExists\:Yarn::Dialogue}
{\xe \v Yarn::Dialogue\:NodeExists}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Yarn.Dialogue.NodeExists (string {\i nodeName})}}
\par
{\bkmkstart AAAAAAAALY}
{\bkmkend AAAAAAAALY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 331                                                 \{\par
332             if (program == null) \{\par
333 \par
334                 if (program.nodes.Count > 0) \{\par
335                     LogDebugMessage ("Called NodeExists, but the program hasn't been compiled yet." +\par
336                     "Nodes have been loaded, so I'm going to compile them.");\par
337 \par
338                     if (program == null) \{\par
339                         return false;\par
340                     \}\par
341                 \} else \{\par
342                     LogErrorMessage ("Tried to call NodeExists, but no nodes have been compiled!");\par
343                     return false;\par
344                 \}\par
345             \}\par
346             if (program.nodes == null || program.nodes.Count == 0) \{\par
347                 LogDebugMessage ("Called NodeExists, but there are zero nodes. This may be an error.");\par
348                 return false;\par
349             \}\par
350             return program.nodes.ContainsKey(nodeName);\par
351         \}\par
}
}
{\xe \v Run\:Yarn::Dialogue}
{\xe \v Yarn::Dialogue\:Run}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IEnumerable<{\b Yarn.Dialogue.RunnerResult}> Yarn.Dialogue.Run (string {\i startNode} = {\f2 {\b DEFAULT_START}})}}
\par
{\bkmkstart AAAAAAAALZ}
{\bkmkend AAAAAAAALZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 205                                                                                              \{\par
206 \par
207 \par
208             if (LogDebugMessage == null) \{\par
209                 throw new YarnException ("LogDebugMessage must be set before running");\par
210             \}\par
211 \par
212             if (LogErrorMessage == null) \{\par
213                 throw new YarnException ("LogErrorMessage must be set before running");\par
214             \}\par
215 \par
216             if (program == null) \{\par
217                 LogErrorMessage ("Dialogue.Run was called, but no program was loaded. Stopping.");\par
218                 yield break;\par
219             \}\par
220 \par
221             vm = new VirtualMachine (this, program);\par
222 \par
223             RunnerResult latestResult;\par
224 \par
225             vm.lineHandler = delegate(LineResult result) \{\par
226                 latestResult = result;\par
227             \};\par
228 \par
229             vm.commandHandler = delegate(CommandResult result) \{\par
230                 // Is it the special custom command "<<stop>>"?\par
231                 if (result is CommandResult && (result as CommandResult).command.text == "stop") \{\par
232                     vm.Stop();\par
233                 \}\par
234                 latestResult = result;\par
235             \};\par
236 \par
237             vm.nodeCompleteHandler = delegate(NodeCompleteResult result) \{\par
238                 visitedNodeNames.Add (vm.currentNodeName);\par
239                 latestResult = result;\par
240             \};\par
241 \par
242             vm.optionsHandler = delegate(OptionSetResult result) \{\par
243                 latestResult = result;\par
244             \};\par
245 \par
246             if (vm.SetNode (startNode) == false) \{\par
247                 yield break;\par
248             \}\par
249 \par
250             // Run until the program stops, pausing to yield important\par
251             // results\par
252             do \{\par
253 \par
254                 latestResult = null;\par
255                 vm.RunNext ();\par
256                 if (latestResult != null)\par
257                     yield return latestResult;\par
258 \par
259             \} while (vm.executionState != VirtualMachine.ExecutionState.Stopped);\par
260 \par
261         \}\par
}
}
{\xe \v SerializeVM\:Yarn::Dialogue}
{\xe \v Yarn::Dialogue\:SerializeVM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b String} Yarn.Dialogue.SerializeVM ()}}
\par
{\bkmkstart AAAAAAAAMA}
{\bkmkend AAAAAAAAMA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 264         \{\par
265             return vm.SerializeVM();\par
266         \}\par
}
}
{\xe \v Stop\:Yarn::Dialogue}
{\xe \v Yarn::Dialogue\:Stop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Yarn.Dialogue.Stop ()}}
\par
{\bkmkstart AAAAAAAAMB}
{\bkmkend AAAAAAAAMB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 273                            \{\par
274             if (vm != null)\par
275                 vm.Stop();\par
276         \}\par
}
}
{\xe \v UnloadAll\:Yarn::Dialogue}
{\xe \v Yarn::Dialogue\:UnloadAll}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Yarn.Dialogue.UnloadAll (bool {\i clearVisitedNodes} = {\f2 true})}}
\par
{\bkmkstart AAAAAAAAMC}
{\bkmkend AAAAAAAAMC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 314                                                              \{\par
315             if (clearVisitedNodes)\par
316                 visitedNodeNames.Clear();\par
317 \par
318             program = null;\par
319 \par
320         \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v continuity\:Yarn::Dialogue}
{\xe \v Yarn::Dialogue\:continuity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b VariableStorage} Yarn.Dialogue.continuity{\f2 [package]}}}
\par
{\bkmkstart AAAAAAAAMD}
{\bkmkend AAAAAAAAMD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DEFAULT_START\:Yarn::Dialogue}
{\xe \v Yarn::Dialogue\:DEFAULT_START}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const string Yarn.Dialogue.DEFAULT_START = "Start"}}
\par
{\bkmkstart AAAAAAAAME}
{\bkmkend AAAAAAAAME}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v library\:Yarn::Dialogue}
{\xe \v Yarn::Dialogue\:library}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Library} Yarn.Dialogue.library}}
\par
{\bkmkstart AAAAAAAAMF}
{\bkmkend AAAAAAAAMF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v loader\:Yarn::Dialogue}
{\xe \v Yarn::Dialogue\:loader}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Loader} Yarn.Dialogue.loader{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAMG}
{\bkmkend AAAAAAAAMG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v LogDebugMessage\:Yarn::Dialogue}
{\xe \v Yarn::Dialogue\:LogDebugMessage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Logger} Yarn.Dialogue.LogDebugMessage}}
\par
{\bkmkstart AAAAAAAAMH}
{\bkmkend AAAAAAAAMH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v LogErrorMessage\:Yarn::Dialogue}
{\xe \v Yarn::Dialogue\:LogErrorMessage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Logger} Yarn.Dialogue.LogErrorMessage}}
\par
{\bkmkstart AAAAAAAAMI}
{\bkmkend AAAAAAAAMI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v program\:Yarn::Dialogue}
{\xe \v Yarn::Dialogue\:program}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Program} Yarn.Dialogue.program{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAMJ}
{\bkmkend AAAAAAAAMJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v visitedNodeNames\:Yarn::Dialogue}
{\xe \v Yarn::Dialogue\:visitedNodeNames}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
HashSet<{\b String}> Yarn.Dialogue.visitedNodeNames = new HashSet<string>(){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAMK}
{\bkmkend AAAAAAAAMK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v vm\:Yarn::Dialogue}
{\xe \v Yarn::Dialogue\:vm}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b VirtualMachine} Yarn.Dialogue.vm{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAML}
{\bkmkend AAAAAAAAML}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v allNodes\:Yarn::Dialogue}
{\xe \v Yarn::Dialogue\:allNodes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IEnumerable<string> Yarn.Dialogue.allNodes{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAMM}
{\bkmkend AAAAAAAAMM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v currentNode\:Yarn::Dialogue}
{\xe \v Yarn::Dialogue\:currentNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string Yarn.Dialogue.currentNode{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAMN}
{\bkmkend AAAAAAAAMN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v visitedNodes\:Yarn::Dialogue}
{\xe \v Yarn::Dialogue\:visitedNodes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IEnumerable<string> Yarn.Dialogue.visitedNodes{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAMO}
{\bkmkend AAAAAAAAMO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
YarnSpinner/{\b Dialogue.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Yarn.Unity.DialogueRunner Class Reference\par \pard\plain 
{\tc\tcl2 \v Yarn.Unity.DialogueRunner}
{\xe \v Yarn.Unity.DialogueRunner}
{\bkmkstart AAAAAAABAS}
{\bkmkend AAAAAAABAS}
Inheritance diagram for Yarn.Unity.DialogueRunner:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dd/dbb/a00330.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for Yarn.Unity.DialogueRunner:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d8/df7/a00331.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b AddScript} (string text)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b AddScript} (TextAsset asset)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ResetDialogue} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b StartDialogue} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Save} (string fileName="main")\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Load} (string fileName="main")\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b StartDialogue} (string {\b startNode})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Clear} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Stop} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b NodeExists} (string nodeName)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b DispatchCommand} (string command)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
TextAsset[] {\b sourceText}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Yarn.Unity.VariableStorageBehaviour} {\b variableStorage}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Yarn.Unity.DialogueUIBehaviour} {\b dialogueUI}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b startNode} = {\b Yarn.Dialogue.DEFAULT_START}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b startAutomatically} = true\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b automaticCommands} = true\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b isDialogueRunning}{\f2  [get, set]}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Dialogue} {\b dialogue}{\f2  [get]}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b currentNodeName}{\f2  [get]}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Start} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IEnumerator {\b RunDialogue} (string {\b startNode}="Start")\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Dialogue} {\b _dialogue}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v AddScript\:Yarn::Unity::DialogueRunner}
{\xe \v Yarn::Unity::DialogueRunner\:AddScript}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Yarn.Unity.DialogueRunner.AddScript (string {\i text})}}
\par
{\bkmkstart AAAAAAABAT}
{\bkmkend AAAAAAABAT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 104                                            \{\par
105             dialogue.LoadString(text);\par
106         \}\par
}
}
{\xe \v AddScript\:Yarn::Unity::DialogueRunner}
{\xe \v Yarn::Unity::DialogueRunner\:AddScript}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Yarn.Unity.DialogueRunner.AddScript (TextAsset {\i asset})}}
\par
{\bkmkstart AAAAAAABAU}
{\bkmkend AAAAAAABAU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 108                                                \{\par
109             dialogue.LoadString(asset.text);\par
110         \}\par
}
}
{\xe \v Clear\:Yarn::Unity::DialogueRunner}
{\xe \v Yarn::Unity::DialogueRunner\:Clear}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Yarn.Unity.DialogueRunner.Clear ()}}
\par
{\bkmkstart AAAAAAABAV}
{\bkmkend AAAAAAABAV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 202                             \{\par
203 \par
204             if (isDialogueRunning) \{\par
205                 throw new System.InvalidOperationException("You cannot clear the dialogue system while a dialogue is running.");\par
206             \}\par
207 \par
208             dialogue.UnloadAll();\par
209         \}\par
}
}
{\xe \v DispatchCommand\:Yarn::Unity::DialogueRunner}
{\xe \v Yarn::Unity::DialogueRunner\:DispatchCommand}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Yarn.Unity.DialogueRunner.DispatchCommand (string {\i command})}}
\par
{\bkmkstart AAAAAAABAW}
{\bkmkend AAAAAAABAW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 225                                                     \{\par
226 \par
227             // commands that can be automatically dispatched look like this:\par
228             // COMMANDNAME OBJECTNAME <param> <param> <param> ...\par
229 \par
230             // We can dispatch this command if:\par
231             // 1. it has at least 2 words\par
232             // 2. the second word is the name of an object\par
233             // 3. that object has components that have methods \par
234             //    with the YarnCommand attribute that have the\par
235             //    correct commandString set\par
236 \par
237             var words = command.Split(' ');\par
238 \par
239             // need 2 parameters in order to have both a command name\par
240             // and the name of an object to find\par
241             if (words.Length < 2)\par
242                 return false;\par
243 \par
244             var commandName = words[0];\par
245 \par
246             var objectName = words[1];\par
247 \par
248             var sceneObject = GameObject.Find(objectName);\par
249 \par
250             // If we can't find an object, we can't dispatch a command\par
251             if (sceneObject == null)\par
252                 return false;\par
253 \par
254             int numberOfMethodsFound = 0;\par
255 \par
256             List<string> parameters;\par
257 \par
258             if (words.Length > 2) \{\par
259                 parameters = new List<string>(words);\par
260                 parameters.RemoveRange(0, 2);\par
261             \} else \{\par
262                 parameters = new List<string>();\par
263             \}\par
264 \par
265             // Find every MonoBehaviour (or subclass) on the object\par
266             foreach (var component in sceneObject.GetComponents<MonoBehaviour>()) \{\par
267                 var type = component.GetType();\par
268 \par
269                 // Find every method in this component\par
270                 foreach (var method in type.GetMethods()) \{\par
271 \par
272                     // Find the YarnCommand attributes on this method\par
273                     var attributes = (YarnCommandAttribute[]) method.GetCustomAttributes(typeof(YarnCommandAttribute), true);\par
274 \par
275                     // Find the YarnCommand whose commandString is equal to the command name\par
276                     foreach (var attribute in attributes) \{\par
277                         if (attribute.commandString == commandName) \{\par
278 \par
279                             // Verify that this method has the right number of parameters\par
280                             var methodParameters = method.GetParameters();\par
281 \par
282                             if (methodParameters.Length != parameters.Count) \{\par
283                                 Debug.LogErrorFormat(sceneObject, "Method \\"\{0\}\\" wants to respond to Yarn command \\"\{1\}\\", but it has a different number of parameters (\{2\}) to those provided (\{3\})!", method.Name, commandName, methodParameters.Length, parameters.Count);\par
284                                 return false;\par
285                             \}\par
286 \par
287                             // Verify that this method has only string parameters (or no parameters)\par
288                             foreach (var paramInfo in methodParameters) \{\par
289                                 if (paramInfo.ParameterType.IsAssignableFrom(typeof(string)) == false) \{\par
290                                     Debug.LogErrorFormat(sceneObject, "Method \\"\{0\}\\" wants to respond to Yarn command \\"\{1\}\\", but not all of its parameters are strings!", method.Name, commandName);\par
291                                     return false;\par
292                                 \}\par
293                             \}\par
294 \par
295                             // Cool, we can send the command!\par
296                             method.Invoke(component, parameters.ToArray());\par
297                             numberOfMethodsFound ++;\par
298 \par
299                         \}\par
300                     \}\par
301                 \} \par
302             \}\par
303 \par
304             // Warn if we found multiple things that could respond\par
305             // to this command.\par
306             if (numberOfMethodsFound > 1) \{\par
307                 Debug.LogWarningFormat(sceneObject, "The command \\"\{0\}\\" found \{1\} targets. " +\par
308                     "You should only have one - check your scripts.");\par
309             \}\par
310 \par
311             return numberOfMethodsFound > 0;\par
312         \}\par
}
}
{\xe \v Load\:Yarn::Unity::DialogueRunner}
{\xe \v Yarn::Unity::DialogueRunner\:Load}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Yarn.Unity.DialogueRunner.Load (string {\i fileName} = {\f2 "main"})}}
\par
{\bkmkstart AAAAAAABAX}
{\bkmkend AAAAAAABAX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 129         \{\par
130             variableStorage.GetValue("SaveFile" + fileName);\par
131         \}\par
}
}
{\xe \v NodeExists\:Yarn::Unity::DialogueRunner}
{\xe \v Yarn::Unity::DialogueRunner\:NodeExists}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Yarn.Unity.DialogueRunner.NodeExists (string {\i nodeName})}}
\par
{\bkmkstart AAAAAAABAY}
{\bkmkend AAAAAAABAY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 215                                                 \{\par
216             return dialogue.NodeExists(nodeName);\par
217         \}\par
}
}
{\xe \v ResetDialogue\:Yarn::Unity::DialogueRunner}
{\xe \v Yarn::Unity::DialogueRunner\:ResetDialogue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Yarn.Unity.DialogueRunner.ResetDialogue ()}}
\par
{\bkmkstart AAAAAAABAZ}
{\bkmkend AAAAAAABAZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 114         \{\par
115             variableStorage.ResetToDefaults ();\par
116             StartDialogue ();\par
117         \}\par
}
}
{\xe \v RunDialogue\:Yarn::Unity::DialogueRunner}
{\xe \v Yarn::Unity::DialogueRunner\:RunDialogue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IEnumerator Yarn.Unity.DialogueRunner.RunDialogue (string {\i startNode} = {\f2 "Start"}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABBA}
{\bkmkend AAAAAAABBA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 145         \{\par
146             // Mark that we're in conversation.\par
147             isDialogueRunning = true;\par
148 \par
149             // Signal that we're starting up.\par
150             yield return StartCoroutine(this.dialogueUI.DialogueStarted());\par
151 \par
152             // Get lines, options and commands from the Dialogue object,\par
153             // one at a time.\par
154             foreach (Yarn.Dialogue.RunnerResult step in dialogue.Run(startNode)) \{\par
155 \par
156                 if (step is Yarn.Dialogue.LineResult) \{\par
157 \par
158                     // Wait for line to finish displaying\par
159                     var lineResult = step as Yarn.Dialogue.LineResult;\par
160                     yield return StartCoroutine (this.dialogueUI.RunLine (lineResult.line));\par
161 \par
162                 \} else if (step is Yarn.Dialogue.OptionSetResult) \{\par
163 \par
164                     // Wait for user to finish picking an option\par
165                     var optionSetResult = step as Yarn.Dialogue.OptionSetResult;\par
166                     yield return StartCoroutine (\par
167                         this.dialogueUI.RunOptions (\par
168                         optionSetResult.options,\par
169                         optionSetResult.setSelectedOptionDelegate\par
170                     ));\par
171 \par
172                 \} else if (step is Yarn.Dialogue.CommandResult) \{\par
173 \par
174                     // Wait for command to finish running\par
175 \par
176                     var commandResult = step as Yarn.Dialogue.CommandResult;\par
177 \par
178                     if (DispatchCommand(commandResult.command.text) == true) \{\par
179                         // command was dispatched\par
180                     \} else \{\par
181                         yield return StartCoroutine (this.dialogueUI.RunCommand (commandResult.command));\par
182                     \}\par
183 \par
184 \par
185                 \} else if(step is Yarn.Dialogue.NodeCompleteResult) \{\par
186 \par
187                     // Wait for post-node action\par
188                     var nodeResult = step as Yarn.Dialogue.NodeCompleteResult;\par
189                     yield return StartCoroutine (this.dialogueUI.NodeComplete (nodeResult.nextNode));\par
190                 \}\par
191             \}\par
192 \par
193             // No more results! The dialogue is done.\par
194             yield return StartCoroutine (this.dialogueUI.DialogueComplete ());\par
195 \par
196             // Clear the 'is running' flag. We do this after DialogueComplete returns,\par
197             // to allow time for any animations that might run while transitioning\par
198             // out of a conversation (ie letterboxing going away, etc)\par
199             isDialogueRunning = false;\par
200         \}\par
}
}
{\xe \v Save\:Yarn::Unity::DialogueRunner}
{\xe \v Yarn::Unity::DialogueRunner\:Save}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Yarn.Unity.DialogueRunner.Save (string {\i fileName} = {\f2 "main"})}}
\par
{\bkmkstart AAAAAAABBB}
{\bkmkend AAAAAAABBB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 124         \{\par
125             variableStorage.SetValue("SaveFile" + fileName, dialogue.SerializeVM());\par
126         \}\par
}
}
{\xe \v Start\:Yarn::Unity::DialogueRunner}
{\xe \v Yarn::Unity::DialogueRunner\:Start}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Yarn.Unity.DialogueRunner.Start (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABBC}
{\bkmkend AAAAAAABBC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 76         \{\par
77             // Ensure that we have our Implementation object\par
78             if (dialogueUI == null) \{\par
79                 Debug.LogError ("Implementation was not set! Can't run the dialogue!");\par
80                 return;\par
81             \}\par
82 \par
83             // And that we have our variable storage object\par
84             if (variableStorage == null) \{\par
85                 Debug.LogError ("Variable storage was not set! Can't run the dialogue!");\par
86                 return;\par
87             \}\par
88 \par
89             // Ensure that the variable storage has the right stuff in it\par
90             variableStorage.ResetToDefaults ();\par
91 \par
92             // Load all JSON\par
93             if (sourceText != null) \{\par
94                 foreach (var source in sourceText) \{\par
95                     dialogue.LoadString (source.text, source.name);\par
96                 \}\par
97             \}\par
98 \par
99             if (startAutomatically) \{\par
100                 StartDialogue();\par
101             \}\par
102         \}\par
}
}
{\xe \v StartDialogue\:Yarn::Unity::DialogueRunner}
{\xe \v Yarn::Unity::DialogueRunner\:StartDialogue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Yarn.Unity.DialogueRunner.StartDialogue ()}}
\par
{\bkmkstart AAAAAAABBD}
{\bkmkend AAAAAAABBD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 119                                      \{\par
120             StartDialogue(startNode);\par
121         \}\par
}
}
{\xe \v StartDialogue\:Yarn::Unity::DialogueRunner}
{\xe \v Yarn::Unity::DialogueRunner\:StartDialogue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Yarn.Unity.DialogueRunner.StartDialogue (string {\i startNode})}}
\par
{\bkmkstart AAAAAAABBE}
{\bkmkend AAAAAAABBE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 134         \{\par
135 \par
136             // Stop any processes that might be running already\par
137             StopAllCoroutines ();\par
138             dialogueUI.StopAllCoroutines ();\par
139 \par
140             // Get it going\par
141             StartCoroutine (RunDialogue (startNode));\par
142         \}\par
}
}
{\xe \v Stop\:Yarn::Unity::DialogueRunner}
{\xe \v Yarn::Unity::DialogueRunner\:Stop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Yarn.Unity.DialogueRunner.Stop ()}}
\par
{\bkmkstart AAAAAAABBF}
{\bkmkend AAAAAAABBF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 211                            \{\par
212             dialogue.Stop();\par
213         \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v _dialogue\:Yarn::Unity::DialogueRunner}
{\xe \v Yarn::Unity::DialogueRunner\:_dialogue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Dialogue} Yarn.Unity.DialogueRunner._dialogue{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABBG}
{\bkmkend AAAAAAABBG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v automaticCommands\:Yarn::Unity::DialogueRunner}
{\xe \v Yarn::Unity::DialogueRunner\:automaticCommands}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Yarn.Unity.DialogueRunner.automaticCommands = true}}
\par
{\bkmkstart AAAAAAABBH}
{\bkmkend AAAAAAABBH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v dialogueUI\:Yarn::Unity::DialogueRunner}
{\xe \v Yarn::Unity::DialogueRunner\:dialogueUI}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Yarn.Unity.DialogueUIBehaviour} Yarn.Unity.DialogueRunner.dialogueUI}}
\par
{\bkmkstart AAAAAAABBI}
{\bkmkend AAAAAAABBI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v sourceText\:Yarn::Unity::DialogueRunner}
{\xe \v Yarn::Unity::DialogueRunner\:sourceText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TextAsset [] Yarn.Unity.DialogueRunner.sourceText}}
\par
{\bkmkstart AAAAAAABBJ}
{\bkmkend AAAAAAABBJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v startAutomatically\:Yarn::Unity::DialogueRunner}
{\xe \v Yarn::Unity::DialogueRunner\:startAutomatically}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Yarn.Unity.DialogueRunner.startAutomatically = true}}
\par
{\bkmkstart AAAAAAABBK}
{\bkmkend AAAAAAABBK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v startNode\:Yarn::Unity::DialogueRunner}
{\xe \v Yarn::Unity::DialogueRunner\:startNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string Yarn.Unity.DialogueRunner.startNode = {\b Yarn.Dialogue.DEFAULT_START}}}
\par
{\bkmkstart AAAAAAABBL}
{\bkmkend AAAAAAABBL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v variableStorage\:Yarn::Unity::DialogueRunner}
{\xe \v Yarn::Unity::DialogueRunner\:variableStorage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Yarn.Unity.VariableStorageBehaviour} Yarn.Unity.DialogueRunner.variableStorage}}
\par
{\bkmkstart AAAAAAABBM}
{\bkmkend AAAAAAABBM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v currentNodeName\:Yarn::Unity::DialogueRunner}
{\xe \v Yarn::Unity::DialogueRunner\:currentNodeName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string Yarn.Unity.DialogueRunner.currentNodeName{\f2 [get]}}}
\par
{\bkmkstart AAAAAAABBN}
{\bkmkend AAAAAAABBN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v dialogue\:Yarn::Unity::DialogueRunner}
{\xe \v Yarn::Unity::DialogueRunner\:dialogue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Dialogue} Yarn.Unity.DialogueRunner.dialogue{\f2 [get]}}}
\par
{\bkmkstart AAAAAAABBO}
{\bkmkend AAAAAAABBO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v isDialogueRunning\:Yarn::Unity::DialogueRunner}
{\xe \v Yarn::Unity::DialogueRunner\:isDialogueRunning}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Yarn.Unity.DialogueRunner.isDialogueRunning{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAABBP}
{\bkmkend AAAAAAABBP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Unity/Assets/Yarn Spinner/Code/{\b DialogueRunner.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Yarn.Unity.DialogueUIBehaviour Class Reference\par \pard\plain 
{\tc\tcl2 \v Yarn.Unity.DialogueUIBehaviour}
{\xe \v Yarn.Unity.DialogueUIBehaviour}
{\bkmkstart AAAAAAABBT}
{\bkmkend AAAAAAABBT}
Inheritance diagram for Yarn.Unity.DialogueUIBehaviour:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dd/d1d/a00336.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for Yarn.Unity.DialogueUIBehaviour:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d4/dce/a00337.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual IEnumerator {\b DialogueStarted} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
abstract IEnumerator {\b RunLine} ({\b Yarn.Line} line)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
abstract IEnumerator {\b RunOptions} ({\b Yarn.Options} optionsCollection, {\b Yarn.OptionChooser} optionChooser)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
abstract IEnumerator {\b RunCommand} ({\b Yarn.Command} command)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual IEnumerator {\b NodeComplete} (string nextNode)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual IEnumerator {\b DialogueComplete} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v DialogueComplete\:Yarn::Unity::DialogueUIBehaviour}
{\xe \v Yarn::Unity::DialogueUIBehaviour\:DialogueComplete}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual IEnumerator Yarn.Unity.DialogueUIBehaviour.DialogueComplete (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAADJ}
{\bkmkend AAAAAAAADJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented in {\b Yarn.Unity.Example.ExampleDialogueUI} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAADK \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 359                                                        \{\par
360             // Default implementation does nothing.\par
361             yield break;\par
362         \}\par
}
}
{\xe \v DialogueStarted\:Yarn::Unity::DialogueUIBehaviour}
{\xe \v Yarn::Unity::DialogueUIBehaviour\:DialogueStarted}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual IEnumerator Yarn.Unity.DialogueUIBehaviour.DialogueStarted (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAADL}
{\bkmkend AAAAAAAADL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented in {\b Yarn.Unity.Example.ExampleDialogueUI} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAADM \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 337                                                      \{\par
338             // Default implementation does nothing.\par
339             yield break;\par
340         \}\par
}
}
{\xe \v NodeComplete\:Yarn::Unity::DialogueUIBehaviour}
{\xe \v Yarn::Unity::DialogueUIBehaviour\:NodeComplete}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual IEnumerator Yarn.Unity.DialogueUIBehaviour.NodeComplete (string {\i nextNode}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAADP}
{\bkmkend AAAAAAAADP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 353                                                                  \{\par
354             // Default implementation does nothing.\par
355             yield break;\par
356         \}\par
}
}
{\xe \v RunCommand\:Yarn::Unity::DialogueUIBehaviour}
{\xe \v Yarn::Unity::DialogueUIBehaviour\:RunCommand}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
abstract IEnumerator Yarn.Unity.DialogueUIBehaviour.RunCommand ({\b Yarn.Command} {\i command}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAADS}
{\bkmkend AAAAAAAADS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b Yarn.Unity.Example.ExampleDialogueUI} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAADT \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v RunLine\:Yarn::Unity::DialogueUIBehaviour}
{\xe \v Yarn::Unity::DialogueUIBehaviour\:RunLine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
abstract IEnumerator Yarn.Unity.DialogueUIBehaviour.RunLine ({\b Yarn.Line} {\i line}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAADV}
{\bkmkend AAAAAAAADV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b Yarn.Unity.Example.ExampleDialogueUI} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAADW \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v RunOptions\:Yarn::Unity::DialogueUIBehaviour}
{\xe \v Yarn::Unity::DialogueUIBehaviour\:RunOptions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
abstract IEnumerator Yarn.Unity.DialogueUIBehaviour.RunOptions ({\b Yarn.Options} {\i optionsCollection}, {\b Yarn.OptionChooser} {\i optionChooser}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAADY}
{\bkmkend AAAAAAAADY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b Yarn.Unity.Example.ExampleDialogueUI} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAADZ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Unity/Assets/Yarn Spinner/Code/{\b DialogueRunner.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Yarn.Unity.Example.ExampleDialogueUI Class Reference\par \pard\plain 
{\tc\tcl2 \v Yarn.Unity.Example.ExampleDialogueUI}
{\xe \v Yarn.Unity.Example.ExampleDialogueUI}
{\bkmkstart AAAAAAABDP}
{\bkmkend AAAAAAABDP}
Inheritance diagram for Yarn.Unity.Example.ExampleDialogueUI:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d0/dc3/a00354.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for Yarn.Unity.Example.ExampleDialogueUI:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d3/dc9/a00355.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override IEnumerator {\b RunLine} ({\b Yarn.Line} line)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override IEnumerator {\b RunOptions} ({\b Yarn.Options} optionsCollection, {\b Yarn.OptionChooser} optionChooser)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SetOption} (int selectedOption)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override IEnumerator {\b RunCommand} ({\b Yarn.Command} command)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override IEnumerator {\b DialogueStarted} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override IEnumerator {\b DialogueComplete} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual IEnumerator {\b NodeComplete} (string nextNode)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
GameObject {\b dialogueContainer}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Text} {\b lineText}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
GameObject {\b continuePrompt}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b textSpeed} = 0.025f\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
List< Button > {\b optionButtons}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
RectTransform {\b gameControlsContainer}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Awake} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Yarn.OptionChooser} {\b SetSelectedOption}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Awake\:Yarn::Unity::Example::ExampleDialogueUI}
{\xe \v Yarn::Unity::Example::ExampleDialogueUI\:Awake}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Yarn.Unity.Example.ExampleDialogueUI.Awake (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABDQ}
{\bkmkend AAAAAAABDQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 70         \{\par
71             // Start by hiding the container, line and option buttons\par
72             if (dialogueContainer != null)\par
73                 dialogueContainer.SetActive(false);\par
74             \par
75             lineText.gameObject.SetActive (false);\par
76             \par
77             foreach (var button in optionButtons) \{\par
78                 button.gameObject.SetActive (false);\par
79             \}\par
80             \par
81             // Hide the continue prompt if it exists\par
82             if (continuePrompt != null)\par
83                 continuePrompt.SetActive (false);\par
84         \}\par
}
}
{\xe \v DialogueComplete\:Yarn::Unity::Example::ExampleDialogueUI}
{\xe \v Yarn::Unity::Example::ExampleDialogueUI\:DialogueComplete}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override IEnumerator Yarn.Unity.Example.ExampleDialogueUI.DialogueComplete (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAADK}
{\bkmkend AAAAAAAADK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b Yarn.Unity.DialogueUIBehaviour} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAADJ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 196         \{\par
197             Debug.Log ("Complete!");\par
198 \par
199             // Hide the dialogue interface.\par
200             if (dialogueContainer != null)\par
201                 dialogueContainer.SetActive(false);\par
202 \par
203             // Show the game controls.\par
204             if (gameControlsContainer != null) \{\par
205                 gameControlsContainer.gameObject.SetActive(true);\par
206             \}\par
207             \par
208             yield break;\par
209         \}\par
}
}
{\xe \v DialogueStarted\:Yarn::Unity::Example::ExampleDialogueUI}
{\xe \v Yarn::Unity::Example::ExampleDialogueUI\:DialogueStarted}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override IEnumerator Yarn.Unity.Example.ExampleDialogueUI.DialogueStarted (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAADM}
{\bkmkend AAAAAAAADM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b Yarn.Unity.DialogueUIBehaviour} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAADL \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 179         \{\par
180             Debug.Log ("Dialogue starting!");\par
181             \par
182             // Enable the dialogue controls.\par
183             if (dialogueContainer != null)\par
184                 dialogueContainer.SetActive(true);\par
185 \par
186             // Hide the game controls.\par
187             if (gameControlsContainer != null) \{\par
188                 gameControlsContainer.gameObject.SetActive(false);\par
189             \}\par
190             \par
191             yield break;\par
192         \}\par
}
}
{\xe \v NodeComplete\:Yarn::Unity::Example::ExampleDialogueUI}
{\xe \v Yarn::Unity::Example::ExampleDialogueUI\:NodeComplete}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual IEnumerator Yarn.Unity.DialogueUIBehaviour.NodeComplete (string {\i nextNode}){\f2 [virtual]}, {\f2 [inherited]}}}
\par
{\bkmkstart AAAAAAAADP}
{\bkmkend AAAAAAAADP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 353                                                                  \{\par
354             // Default implementation does nothing.\par
355             yield break;\par
356         \}\par
}
}
{\xe \v RunCommand\:Yarn::Unity::Example::ExampleDialogueUI}
{\xe \v Yarn::Unity::Example::ExampleDialogueUI\:RunCommand}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override IEnumerator Yarn.Unity.Example.ExampleDialogueUI.RunCommand ({\b Yarn.Command} {\i command}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAADT}
{\bkmkend AAAAAAAADT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Yarn.Unity.DialogueUIBehaviour} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAADS \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 171         \{\par
172             // "Perform" the command\par
173             Debug.Log ("Command: " + command.text);\par
174 \par
175             yield break;\par
176         \}\par
}
}
{\xe \v RunLine\:Yarn::Unity::Example::ExampleDialogueUI}
{\xe \v Yarn::Unity::Example::ExampleDialogueUI\:RunLine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override IEnumerator Yarn.Unity.Example.ExampleDialogueUI.RunLine ({\b Yarn.Line} {\i line}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAADW}
{\bkmkend AAAAAAAADW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Yarn.Unity.DialogueUIBehaviour} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAADV \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 89         \{\par
90             // Show the text\par
91             lineText.gameObject.SetActive (true);\par
92             \par
93             if (textSpeed > 0.0f) \{\par
94                 // Display the line one character at a time\par
95                 var stringBuilder = new StringBuilder ();\par
96                 \par
97                 foreach (char c in line.text) \{\par
98                     stringBuilder.Append (c);\par
99                     lineText.text = stringBuilder.ToString ();\par
100                     yield return new WaitForSeconds (textSpeed);\par
101                 \}\par
102             \} else \{\par
103                 // Display the line immediately if textSpeed == 0\par
104                 lineText.text = line.text;\par
105             \}\par
106             \par
107             // Show the 'press any key' prompt when done, if we have one\par
108             if (continuePrompt != null)\par
109                 continuePrompt.SetActive (true);\par
110             \par
111             \par
112             // Wait for any user input\par
113             while (Input.anyKeyDown == false) \{\par
114                 yield return null;\par
115             \}\par
116             \par
117             // Hide the text and prompt\par
118             lineText.gameObject.SetActive (false);\par
119             \par
120             if (continuePrompt != null)\par
121                 continuePrompt.SetActive (false);\par
122             \par
123         \}\par
}
}
{\xe \v RunOptions\:Yarn::Unity::Example::ExampleDialogueUI}
{\xe \v Yarn::Unity::Example::ExampleDialogueUI\:RunOptions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override IEnumerator Yarn.Unity.Example.ExampleDialogueUI.RunOptions ({\b Yarn.Options} {\i optionsCollection}, {\b Yarn.OptionChooser} {\i optionChooser}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAADZ}
{\bkmkend AAAAAAAADZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Yarn.Unity.DialogueUIBehaviour} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAADY \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 128         \{\par
129             // Do a little bit of safety checking\par
130             if (optionsCollection.options.Count > optionButtons.Count) \{\par
131                 Debug.LogWarning("There are more options to present than there are" +\par
132                                  "buttons to present them in. This will cause problems.");\par
133             \}\par
134             \par
135             // Display each option in a button, and make it visible\par
136             int i = 0;\par
137             foreach (var optionString in optionsCollection.options) \{\par
138                 optionButtons [i].gameObject.SetActive (true);\par
139                 optionButtons [i].GetComponentInChildren<Text> ().text = optionString;\par
140                 i++;\par
141             \}\par
142             \par
143             // Record that we're using it\par
144             SetSelectedOption = optionChooser;\par
145             \par
146             // Wait until the chooser has been used and then removed (see SetOption below)\par
147             while (SetSelectedOption != null) \{\par
148                 yield return null;\par
149             \}\par
150                 \par
151             // Hide all the buttons\par
152             foreach (var button in optionButtons) \{\par
153                 button.gameObject.SetActive (false);\par
154             \}\par
155         \}\par
}
}
{\xe \v SetOption\:Yarn::Unity::Example::ExampleDialogueUI}
{\xe \v Yarn::Unity::Example::ExampleDialogueUI\:SetOption}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Yarn.Unity.Example.ExampleDialogueUI.SetOption (int {\i selectedOption})}}
\par
{\bkmkstart AAAAAAABDR}
{\bkmkend AAAAAAABDR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 159         \{\par
160             \par
161             // Call the delegate to tell the dialogue system that we've\par
162             // selected an option.\par
163             SetSelectedOption (selectedOption);\par
164             \par
165             // Now remove the delegate so that the loop in RunOptions will exit\par
166             SetSelectedOption = null; \par
167         \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v continuePrompt\:Yarn::Unity::Example::ExampleDialogueUI}
{\xe \v Yarn::Unity::Example::ExampleDialogueUI\:continuePrompt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
GameObject Yarn.Unity.Example.ExampleDialogueUI.continuePrompt}}
\par
{\bkmkstart AAAAAAABDS}
{\bkmkend AAAAAAABDS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v dialogueContainer\:Yarn::Unity::Example::ExampleDialogueUI}
{\xe \v Yarn::Unity::Example::ExampleDialogueUI\:dialogueContainer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
GameObject Yarn.Unity.Example.ExampleDialogueUI.dialogueContainer}}
\par
{\bkmkstart AAAAAAABDT}
{\bkmkend AAAAAAABDT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v gameControlsContainer\:Yarn::Unity::Example::ExampleDialogueUI}
{\xe \v Yarn::Unity::Example::ExampleDialogueUI\:gameControlsContainer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
RectTransform Yarn.Unity.Example.ExampleDialogueUI.gameControlsContainer}}
\par
{\bkmkstart AAAAAAABDU}
{\bkmkend AAAAAAABDU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v lineText\:Yarn::Unity::Example::ExampleDialogueUI}
{\xe \v Yarn::Unity::Example::ExampleDialogueUI\:lineText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Text} Yarn.Unity.Example.ExampleDialogueUI.lineText}}
\par
{\bkmkstart AAAAAAABDV}
{\bkmkend AAAAAAABDV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v optionButtons\:Yarn::Unity::Example::ExampleDialogueUI}
{\xe \v Yarn::Unity::Example::ExampleDialogueUI\:optionButtons}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
List<Button> Yarn.Unity.Example.ExampleDialogueUI.optionButtons}}
\par
{\bkmkstart AAAAAAABDW}
{\bkmkend AAAAAAABDW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SetSelectedOption\:Yarn::Unity::Example::ExampleDialogueUI}
{\xe \v Yarn::Unity::Example::ExampleDialogueUI\:SetSelectedOption}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Yarn.OptionChooser} Yarn.Unity.Example.ExampleDialogueUI.SetSelectedOption{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABDX}
{\bkmkend AAAAAAABDX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v textSpeed\:Yarn::Unity::Example::ExampleDialogueUI}
{\xe \v Yarn::Unity::Example::ExampleDialogueUI\:textSpeed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float Yarn.Unity.Example.ExampleDialogueUI.textSpeed = 0.025f}}
\par
{\bkmkstart AAAAAAABDY}
{\bkmkend AAAAAAABDY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Unity/Assets/Yarn Spinner/Examples/Demo Scripts/{\b ExampleDialogueUI.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ExampleVariableStorage Class Reference\par \pard\plain 
{\tc\tcl2 \v ExampleVariableStorage}
{\xe \v ExampleVariableStorage}
{\bkmkstart AAAAAAAACN}
{\bkmkend AAAAAAAACN}
Inheritance diagram for ExampleVariableStorage:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d9/d90/a00178.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for ExampleVariableStorage:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "db/dd9/a00179.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b DefaultVariable}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override void {\b ResetToDefaults} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override void {\b SetValue} (string variableName, {\b Yarn.Value} value)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override {\b Yarn.Value} {\b GetValue} (string variableName)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override void {\b Clear} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b SetNumber} (string variableName, float number)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b GetNumber} (string variableName)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b DefaultVariable}[] {\b defaultVariables}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
UnityEngine.UI.Text {\b debugTextView}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Awake} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Update} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Dictionary< string, {\b Yarn.Value} > {\b variables} = new Dictionary<string, {\b Yarn.Value}> ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Class Documentation\par
\pard\plain 
{\xe \v ExampleVariableStorage::DefaultVariable}
{\bkmkstart AAAAAAAAAU}
{\bkmkend AAAAAAAAAU}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
class ExampleVariableStorage::DefaultVariable\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
Collaboration diagram for ExampleVariableStorage.DefaultVariable:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "de/d53/a00169.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Class Members:\par}
\pard\plain \s60\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr string{\bkmkstart AAAAAAAAAV}
{\bkmkend AAAAAAAAAV}
\cell }{name\cell }{\cell }{\row }
{\qr Value{\bkmkstart AAAAAAAAAW}
{\bkmkend AAAAAAAAAW}
\cell }{type\cell }{\cell }{\row }
{\qr string{\bkmkstart AAAAAAAAAX}
{\bkmkend AAAAAAAAAX}
\cell }{value\cell }{\cell }{\row }
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Awake\:ExampleVariableStorage}
{\xe \v ExampleVariableStorage\:Awake}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExampleVariableStorage.Awake (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAACO}
{\bkmkend AAAAAAAACO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 59     \{\par
60         ResetToDefaults ();\par
61     \}\par
}
}
{\xe \v Clear\:ExampleVariableStorage}
{\xe \v ExampleVariableStorage\:Clear}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override void ExampleVariableStorage.Clear (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAACP}
{\bkmkend AAAAAAAACP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b Yarn.Unity.VariableStorageBehaviour} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAACQ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 141     \{\par
142         variables.Clear ();\par
143     \}\par
}
}
{\xe \v GetNumber\:ExampleVariableStorage}
{\xe \v ExampleVariableStorage\:GetNumber}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual float Yarn.Unity.VariableStorageBehaviour.GetNumber (string {\i variableName}){\f2 [virtual]}, {\f2 [inherited]}}}
\par
{\bkmkstart AAAAAAAACR}
{\bkmkend AAAAAAAACR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Yarn.VariableStorage} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAACS \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 375         \{\par
376             throw new System.NotImplementedException ();\par
377         \}\par
}
}
{\xe \v GetValue\:ExampleVariableStorage}
{\xe \v ExampleVariableStorage\:GetValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override {\b Yarn.Value} ExampleVariableStorage.GetValue (string {\i variableName}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAACT}
{\bkmkend AAAAAAAACT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b Yarn.Unity.VariableStorageBehaviour} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAACU \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 131     \{\par
132         // If we don't have a variable with this name, return the null value\par
133         if (variables.ContainsKey(variableName) == false)\par
134             return Yarn.Value.NULL;\par
135         \par
136         return variables [variableName];\par
137     \}\par
}
}
{\xe \v ResetToDefaults\:ExampleVariableStorage}
{\xe \v ExampleVariableStorage\:ResetToDefaults}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override void ExampleVariableStorage.ResetToDefaults (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAACV}
{\bkmkend AAAAAAAACV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Yarn.Unity.VariableStorageBehaviour} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAACW \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 65     \{\par
66         Clear ();\par
67         \par
68         // For each default variable that's been defined, parse the string\par
69         // that the user typed in in Unity and store the variable\par
70         foreach (var variable in defaultVariables) \{\par
71             \par
72             object value;\par
73 \par
74             switch (variable.type) \{\par
75             case Yarn.Value.Type.Number:\par
76                 float f = 0.0f;\par
77 \par
78                 float.TryParse(variable.value, out f);\par
79 \par
80                 value = f;\par
81 \par
82                 break;\par
83 \par
84             case Yarn.Value.Type.String:\par
85 \par
86                 value = variable.value;\par
87 \par
88                 break;\par
89             case Yarn.Value.Type.Bool:\par
90 \par
91                 bool b = false;\par
92 \par
93                 bool.TryParse(variable.value, out b);\par
94 \par
95                 value = b;\par
96 \par
97                 break;\par
98             case Yarn.Value.Type.Variable:\par
99 \par
100                 // We don't support assigning default variables from other variables\par
101                 // yet\par
102                 Debug.LogErrorFormat("Can't set variable \{0\} to \{1\}: You can't " +\par
103                     "set a default variable to be another variable, because it " +\par
104                     "may not have been initialised yet.", variable.name, variable.value);\par
105                 continue;\par
106 \par
107             case Yarn.Value.Type.Null:\par
108 \par
109                 value = null;\par
110 \par
111                 break;\par
112             default:\par
113                 throw new System.ArgumentOutOfRangeException ();\par
114             \}\par
115 \par
116             var v = new Yarn.Value(value);\par
117 \par
118             SetValue ("$" + variable.name, v);\par
119         \}\par
120     \}\par
}
}
{\xe \v SetNumber\:ExampleVariableStorage}
{\xe \v ExampleVariableStorage\:SetNumber}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void Yarn.Unity.VariableStorageBehaviour.SetNumber (string {\i variableName}, float {\i number}){\f2 [virtual]}, {\f2 [inherited]}}}
\par
{\bkmkstart AAAAAAAACX}
{\bkmkend AAAAAAAACX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Yarn.VariableStorage} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAACY \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 370         \{\par
371             throw new System.NotImplementedException ();\par
372         \}\par
}
}
{\xe \v SetValue\:ExampleVariableStorage}
{\xe \v ExampleVariableStorage\:SetValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override void ExampleVariableStorage.SetValue (string {\i variableName}, {\b Yarn.Value} {\i value}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAACZ}
{\bkmkend AAAAAAAACZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented from {\b Yarn.Unity.VariableStorageBehaviour} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAADA \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 124     \{\par
125         // Copy this value into our list\par
126         variables[variableName] = new Yarn.Value(value);\par
127     \}\par
}
}
{\xe \v Update\:ExampleVariableStorage}
{\xe \v ExampleVariableStorage\:Update}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExampleVariableStorage.Update (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAADB}
{\bkmkend AAAAAAAADB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 147     \{\par
148         if (debugTextView != null) \{\par
149             var stringBuilder = new System.Text.StringBuilder ();\par
150             foreach (KeyValuePair<string,Yarn.Value> item in variables) \{\par
151                 stringBuilder.AppendLine (string.Format ("\{0\} = \{1\}", \par
152                                                          item.Key, \par
153                                                          item.Value));\par
154             \}\par
155             debugTextView.text = stringBuilder.ToString ();\par
156         \}\par
157     \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v debugTextView\:ExampleVariableStorage}
{\xe \v ExampleVariableStorage\:debugTextView}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
UnityEngine.UI.Text ExampleVariableStorage.debugTextView}}
\par
{\bkmkstart AAAAAAAADC}
{\bkmkend AAAAAAAADC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v defaultVariables\:ExampleVariableStorage}
{\xe \v ExampleVariableStorage\:defaultVariables}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b DefaultVariable} [] ExampleVariableStorage.defaultVariables}}
\par
{\bkmkstart AAAAAAAADD}
{\bkmkend AAAAAAAADD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v variables\:ExampleVariableStorage}
{\xe \v ExampleVariableStorage\:variables}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Dictionary<string, {\b Yarn.Value}> ExampleVariableStorage.variables = new Dictionary<string, {\b Yarn.Value}> (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAADE}
{\bkmkend AAAAAAAADE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Unity/Assets/Yarn Spinner/Examples/Demo Scripts/{\b ExampleVariableStorage.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Yarn.Parser.Expression Class Reference\par \pard\plain 
{\tc\tcl2 \v Yarn.Parser.Expression}
{\xe \v Yarn.Parser.Expression}
{\bkmkstart AAAAAAAARY}
{\bkmkend AAAAAAAARY}
Inheritance diagram for Yarn.Parser.Expression:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d1/dd4/a00267.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for Yarn.Parser.Expression:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "db/d12/a00268.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b ToString} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Package Types\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Type} \{ {\b Type.Value}, 
{\b Type.FunctionCall}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Package Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Expression} ({\b ParseNode} {\b parent}, {\b ValueNode} {\b value})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Expression} ({\b ParseNode} {\b parent}, {\b FunctionInfo} {\b function}, List< {\b Expression} > {\b parameters})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b PrintTree} (int indentLevel)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Node} {\b NodeParent} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Package Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b Expression} {\b Parse} ({\b ParseNode} {\b parent}, {\b Parser} p)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Package Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Type} {\b type}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueNode} {\b value}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FunctionInfo} {\b function}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
List< {\b Expression} > {\b parameters}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Private Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b ShouldApplyPrecedence} ({\b TokenType} o1, Stack< {\b Token} > operatorStack)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Enumeration Documentation\par
\pard\plain 
{\xe \v Type\:Yarn::Parser::Expression}
{\xe \v Yarn::Parser::Expression\:Type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b Yarn.Parser.Expression.Type}{\f2 [package]}}}
\par
{\bkmkstart AAAAAAAARZ}
{\bkmkend AAAAAAAARZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v Value\:Yarn::Parser::Expression}
{\xe \v Yarn::Parser::Expression\:Value}
{\b {\i Value{\bkmkstart AAAAAAAASA}
{\bkmkend AAAAAAAASA}
}}  \par
{\xe \v FunctionCall\:Yarn::Parser::Expression}
{\xe \v Yarn::Parser::Expression\:FunctionCall}
{\b {\i FunctionCall{\bkmkstart AAAAAAAASB}
{\bkmkend AAAAAAAASB}
}}  \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 737                                \{\par
738                 Value,\par
739                 FunctionCall\par
740             \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Expression\:Yarn::Parser::Expression}
{\xe \v Yarn::Parser::Expression\:Expression}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Yarn.Parser.Expression.Expression ({\b ParseNode} {\i parent}, {\b ValueNode} {\i value}){\f2 [package]}}}
\par
{\bkmkstart AAAAAAAASC}
{\bkmkend AAAAAAAASC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 749                                                                    : base(parent, null) \{\par
750                 this.type = Type.Value;\par
751                 this.value = value;\par
752             \}\par
}
}
{\xe \v Expression\:Yarn::Parser::Expression}
{\xe \v Yarn::Parser::Expression\:Expression}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Yarn.Parser.Expression.Expression ({\b ParseNode} {\i parent}, {\b FunctionInfo} {\i function}, List< {\b Expression} > {\i parameters}){\f2 [package]}}}
\par
{\bkmkstart AAAAAAAASD}
{\bkmkend AAAAAAAASD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 754                                                                                                       : base(parent, null) \{\par
755                 type = Type.FunctionCall;\par
756                 this.function = function;\par
757                 this.parameters = parameters;\par
758             \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v NodeParent\:Yarn::Parser::Expression}
{\xe \v Yarn::Parser::Expression\:NodeParent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Node} Yarn.Parser.ParseNode.NodeParent (){\f2 [package]}, {\f2 [inherited]}}}
\par
{\bkmkstart AAAAAAAARA}
{\bkmkend AAAAAAAARA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 116                                        \{\par
117                 var node = this;\par
118 \par
119                 do \{\par
120                     if (node is Node) \{\par
121                         return node as Node;\par
122                     \}\par
123                     node = node.parent;\par
124                 \} while (node \par
125                     != null);                   \par
126 \par
127                 return null;\par
128             \}\par
}
}
{\xe \v Parse\:Yarn::Parser::Expression}
{\xe \v Yarn::Parser::Expression\:Parse}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b Expression} Yarn.Parser.Expression.Parse ({\b ParseNode} {\i parent}, {\b Parser} {\i p}){\f2 [static]}, {\f2 [package]}}}
\par
{\bkmkstart AAAAAAAASE}
{\bkmkend AAAAAAAASE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 760                                                                          \{\par
761 \par
762                 // Applies Djikstra's "shunting-yard" algorithm to convert the \par
763                 // stream of infix expressions into postfix notation; we then\par
764                 // build a tree of expressions from the result\par
765 \par
766                 // https://en.wikipedia.org/wiki/Shunting-yard_algorithm\par
767 \par
768                 Queue<Token> _expressionRPN = new Queue<Token> ();\par
769                 var operatorStack = new Stack<Token>();\par
770 \par
771                 // used for keeping count of parameters for each function\par
772                 var functionStack = new Stack<Token> (); \par
773 \par
774                 var allValidTokenTypes = new List<TokenType>(Operator.operatorTypes);\par
775                 allValidTokenTypes.Add(TokenType.Number);\par
776                 allValidTokenTypes.Add(TokenType.Variable);\par
777                 allValidTokenTypes.Add(TokenType.String);\par
778                 allValidTokenTypes.Add(TokenType.LeftParen);\par
779                 allValidTokenTypes.Add(TokenType.RightParen);\par
780                 allValidTokenTypes.Add(TokenType.Identifier);\par
781                 allValidTokenTypes.Add(TokenType.Comma);\par
782                 allValidTokenTypes.Add(TokenType.True);\par
783                 allValidTokenTypes.Add(TokenType.False);\par
784                 allValidTokenTypes.Add(TokenType.Null);\par
785 \par
786                 Token lastToken = null;\par
787 \par
788                 // Read all the contents of the expression\par
789                 while (p.tokens.Count > 0 && p.NextSymbolIs(allValidTokenTypes.ToArray())) \{\par
790 \par
791                     Token nextToken = p.ExpectSymbol(allValidTokenTypes.ToArray());\par
792 \par
793                     if (nextToken.type == TokenType.Number ||\par
794                         nextToken.type == TokenType.Variable ||\par
795                         nextToken.type == TokenType.String ||\par
796                         nextToken.type == TokenType.True ||\par
797                         nextToken.type == TokenType.False ||\par
798                         nextToken.type == TokenType.Null) \{\par
799 \par
800                         // Primitive values go straight onto the output\par
801                         _expressionRPN.Enqueue (nextToken);\par
802                     \} else if (nextToken.type == TokenType.Identifier) \{\par
803                         operatorStack.Push (nextToken);\par
804                         functionStack.Push (nextToken);\par
805 \par
806                         // next token must be a left paren, so process that immediately\par
807                         nextToken = p.ExpectSymbol (TokenType.LeftParen);\par
808                         // enter that sub-expression\par
809                         operatorStack.Push (nextToken);\par
810 \par
811                     \} else if (nextToken.type == TokenType.Comma) \{\par
812 \par
813                         // Resolve this sub-expression before moving on to the\par
814                         // next parameter\par
815                         try \{\par
816                             // pop operators until we reach a left paren\par
817                             while (operatorStack.Peek().type != TokenType.LeftParen) \{\par
818                                 _expressionRPN.Enqueue(operatorStack.Pop());\par
819                             \}\par
820                         \} catch (InvalidOperationException) \{\par
821                             // we reached the end of the stack prematurely\par
822                             // this means unbalanced parens!\par
823                             throw ParseException.Make(nextToken, "Error parsing expression: " +\par
824                                 "unbalanced parentheses");\par
825                         \}\par
826 \par
827                         // We expect the top of the stack to now contain the left paren that \par
828                         // began the list of parameters\par
829                         if (operatorStack.Peek().type != TokenType.LeftParen) \{\par
830                             throw ParseException.Make (operatorStack.Peek (), "Expression parser got " +\par
831                                 "confused dealing with a function");\par
832                         \}\par
833 \par
834                         // The next token is not allowed to be a right-paren or a comma\par
835                         // (that is, you can't say "foo(2,,)")\par
836                         if (p.NextSymbolIs(TokenType.RightParen, TokenType.Comma)) \{\par
837                             throw ParseException.Make (p.tokens.Peek(), "Expected expression");\par
838                         \}\par
839 \par
840                         // Find the closest function on the stack\par
841                         // and increment the number of parameters\par
842                         functionStack.Peek().parameterCount++;\par
843 \par
844                     \} else if (Operator.IsOperator(nextToken.type)) \{\par
845                         // This is an operator\par
846 \par
847                         // If this is a Minus, we need to determine if it's a \par
848                         // unary minus or a binary minus.\par
849                         // Unary minus looks like this: "-1"\par
850                         // Binary minus looks like this: "2 - 3"\par
851                         // Things get complex when we say stuff like "1 + -1".\par
852                         // But it's easier when we realise that a minus\par
853                         // is ONLY unary when the last token was a left paren,\par
854                         // an operator, or it's the first token.\par
855 \par
856                         if (nextToken.type == TokenType.Minus) \{\par
857 \par
858                             if (lastToken == null || \par
859                                 lastToken.type == TokenType.LeftParen ||\par
860                                 Operator.IsOperator(lastToken.type)) \{\par
861 \par
862                                 // This is actually a unary minus.\par
863                                 nextToken.type = TokenType.UnaryMinus;\par
864                             \}\par
865                         \}\par
866 \par
867                         // We cannot assign values inside an expression. That is,\par
868                         // saying "$foo = 2" in an express does not assign $foo to 2\par
869                         // and then evaluate to 2. Instead, Yarn defines this\par
870                         // to mean "$foo == 2"\par
871                         if (nextToken.type == TokenType.EqualToOrAssign) \{\par
872                             nextToken.type = TokenType.EqualTo;\par
873                         \}\par
874 \par
875                         // O1 = this operator\par
876                         // O2 = the token at the top of the stack\par
877                         // While O2 is an operator, and EITHER: 1. O1 is left-associative and\par
878                         // has precedence <= O2, or 2. O1 is right-associative and\par
879                         // has precedence > O2:\par
880                         while (ShouldApplyPrecedence(nextToken.type, operatorStack)) \{\par
881                             var o = operatorStack.Pop();\par
882                             _expressionRPN.Enqueue(o);\par
883                         \}\par
884                         operatorStack.Push(nextToken);\par
885 \par
886                     \} else if (nextToken.type == TokenType.LeftParen) \{\par
887 \par
888                         // Record that we have entered a paren-delimited\par
889                         // subexpression\par
890                         operatorStack.Push(nextToken);\par
891                         \par
892                     \} else if (nextToken.type == TokenType.RightParen) \{\par
893 \par
894                         // We're leaving a subexpression; time to resolve the\par
895                         // order of operations that we saw in between the parens.\par
896 \par
897                         try \{\par
898                             // pop operators until we reach a left paren\par
899                             while (operatorStack.Peek().type != TokenType.LeftParen) \{\par
900                                 _expressionRPN.Enqueue(operatorStack.Pop());\par
901                             \}\par
902                             // pop the left paren\par
903                             operatorStack.Pop();\par
904                         \} catch (InvalidOperationException) \{\par
905                             // we reached the end of the stack prematurely\par
906                             // this means unbalanced parens!\par
907                             throw ParseException.Make(nextToken, "Error parsing expression: unbalanced parentheses");\par
908                         \}\par
909 \par
910                         if (operatorStack.Peek().type == TokenType.Identifier) \{\par
911                             // This whole paren-delimited subexpression is actually\par
912                             // a function call\par
913 \par
914                             // If the last token was a left-paren, then this\par
915                             // was a function with no parameters; otherwise, we \par
916                             // have an additional parameter (on top of the ones we counted\par
917                             // while encountering commas)\par
918 \par
919                             if (lastToken.type != TokenType.LeftParen) \{\par
920                                 functionStack.Peek ().parameterCount++;\par
921                             \}\par
922 \par
923                             _expressionRPN.Enqueue(operatorStack.Pop());\par
924                             functionStack.Pop ();\par
925                         \}\par
926 \par
927                     \}\par
928 \par
929                     // Record this as the last token we saw; we'll use\par
930                     // this to figure out if minuses are unary or not\par
931                     lastToken = nextToken;\par
932 \par
933                 \}\par
934 \par
935                 // No more tokens; pop all operators onto the output queue\par
936                 while (operatorStack.Count > 0) \{\par
937                     _expressionRPN.Enqueue(operatorStack.Pop());\par
938                 \}\par
939 \par
940                 // If the output queue is empty, then this is not an expression\par
941                 if (_expressionRPN.Count == 0) \{\par
942                     throw new ParseException ("Error parsing expression: no expression found!");\par
943                 \}\par
944 \par
945                 // We've now got this in more easily parsed RPN form; \par
946                 // time to build the expression tree.\par
947                 Token firstToken = _expressionRPN.Peek();\par
948                 var evaluationStack = new Stack<Expression>();\par
949                 while (_expressionRPN.Count > 0) \{\par
950 \par
951                     var next = _expressionRPN.Dequeue();\par
952                     if (Operator.IsOperator(next.type)) \{\par
953 \par
954                         // This is an operation\par
955 \par
956                         var info = Operator.InfoForOperator(next.type);\par
957                         if (evaluationStack.Count < info.arguments) \{\par
958                             throw ParseException.Make(next, "Error parsing expression: not enough " +\par
959                                 "arguments for operator "+next.type.ToString());\par
960                         \}\par
961 \par
962                         var parameters = new List<Expression> ();\par
963 \par
964                         for (int i = 0; i < info.arguments; i++) \{\par
965                             parameters.Add (evaluationStack.Pop ());\par
966                         \}\par
967                         parameters.Reverse ();\par
968 \par
969                         var operatorFunc = p.library.GetFunction (next.type.ToString());\par
970 \par
971                         var expr = new Expression (parent, operatorFunc, parameters);\par
972 \par
973                         evaluationStack.Push(expr);\par
974                     \} else if (next.type == TokenType.Identifier) \{\par
975                         // This is a function call\par
976                         var info = p.library.GetFunction(next.value as String);\par
977 \par
978                         // Ensure that this call has the right number of params\par
979                         if (info.IsParameterCountCorrect(next.parameterCount) == false) \{\par
980                             string error = string.Format("Error parsing expression: " +\par
981                                 "Unsupported number of parameters for function \{0\} (expected \{1\}, got \{2\})",\par
982                                 next.value as String,\par
983                                 info.paramCount,\par
984                                 next.parameterCount\par
985                             );\par
986                             throw ParseException.Make(next, error);\par
987                         \}\par
988 \par
989                         var parameterList = new List<Expression> ();\par
990                         for (int i = 0; i < next.parameterCount; i++) \{\par
991                             parameterList.Add (evaluationStack.Pop());\par
992                         \}\par
993                         parameterList.Reverse ();\par
994 \par
995                         var expr = new Expression (parent, info, parameterList);\par
996 \par
997                         evaluationStack.Push (expr);\par
998 \par
999                     \} else \{\par
1000 \par
1001                         // This is a raw value\par
1002                         var v = new ValueNode(parent, next);\par
1003                         Expression expr = new Expression(parent, v);\par
1004                         evaluationStack.Push(expr);\par
1005 \par
1006                     \}\par
1007                 \}\par
1008                 // We should now have a single expression in this stack, which is the root\par
1009                 // of the expression's tree. If we have more than one, then we have a problem.\par
1010                 if (evaluationStack.Count != 1) \{\par
1011                     throw ParseException.Make(firstToken, "Error parsing expression " +\par
1012                         "(stack did not reduce correctly)");\par
1013                 \}\par
1014 \par
1015                 // Return it\par
1016                 return evaluationStack.Pop ();\par
1017 \par
1018 \par
1019             \}\par
}
}
{\xe \v PrintTree\:Yarn::Parser::Expression}
{\xe \v Yarn::Parser::Expression\:PrintTree}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string Yarn.Parser.Expression.PrintTree (int {\i indentLevel}){\f2 [package]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAASF}
{\bkmkend AAAAAAAASF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Yarn.Parser.ParseNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAARC \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1051             \{\par
1052                 var stringBuilder = new StringBuilder ();\par
1053                 switch (type) \{\par
1054                 case Type.Value:\par
1055                     return value.PrintTree (indentLevel);\par
1056                 case Type.FunctionCall:\par
1057                     \par
1058                     if (parameters.Count == 0) \{\par
1059                         stringBuilder.Append(Tab(indentLevel, "Function call to " + function.name + " (no parameters)"));\par
1060                     \} else \{\par
1061                         stringBuilder.Append(Tab(indentLevel, "Function call to " + function.name + " (" +parameters.Count+" parameters) \{"));\par
1062                         foreach (var param in parameters) \{\par
1063                             stringBuilder.Append(param.PrintTree(indentLevel+1));\par
1064                         \}\par
1065                         stringBuilder.Append(Tab(indentLevel, "\}"));\par
1066                     \}\par
1067                     return stringBuilder.ToString();\par
1068 \par
1069 \par
1070                 \}\par
1071 \par
1072                 return Tab(indentLevel, "<error printing expression!>");\par
1073             \}\par
}
}
{\xe \v ShouldApplyPrecedence\:Yarn::Parser::Expression}
{\xe \v Yarn::Parser::Expression\:ShouldApplyPrecedence}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static bool Yarn.Parser.Expression.ShouldApplyPrecedence ({\b TokenType} {\i o1}, Stack< {\b Token} > {\i operatorStack}){\f2 [static]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAAASG}
{\bkmkend AAAAAAAASG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1023                                                                                                 \{\par
1024                 \par
1025                 if (operatorStack.Count == 0) \{\par
1026                     return false;\par
1027                 \}\par
1028                 if (Operator.IsOperator (o1) == false) \{\par
1029                     throw new ParseException ("Internal error parsing expression");\par
1030                 \}\par
1031                 TokenType o2 = operatorStack.Peek ().type;\par
1032 \par
1033                 if (Operator.IsOperator (o2) == false)\par
1034                     return false;\par
1035 \par
1036                 var o1Info = Operator.InfoForOperator (o1);\par
1037                 var o2Info = Operator.InfoForOperator (o2);\par
1038 \par
1039                 if (o1Info.associativity == Operator.Associativity.Left && o1Info.precedence <= o2Info.precedence) \{\par
1040                     return true;\par
1041                 \}\par
1042 \par
1043                 if (o1Info.associativity == Operator.Associativity.Right && o1Info.precedence < o2Info.precedence) \{\par
1044                     return true;\par
1045                 \}\par
1046 \par
1047                 return false;\par
1048             \}\par
}
}
{\xe \v ToString\:Yarn::Parser::Expression}
{\xe \v Yarn::Parser::Expression\:ToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string Yarn.Parser.ParseNode.ToString (){\f2 [inherited]}}}
\par
{\bkmkstart AAAAAAAARD}
{\bkmkend AAAAAAAARD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 111             \{\par
112                 return this.GetType ().Name;\par
113             \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v function\:Yarn::Parser::Expression}
{\xe \v Yarn::Parser::Expression\:function}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FunctionInfo} Yarn.Parser.Expression.function{\f2 [package]}}}
\par
{\bkmkstart AAAAAAAASH}
{\bkmkend AAAAAAAASH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v parameters\:Yarn::Parser::Expression}
{\xe \v Yarn::Parser::Expression\:parameters}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
List<{\b Expression}> Yarn.Parser.Expression.parameters{\f2 [package]}}}
\par
{\bkmkstart AAAAAAAASI}
{\bkmkend AAAAAAAASI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v type\:Yarn::Parser::Expression}
{\xe \v Yarn::Parser::Expression\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Type} Yarn.Parser.Expression.type{\f2 [package]}}}
\par
{\bkmkstart AAAAAAAASJ}
{\bkmkend AAAAAAAASJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v value\:Yarn::Parser::Expression}
{\xe \v Yarn::Parser::Expression\:value}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ValueNode} Yarn.Parser.Expression.value{\f2 [package]}}}
\par
{\bkmkstart AAAAAAAASK}
{\bkmkend AAAAAAAASK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
YarnSpinner/{\b Parser.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Yarn.FunctionInfo Class Reference\par \pard\plain 
{\tc\tcl2 \v Yarn.FunctionInfo}
{\xe \v Yarn.FunctionInfo}
{\bkmkstart AAAAAAAAPH}
{\bkmkend AAAAAAAAPH}
Collaboration diagram for Yarn.FunctionInfo:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/d08/a00244.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Value} {\b Invoke} (params {\b Value}[] parameters)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Value} {\b InvokeWithArray} ({\b Value}[] parameters)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Package Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FunctionInfo} (string {\b name}, int {\b paramCount}, {\b Function} implementation)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FunctionInfo} (string {\b name}, int {\b paramCount}, {\b ReturningFunction} implementation)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b IsParameterCountCorrect} (int parameterCount)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b name}{\f2  [get, set]}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b paramCount}{\f2  [get, set]}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Function} {\b function}{\f2  [get, set]}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ReturningFunction} {\b returningFunction}{\f2  [get, set]}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b returnsValue}{\f2  [get]}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v FunctionInfo\:Yarn::FunctionInfo}
{\xe \v Yarn::FunctionInfo\:FunctionInfo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Yarn.FunctionInfo.FunctionInfo (string {\i name}, int {\i paramCount}, {\b Function} {\i implementation}){\f2 [package]}}}
\par
{\bkmkstart AAAAAAAAPI}
{\bkmkend AAAAAAAAPI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 58                                                                                     \{\par
59             this.name = name;\par
60             this.paramCount = paramCount;\par
61             this.function = implementation;\par
62             this.returningFunction = null;\par
63         \}\par
}
}
{\xe \v FunctionInfo\:Yarn::FunctionInfo}
{\xe \v Yarn::FunctionInfo\:FunctionInfo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Yarn.FunctionInfo.FunctionInfo (string {\i name}, int {\i paramCount}, {\b ReturningFunction} {\i implementation}){\f2 [package]}}}
\par
{\bkmkstart AAAAAAAAPJ}
{\bkmkend AAAAAAAAPJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 65                                                                                              \{\par
66             this.name = name;\par
67             this.paramCount = paramCount;\par
68             this.returningFunction = implementation;\par
69             this.function = null;\par
70         \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Invoke\:Yarn::FunctionInfo}
{\xe \v Yarn::FunctionInfo\:Invoke}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Value} Yarn.FunctionInfo.Invoke (params {\b Value}[] {\i parameters})}}
\par
{\bkmkstart AAAAAAAAPK}
{\bkmkend AAAAAAAAPK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 32                                                        \{\par
33             return InvokeWithArray(parameters);\par
34         \}\par
}
}
{\xe \v InvokeWithArray\:Yarn::FunctionInfo}
{\xe \v Yarn::FunctionInfo\:InvokeWithArray}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Value} Yarn.FunctionInfo.InvokeWithArray ({\b Value}[] {\i parameters})}}
\par
{\bkmkstart AAAAAAAAPL}
{\bkmkend AAAAAAAAPL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 36                                                          \{\par
37 \par
38             if (IsParameterCountCorrect(parameters.Length)) \{\par
39                 if (returnsValue) \{\par
40                     return new Value(returningFunction (parameters));\par
41                 \} else \{\par
42                     function (parameters);\par
43                     return Value.NULL; // a null Value\par
44                 \}               \par
45             \} else \{\par
46                 string error = string.Format (\par
47                     "Incorrect number of parameters for function \{0\} (expected \{1\}, got \{2\}", \par
48                     this.name, \par
49                     this.paramCount, \par
50                     parameters.Length);\par
51                 \par
52                 throw new InvalidOperationException (error);\par
53             \}\par
54         \}\par
}
}
{\xe \v IsParameterCountCorrect\:Yarn::FunctionInfo}
{\xe \v Yarn::FunctionInfo\:IsParameterCountCorrect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Yarn.FunctionInfo.IsParameterCountCorrect (int {\i parameterCount}){\f2 [package]}}}
\par
{\bkmkstart AAAAAAAAPM}
{\bkmkend AAAAAAAAPM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 73         \{\par
74             return paramCount == parameterCount || paramCount == -1;\par
75         \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v function\:Yarn::FunctionInfo}
{\xe \v Yarn::FunctionInfo\:function}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Function} Yarn.FunctionInfo.function{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAPN}
{\bkmkend AAAAAAAAPN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v name\:Yarn::FunctionInfo}
{\xe \v Yarn::FunctionInfo\:name}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string Yarn.FunctionInfo.name{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAPO}
{\bkmkend AAAAAAAAPO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v paramCount\:Yarn::FunctionInfo}
{\xe \v Yarn::FunctionInfo\:paramCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Yarn.FunctionInfo.paramCount{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAPP}
{\bkmkend AAAAAAAAPP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v returningFunction\:Yarn::FunctionInfo}
{\xe \v Yarn::FunctionInfo\:returningFunction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ReturningFunction} Yarn.FunctionInfo.returningFunction{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAPQ}
{\bkmkend AAAAAAAAPQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v returnsValue\:Yarn::FunctionInfo}
{\xe \v Yarn::FunctionInfo\:returnsValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Yarn.FunctionInfo.returnsValue{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAPR}
{\bkmkend AAAAAAAAPR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
YarnSpinner/{\b Library.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Yarn.Unity.Icons Class Reference\par \pard\plain 
{\tc\tcl2 \v Yarn.Unity.Icons}
{\xe \v Yarn.Unity.Icons}
{\bkmkstart AAAAAAABCY}
{\bkmkend AAAAAAABCY}
Collaboration diagram for Yarn.Unity.Icons:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d7/dfc/a00349.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static Texture {\b successIcon}{\f2  [get]}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static Texture {\b failedIcon}{\f2  [get]}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static Texture {\b ignoredIcon}{\f2  [get]}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static Texture {\b windowIcon}{\f2  [get]}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Private Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static Texture {\b GetTexture} (string textureName)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static Texture {\b _successIcon}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static Texture {\b _failedIcon}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static Texture {\b _ignoredIcon}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static Texture {\b _windowIcon}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v GetTexture\:Yarn::Unity::Icons}
{\xe \v Yarn::Unity::Icons\:GetTexture}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static Texture Yarn.Unity.Icons.GetTexture (string {\i textureName}){\f2 [static]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAABCZ}
{\bkmkend AAAAAAABCZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 357                                                               \{\par
358             var guids = AssetDatabase.FindAssets (string.Format ("\{0\} t:texture", textureName));\par
359             if (guids.Length == 0)\par
360                 return null;\par
361 \par
362             var path = AssetDatabase.GUIDToAssetPath(guids[0]);\par
363             return AssetDatabase.LoadAssetAtPath<Texture>(path);\par
364         \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v _failedIcon\:Yarn::Unity::Icons}
{\xe \v Yarn::Unity::Icons\:_failedIcon}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Texture Yarn.Unity.Icons._failedIcon{\f2 [static]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAABDA}
{\bkmkend AAAAAAABDA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v _ignoredIcon\:Yarn::Unity::Icons}
{\xe \v Yarn::Unity::Icons\:_ignoredIcon}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Texture Yarn.Unity.Icons._ignoredIcon{\f2 [static]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAABDB}
{\bkmkend AAAAAAABDB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v _successIcon\:Yarn::Unity::Icons}
{\xe \v Yarn::Unity::Icons\:_successIcon}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Texture Yarn.Unity.Icons._successIcon{\f2 [static]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAABDC}
{\bkmkend AAAAAAABDC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v _windowIcon\:Yarn::Unity::Icons}
{\xe \v Yarn::Unity::Icons\:_windowIcon}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Texture Yarn.Unity.Icons._windowIcon{\f2 [static]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAABDD}
{\bkmkend AAAAAAABDD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v failedIcon\:Yarn::Unity::Icons}
{\xe \v Yarn::Unity::Icons\:failedIcon}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Texture Yarn.Unity.Icons.failedIcon{\f2 [static]}, {\f2 [get]}}}
\par
{\bkmkstart AAAAAAABDE}
{\bkmkend AAAAAAABDE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ignoredIcon\:Yarn::Unity::Icons}
{\xe \v Yarn::Unity::Icons\:ignoredIcon}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Texture Yarn.Unity.Icons.ignoredIcon{\f2 [static]}, {\f2 [get]}}}
\par
{\bkmkstart AAAAAAABDF}
{\bkmkend AAAAAAABDF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v successIcon\:Yarn::Unity::Icons}
{\xe \v Yarn::Unity::Icons\:successIcon}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Texture Yarn.Unity.Icons.successIcon{\f2 [static]}, {\f2 [get]}}}
\par
{\bkmkstart AAAAAAABDG}
{\bkmkend AAAAAAABDG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v windowIcon\:Yarn::Unity::Icons}
{\xe \v Yarn::Unity::Icons\:windowIcon}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Texture Yarn.Unity.Icons.windowIcon{\f2 [static]}, {\f2 [get]}}}
\par
{\bkmkstart AAAAAAABDH}
{\bkmkend AAAAAAABDH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Unity/Assets/Yarn Spinner/Code/Editor/{\b YarnSpinnerEditorWindow.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Yarn.Parser.IfStatement Class Reference\par \pard\plain 
{\tc\tcl2 \v Yarn.Parser.IfStatement}
{\xe \v Yarn.Parser.IfStatement}
{\bkmkstart AAAAAAAASL}
{\bkmkend AAAAAAAASL}
Inheritance diagram for Yarn.Parser.IfStatement:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d9/d2a/a00270.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for Yarn.Parser.IfStatement:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dd/d86/a00271.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Clause}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b ToString} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Package Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b IfStatement} ({\b ParseNode} {\b parent}, {\b Parser} p)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b PrintTree} (int indentLevel)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Node} {\b NodeParent} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Package Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b CanParse} ({\b Parser} p)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Package Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
List< {\b Clause} > {\b clauses} = new List<{\b Clause}>()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v IfStatement\:Yarn::Parser::IfStatement}
{\xe \v Yarn::Parser::IfStatement\:IfStatement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Yarn.Parser.IfStatement.IfStatement ({\b ParseNode} {\i parent}, {\b Parser} {\i p}){\f2 [package]}}}
\par
{\bkmkstart AAAAAAAASM}
{\bkmkend AAAAAAAASM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 551                                                              : base(parent, p) \{\par
552 \par
553                 // All if statements begin with "<<if EXPRESSION>>", so parse that\par
554                 Clause primaryClause = new Clause();\par
555 \par
556                 p.ExpectSymbol(TokenType.BeginCommand);\par
557                 p.ExpectSymbol(TokenType.If);\par
558                 primaryClause.expression = Expression.Parse(this, p);\par
559                 p.ExpectSymbol(TokenType.EndCommand);\par
560 \par
561                 // Read the statements for this clause until  we hit an <<endif or <<else\par
562                 // (which could be an "<<else>>" or an "<<else if"\par
563                 var statements = new List<Statement>();\par
564                 while (p.NextSymbolsAre(TokenType.BeginCommand, TokenType.EndIf) == false &&\par
565                     p.NextSymbolsAre(TokenType.BeginCommand, TokenType.Else) == false &&\par
566                     p.NextSymbolsAre(TokenType.BeginCommand, TokenType.ElseIf) == false) \{\par
567                     statements.Add(new Statement(this, p));\par
568 \par
569                     // Ignore any dedents\par
570                     while (p.NextSymbolIs(TokenType.Dedent)) \{\par
571                         p.ExpectSymbol(TokenType.Dedent);\par
572                     \}\par
573                 \}\par
574                 primaryClause.statements = statements;\par
575 \par
576                 clauses.Add(primaryClause);\par
577 \par
578 \par
579                 // Handle as many <<elseif clauses as we find\par
580                 while (p.NextSymbolsAre(TokenType.BeginCommand, TokenType.ElseIf)) \{\par
581                     var elseIfClause = new Clause();\par
582 \par
583                     // Parse the syntax for this clause's condition\par
584                     p.ExpectSymbol(TokenType.BeginCommand);\par
585                     p.ExpectSymbol(TokenType.ElseIf);\par
586                     elseIfClause.expression = Expression.Parse(this, p);\par
587                     p.ExpectSymbol(TokenType.EndCommand);\par
588 \par
589                     // Read statements until we hit an <<endif, <<else or another <<elseif\par
590                     var clauseStatements = new List<Statement>();\par
591                     while (p.NextSymbolsAre(TokenType.BeginCommand, TokenType.EndIf) == false &&\par
592                         p.NextSymbolsAre(TokenType.BeginCommand, TokenType.Else) == false &&\par
593                         p.NextSymbolsAre(TokenType.BeginCommand, TokenType.ElseIf) == false) \{\par
594                         clauseStatements.Add(new Statement(this, p));\par
595 \par
596                         // Ignore any dedents\par
597                         while (p.NextSymbolIs(TokenType.Dedent)) \{\par
598                             p.ExpectSymbol(TokenType.Dedent);\par
599                         \}\par
600 \par
601                     \}\par
602 \par
603                     elseIfClause.statements = clauseStatements;\par
604 \par
605                     clauses.Add(elseIfClause);\par
606                 \}\par
607 \par
608                 // Handle <<else>> if we have it\par
609                 if (p.NextSymbolsAre(TokenType.BeginCommand, TokenType.Else, TokenType.EndCommand)) \{\par
610 \par
611                     // parse the syntax (no expression this time, just "<<else>>"\par
612                     p.ExpectSymbol(TokenType.BeginCommand);\par
613                     p.ExpectSymbol(TokenType.Else);\par
614                     p.ExpectSymbol(TokenType.EndCommand);\par
615 \par
616                     // and parse statements until we hit "<<endif"\par
617                     var elseClause = new Clause();\par
618                     var clauseStatements = new List<Statement>();\par
619                     while (p.NextSymbolsAre(TokenType.BeginCommand, TokenType.EndIf) == false) \{\par
620                         clauseStatements.Add(new Statement(this, p));\par
621                     \}\par
622                     elseClause.statements = clauseStatements;\par
623 \par
624                     this.clauses.Add(elseClause);\par
625 \par
626                     // Ignore any dedents\par
627                     while (p.NextSymbolIs(TokenType.Dedent)) \{\par
628                         p.ExpectSymbol(TokenType.Dedent);\par
629                     \}\par
630 \par
631                 \}\par
632 \par
633                 // Finish up by reading the <<endif>>\par
634                 p.ExpectSymbol(TokenType.BeginCommand);\par
635                 p.ExpectSymbol(TokenType.EndIf);\par
636                 p.ExpectSymbol(TokenType.EndCommand);\par
637             \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v CanParse\:Yarn::Parser::IfStatement}
{\xe \v Yarn::Parser::IfStatement\:CanParse}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static bool Yarn.Parser.IfStatement.CanParse ({\b Parser} {\i p}){\f2 [static]}, {\f2 [package]}}}
\par
{\bkmkstart AAAAAAAASN}
{\bkmkend AAAAAAAASN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 525             \{\par
526                 return p.NextSymbolsAre (TokenType.BeginCommand, TokenType.If);\par
527             \}\par
}
}
{\xe \v NodeParent\:Yarn::Parser::IfStatement}
{\xe \v Yarn::Parser::IfStatement\:NodeParent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Node} Yarn.Parser.ParseNode.NodeParent (){\f2 [package]}, {\f2 [inherited]}}}
\par
{\bkmkstart AAAAAAAARA}
{\bkmkend AAAAAAAARA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 116                                        \{\par
117                 var node = this;\par
118 \par
119                 do \{\par
120                     if (node is Node) \{\par
121                         return node as Node;\par
122                     \}\par
123                     node = node.parent;\par
124                 \} while (node \par
125                     != null);                   \par
126 \par
127                 return null;\par
128             \}\par
}
}
{\xe \v PrintTree\:Yarn::Parser::IfStatement}
{\xe \v Yarn::Parser::IfStatement\:PrintTree}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string Yarn.Parser.IfStatement.PrintTree (int {\i indentLevel}){\f2 [package]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAASO}
{\bkmkend AAAAAAAASO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Yarn.Parser.ParseNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAARC \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 640             \{\par
641                 var sb = new StringBuilder ();\par
642                 var first = true;\par
643                 foreach (var clause in clauses) \{\par
644                     if (first) \{\par
645                         sb.Append (Tab (indentLevel, "If:"));\par
646                         first = false;\par
647                     \} else if (clause.expression != null) \{\par
648                         sb.Append (Tab (indentLevel, "Else If:"));\par
649                     \} else \{\par
650                         sb.Append (Tab (indentLevel, "Else:"));\par
651                     \}\par
652                     sb.Append (clause.PrintTree (indentLevel + 1));\par
653                 \}\par
654 \par
655                 return sb.ToString ();\par
656             \}\par
}
}
{\xe \v ToString\:Yarn::Parser::IfStatement}
{\xe \v Yarn::Parser::IfStatement\:ToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string Yarn.Parser.ParseNode.ToString (){\f2 [inherited]}}}
\par
{\bkmkstart AAAAAAAARD}
{\bkmkend AAAAAAAARD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 111             \{\par
112                 return this.GetType ().Name;\par
113             \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v clauses\:Yarn::Parser::IfStatement}
{\xe \v Yarn::Parser::IfStatement\:clauses}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
List<{\b Clause}> Yarn.Parser.IfStatement.clauses = new List<{\b Clause}>(){\f2 [package]}}}
\par
{\bkmkstart AAAAAAAASP}
{\bkmkend AAAAAAAASP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
YarnSpinner/{\b Parser.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Yarn.Instruction Struct Reference\par \pard\plain 
{\tc\tcl2 \v Yarn.Instruction}
{\xe \v Yarn.Instruction}
{\bkmkstart AAAAAAAAJY}
{\bkmkend AAAAAAAAJY}
Collaboration diagram for Yarn.Instruction:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d7/da0/a00198.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b ToString} ({\b Program} p, {\b Library} l)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Package Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ByteCode} {\b operation}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
object {\b operandA}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
object {\b operandB}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v ToString\:Yarn::Instruction}
{\xe \v Yarn::Instruction\:ToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string Yarn.Instruction.ToString ({\b Program} {\i p}, {\b Library} {\i l})}}
\par
{\bkmkstart AAAAAAAAJZ}
{\bkmkend AAAAAAAAJZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 128                                                       \{\par
129 \par
130             // Labels are easy: just dump out the name\par
131             if (operation == ByteCode.Label) \{\par
132                 return operandA + ":";\par
133             \}\par
134 \par
135             // Convert the operands to strings\par
136             var opAString = operandA != null ? operandA.ToString () : "";\par
137             var opBString = operandB != null ? operandB.ToString () : "";\par
138 \par
139             // Generate a comment, if the instruction warrants it\par
140             string comment = "";\par
141 \par
142             // Stack manipulation comments\par
143             var pops = 0;\par
144             var pushes = 0;\par
145 \par
146             switch (operation) \{\par
147 \par
148             // These operations all push a single value to the stack\par
149             case ByteCode.PushBool:\par
150             case ByteCode.PushNull:\par
151             case ByteCode.PushNumber:\par
152             case ByteCode.PushString:\par
153             case ByteCode.PushVariable:\par
154             case ByteCode.ShowOptions:\par
155                 pushes = 1;\par
156                 break;\par
157 \par
158             // Functions pop 0 or more values, and pop 0 or 1 \par
159             case ByteCode.CallFunc:\par
160                 var function = l.GetFunction ((string)operandA);\par
161 \par
162                 pops = function.paramCount;\par
163 \par
164                 if (function.returnsValue)\par
165                     pushes = 1;\par
166                 \par
167 \par
168                 break;\par
169             \par
170             // Pop always pops a single value\par
171             case ByteCode.Pop:\par
172                 pops = 1;\par
173                 break;\par
174             \par
175             // Switching to a different node will always clear the stack\par
176             case ByteCode.RunNode:\par
177                 comment += "Clears stack";\par
178                 break;\par
179             \}\par
180 \par
181             // If we had any pushes or pops, report them\par
182 \par
183             if (pops > 0 && pushes > 0)\par
184                 comment += string.Format ("Pops \{0\}, Pushes \{1\}", pops, pushes);\par
185             else if (pops > 0)\par
186                 comment += string.Format ("Pops \{0\}", pops);\par
187             else if (pushes > 0)\par
188                 comment += string.Format ("Pushes \{0\}", pushes);\par
189 \par
190             // String lookup comments\par
191             switch (operation) \{\par
192             case ByteCode.PushString:\par
193             case ByteCode.RunLine:\par
194             case ByteCode.AddOption:\par
195 \par
196                 // Add the string for this option, if it has one\par
197                 if ((string)operandA != null) \{\par
198                     var text = p.GetString((string)operandA);\par
199                     comment += string.Format ("\\"\{0\}\\"", text);\par
200                 \}\par
201 \par
202                 break;\par
203             \par
204             \}\par
205 \par
206             if (comment != "") \{\par
207                 comment = "; " + comment;\par
208             \}\par
209 \par
210             return string.Format ("\{0,-15\} \{1,-10\} \{2,-10\} \{3, -10\}", operation.ToString (), opAString, opBString, comment);\par
211         \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v operandA\:Yarn::Instruction}
{\xe \v Yarn::Instruction\:operandA}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
object Yarn.Instruction.operandA{\f2 [package]}}}
\par
{\bkmkstart AAAAAAAAKA}
{\bkmkend AAAAAAAAKA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v operandB\:Yarn::Instruction}
{\xe \v Yarn::Instruction\:operandB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
object Yarn.Instruction.operandB{\f2 [package]}}}
\par
{\bkmkstart AAAAAAAAKB}
{\bkmkend AAAAAAAAKB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v operation\:Yarn::Instruction}
{\xe \v Yarn::Instruction\:operation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ByteCode} Yarn.Instruction.operation{\f2 [package]}}}
\par
{\bkmkstart AAAAAAAAKC}
{\bkmkend AAAAAAAAKC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
YarnSpinner/{\b Compiler.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Json.InvalidJsonException Class Reference\par \pard\plain 
{\tc\tcl2 \v Json.InvalidJsonException}
{\xe \v Json.InvalidJsonException}
{\bkmkstart AAAAAAAAFA}
{\bkmkend AAAAAAAAFA}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exception raised when {\b JsonParser} encounters an invalid token. }}\par
Inheritance diagram for Json.InvalidJsonException:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "da/deb/a00189.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for Json.InvalidJsonException:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d7/d6e/a00190.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b InvalidJsonException} (string message)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exception raised when {\b JsonParser} encounters an invalid token. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v InvalidJsonException\:Json::InvalidJsonException}
{\xe \v Json::InvalidJsonException\:InvalidJsonException}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Json.InvalidJsonException.InvalidJsonException (string {\i message})}}
\par
{\bkmkstart AAAAAAAAFB}
{\bkmkend AAAAAAAAFB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 44             : base(message)\par
45         \{\par
46 \par
47         \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
YarnSpinner/{\b JsonParser.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Json.JsonParser Class Reference\par \pard\plain 
{\tc\tcl2 \v Json.JsonParser}
{\xe \v Json.JsonParser}
{\bkmkstart AAAAAAAAFC}
{\bkmkend AAAAAAAAFC}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A parser for JSON. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See Also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid http://json.org\par
}}}\par
Collaboration diagram for Json.JsonParser:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dd/da2/a00192.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static string {\b Serialize< T >} (T instance)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static object {\b Deserialize} (string json, Type type)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static T {\b Deserialize< T >} (string json)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static IDictionary< string, \par
object > {\b FromJson} (string json)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static IDictionary< string, \par
object > {\b FromJson} (string json, out {\b JsonToken} type)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static string {\b ToJson} (IDictionary< string, object > bag)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Package Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static IDictionary< string, \par
object > {\b GetBagForObject} (Type type, object instance)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static IDictionary< string, \par
object > {\b GetBagForObject< T >} (T instance)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static Dictionary< string, object > {\b InitializeBag} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static IEnumerable< PropertyInfo > {\b PrepareInstance} (out object instance, Type type)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static IEnumerable< PropertyInfo > {\b PrepareInstance< T >} (out T instance)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b CacheReflection} (Type item)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b SerializeItem} (StringBuilder sb, object item)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b SerializeDateTime} (StringBuilder sb)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b SerializeArray} (object item, StringBuilder sb)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b SerializeObject} (object item, StringBuilder sb)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b SerializeString} (StringBuilder sb, object item)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static string {\b GetUnicode} (int code)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static KeyValuePair< string, \par
object > {\b ParsePair} (IList< char > data, ref int index)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b ParseToken} ({\b JsonToken} token, IList< char > data, ref int index)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static string {\b ParseString} (IList< char > data, ref int index)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static object {\b ParseValue} (IList< char > data, ref int index)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static IDictionary< string, \par
object > {\b ParseObject} (IList< char > data, ref int index)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static IEnumerable< object > {\b ParseArray} (IList< char > data, ref int index)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static object {\b ParseNumber} (IList< char > data, ref int index)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b JsonToken} {\b NextToken} (IList< char > data, ref int index)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b JsonToken} {\b GetTokenFromSymbol} (char symbol)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b JsonToken} {\b GetTokenFromSymbol} (char symbol, {\b JsonToken} token)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b IgnoreWhitespace} (IList< char > data, ref int index, char symbol)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b JsonToken} {\b IgnoreWhitespace} (IList< char > data, ref int index, ref {\b JsonToken} token, char symbol)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b GetKeyword} (string word, {\b JsonToken} target, IList< char > data, ref int index, ref {\b JsonToken} result)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static string {\b BaseConvert} (int input, char[] charSet, int minLength)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Private Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b JsonParser} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b DeserializeImpl} (IEnumerable< PropertyInfo > map, IDictionary< string, object > bag, object instance)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b DeserializeImpl< T >} (IEnumerable< PropertyInfo > map, IDictionary< string, object > bag, T instance)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b DeserializeType} (IEnumerable< PropertyInfo > map, IDictionary< string, object > bag, object instance)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const NumberStyles {\b JsonNumbers} = NumberStyles.Float\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static readonly IDictionary\par
< Type, PropertyInfo[]> {\b _cache}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static readonly char[] {\b _base16}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A parser for JSON. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See Also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid http://json.org\par
}}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v JsonParser\:Json::JsonParser}
{\xe \v Json::JsonParser\:JsonParser}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static Json.JsonParser.JsonParser (){\f2 [static]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAFD}
{\bkmkend AAAAAAAAFD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 150         \{\par
151             _cache = new Dictionary<Type, PropertyInfo[]>(0);\par
152         \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v BaseConvert\:Json::JsonParser}
{\xe \v Json::JsonParser\:BaseConvert}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static string Json.JsonParser.BaseConvert (int {\i input}, char[] {\i charSet}, int {\i minLength}){\f2 [static]}, {\f2 [package]}}}
\par
{\bkmkstart AAAAAAAAFE}
{\bkmkend AAAAAAAAFE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 926         \{\par
927             var sb = new StringBuilder();\par
928             var @base = charSet.Length;\par
929 \par
930             while (input > 0)\par
931             \{\par
932                 var index = input % @base;\par
933                 sb.Insert(0, new[] \{ charSet[index] \});\par
934                 input = input / @base;\par
935             \}\par
936 \par
937             while (sb.Length < minLength)\par
938             \{\par
939                 sb.Insert(0, "0");\par
940             \}\par
941 \par
942             return sb.ToString();\par
943         \}\par
}
}
{\xe \v CacheReflection\:Json::JsonParser}
{\xe \v Json::JsonParser\:CacheReflection}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void Json.JsonParser.CacheReflection (Type {\i item}){\f2 [static]}, {\f2 [package]}}}
\par
{\bkmkstart AAAAAAAAFF}
{\bkmkend AAAAAAAAFF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 377         \{\par
378             if (_cache.ContainsKey(item))\par
379             \{\par
380                 return;\par
381             \}\par
382 \par
383             #if PCL\par
384             var properties = item.GetRuntimeProperties().ToArray();\par
385             #else\par
386             var properties = item.GetProperties(\par
387                 BindingFlags.Public | BindingFlags.Instance\par
388                 );\par
389             #endif\par
390 \par
391             _cache.Add(item, properties);\par
392         \}\par
}
}
{\xe \v Deserialize\:Json::JsonParser}
{\xe \v Json::JsonParser\:Deserialize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static object Json.JsonParser.Deserialize (string {\i json}, Type {\i type}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAFG}
{\bkmkend AAAAAAAAFG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 162         \{\par
163             object instance;\par
164             var map = PrepareInstance(out instance, type);\par
165             var bag = FromJson(json);\par
166 \par
167             DeserializeImpl(map, bag, instance);\par
168             return instance;\par
169         \}\par
}
}
{\xe \v Deserialize< T >\:Json::JsonParser}
{\xe \v Json::JsonParser\:Deserialize< T >}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static T {\b Json.JsonParser.Deserialize}< T > (string {\i json}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAFH}
{\bkmkend AAAAAAAAFH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 172         \{\par
173             T instance;\par
174             var map = PrepareInstance(out instance);\par
175             var bag = FromJson(json);\par
176 \par
177             DeserializeImpl(map, bag, instance);\par
178             return instance;\par
179         \}\par
}
}
{\xe \v DeserializeImpl\:Json::JsonParser}
{\xe \v Json::JsonParser\:DeserializeImpl}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void Json.JsonParser.DeserializeImpl (IEnumerable< PropertyInfo > {\i map}, IDictionary< string, object > {\i bag}, object {\i instance}){\f2 [static]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAFI}
{\bkmkend AAAAAAAAFI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 207         \{\par
208             DeserializeType(map, bag, instance);\par
209         \}\par
}
}
{\xe \v DeserializeImpl< T >\:Json::JsonParser}
{\xe \v Json::JsonParser\:DeserializeImpl< T >}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void {\b Json.JsonParser.DeserializeImpl}< T > (IEnumerable< PropertyInfo > {\i map}, IDictionary< string, object > {\i bag}, T {\i instance}){\f2 [static]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAFJ}
{\bkmkend AAAAAAAAFJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 214         \{\par
215             DeserializeType(map, bag, instance);\par
216         \}\par
}
}
{\xe \v DeserializeType\:Json::JsonParser}
{\xe \v Json::JsonParser\:DeserializeType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void Json.JsonParser.DeserializeType (IEnumerable< PropertyInfo > {\i map}, IDictionary< string, object > {\i bag}, object {\i instance}){\f2 [static]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAFK}
{\bkmkend AAAAAAAAFK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 219         \{\par
220             foreach (var info in map)\par
221             \{\par
222                 var key = info.Name;\par
223                 if (!bag.ContainsKey(key))\par
224                 \{\par
225                     key = info.Name.Replace("_", "");\par
226                     if (!bag.ContainsKey(key))\par
227                     \{\par
228                         key = info.Name.Replace("-", "");\par
229                         if (!bag.ContainsKey(key))\par
230                         \{\par
231                             continue;\par
232                         \}\par
233                     \}\par
234                 \}\par
235 \par
236                 var value = bag[key];\par
237                 if (info.PropertyType == typeof(DateTime))\par
238                 \{\par
239                     // Dates (Not part of spec, using lossy epoch convention)\par
240                     var seconds = Int32.Parse(\par
241                         value.ToString(), NumberStyles.Number, CultureInfo.InvariantCulture\par
242                         );\par
243                     var time = new DateTime(1970, 1, 1).ToUniversalTime();\par
244                     value = time.AddSeconds(seconds);\par
245                 \}\par
246 \par
247                 if (info.PropertyType == typeof(byte[]))\par
248                 \{\par
249                     var bytes = (List<object>)value;\par
250                     value = bytes.Select(symbol => Convert.ToByte(symbol)).ToArray();\par
251                 \}\par
252 \par
253                 if (info.PropertyType == typeof(double))\par
254                 \{\par
255                     value = Convert.ToDouble(value);\par
256                 \}\par
257 \par
258                 if (info.PropertyType == typeof(int))\par
259                 \{\par
260                     value = Convert.ToInt32(value);\par
261                 \}\par
262 \par
263                 if (info.PropertyType == typeof(long))\par
264                 \{\par
265                     value = Convert.ToInt64(value);\par
266                 \}\par
267 \par
268                 info.SetValue(instance, value, null);\par
269             \}\par
270         \}\par
}
}
{\xe \v FromJson\:Json::JsonParser}
{\xe \v Json::JsonParser\:FromJson}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static IDictionary<string, object> Json.JsonParser.FromJson (string {\i json}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAFL}
{\bkmkend AAAAAAAAFL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 273         \{\par
274             JsonToken type;\par
275 \par
276             var result = FromJson(json, out type);\par
277 \par
278             switch (type)\par
279             \{\par
280                 case JsonToken.LeftBrace:\par
281                     var @object = (IDictionary<string, object>)result.Single().Value;\par
282                     return @object;\par
283             \}\par
284 \par
285             return result;\par
286         \}\par
}
}
{\xe \v FromJson\:Json::JsonParser}
{\xe \v Json::JsonParser\:FromJson}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static IDictionary<string, object> Json.JsonParser.FromJson (string {\i json}, out {\b JsonToken} {\i type}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAFM}
{\bkmkend AAAAAAAAFM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 289         \{\par
290             var data = json.ToCharArray();\par
291             var index = 0;\par
292 \par
293             // Rewind index for first token\par
294             var token = NextToken(data, ref index);\par
295             switch (token)\par
296             \{\par
297                 case JsonToken.LeftBrace:   // Start Object\par
298                 case JsonToken.LeftBracket: // Start Array\par
299                     index--;\par
300                     type = token;\par
301                     break;\par
302                 default:\par
303                     throw new InvalidJsonException("JSON must begin with an object or array");\par
304             \}\par
305 \par
306             return ParseObject(data, ref index);\par
307         \}\par
}
}
{\xe \v GetBagForObject\:Json::JsonParser}
{\xe \v Json::JsonParser\:GetBagForObject}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static IDictionary<string, object> Json.JsonParser.GetBagForObject (Type {\i type}, object {\i instance}){\f2 [static]}, {\f2 [package]}}}
\par
{\bkmkstart AAAAAAAAFN}
{\bkmkend AAAAAAAAFN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 319         \{\par
320             CacheReflection(type);\par
321 \par
322             if (type.FullName == null)\par
323             \{\par
324                 return null;\par
325             \}\par
326 \par
327             var anonymous = type.FullName.Contains("__AnonymousType");\par
328             var map = _cache[type];\par
329 \par
330             IDictionary<string, object> bag = InitializeBag();\par
331             foreach (var info in map)\par
332             \{\par
333                 var readWrite = (info.CanWrite && info.CanRead);\par
334                 if (!readWrite && !anonymous)\par
335                 \{\par
336                     continue;\par
337                 \}\par
338                 var value = info.GetValue(instance, null);\par
339                 bag.Add(info.Name, value);\par
340             \}\par
341 \par
342             return bag;\par
343         \}\par
}
}
{\xe \v GetBagForObject< T >\:Json::JsonParser}
{\xe \v Json::JsonParser\:GetBagForObject< T >}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static IDictionary<string, object> {\b Json.JsonParser.GetBagForObject}< T > (T {\i instance}){\f2 [static]}, {\f2 [package]}}}
\par
{\bkmkstart AAAAAAAAFO}
{\bkmkend AAAAAAAAFO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 346         \{\par
347             return GetBagForObject(typeof(T), instance);\par
348         \}\par
}
}
{\xe \v GetKeyword\:Json::JsonParser}
{\xe \v Json::JsonParser\:GetKeyword}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void Json.JsonParser.GetKeyword (string {\i word}, {\b JsonToken} {\i target}, IList< char > {\i data}, ref int {\i index}, ref {\b JsonToken} {\i result}){\f2 [static]}, {\f2 [package]}}}
\par
{\bkmkstart AAAAAAAAFP}
{\bkmkend AAAAAAAAFP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 906         \{\par
907             var buffer = data.Count - index;\par
908             if (buffer < word.Length)\par
909             \{\par
910                 return;\par
911             \}\par
912 \par
913             for (var i = 0; i < word.Length; i++)\par
914             \{\par
915                 if (data[index + i] != word[i])\par
916                 \{\par
917                     return;\par
918                 \}\par
919             \}\par
920 \par
921             result = target;\par
922             index += word.Length;\par
923         \}\par
}
}
{\xe \v GetTokenFromSymbol\:Json::JsonParser}
{\xe \v Json::JsonParser\:GetTokenFromSymbol}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b JsonToken} Json.JsonParser.GetTokenFromSymbol (char {\i symbol}){\f2 [static]}, {\f2 [package]}}}
\par
{\bkmkstart AAAAAAAAFQ}
{\bkmkend AAAAAAAAFQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 825         \{\par
826             return GetTokenFromSymbol(symbol, JsonToken.Unknown);\par
827         \}\par
}
}
{\xe \v GetTokenFromSymbol\:Json::JsonParser}
{\xe \v Json::JsonParser\:GetTokenFromSymbol}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b JsonToken} Json.JsonParser.GetTokenFromSymbol (char {\i symbol}, {\b JsonToken} {\i token}){\f2 [static]}, {\f2 [package]}}}
\par
{\bkmkstart AAAAAAAAFR}
{\bkmkend AAAAAAAAFR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 830         \{\par
831             switch (symbol)\par
832             \{\par
833                 case '\{':\par
834                     token = JsonToken.LeftBrace;\par
835                     break;\par
836                 case '\}':\par
837                     token = JsonToken.RightBrace;\par
838                     break;\par
839                 case ':':\par
840                     token = JsonToken.Colon;\par
841                     break;\par
842                 case ',':\par
843                     token = JsonToken.Comma;\par
844                     break;\par
845                 case '[':\par
846                     token = JsonToken.LeftBracket;\par
847                     break;\par
848                 case ']':\par
849                     token = JsonToken.RightBracket;\par
850                     break;\par
851                 case '"':\par
852                     token = JsonToken.String;\par
853                     break;\par
854                 case '0':\par
855                 case '1':\par
856                 case '2':\par
857                 case '3':\par
858                 case '4':\par
859                 case '5':\par
860                 case '6':\par
861                 case '7':\par
862                 case '8':\par
863                 case '9':\par
864                 case '.':\par
865                 case 'e':\par
866                 case 'E':\par
867                 case '+':\par
868                 case '-':\par
869                     token = JsonToken.Number;\par
870                     break;\par
871             \}\par
872             return token;\par
873         \}\par
}
}
{\xe \v GetUnicode\:Json::JsonParser}
{\xe \v Json::JsonParser\:GetUnicode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static string Json.JsonParser.GetUnicode (int {\i code}){\f2 [static]}, {\f2 [package]}}}
\par
{\bkmkstart AAAAAAAAFS}
{\bkmkend AAAAAAAAFS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 517         \{\par
518             // http://unicode.org/roadmaps/bmp/\par
519             var basicLatin = code >= 32 && code <= 126;\par
520             if (basicLatin)\par
521             \{\par
522                 var value = (char)code;\par
523                 return value == '"' ? @"\\""" : new string(value, 1);\par
524             \}\par
525 \par
526             var unicode = BaseConvert(code, _base16, 4);\par
527             return string.Concat("\\\\u", unicode);\par
528         \}\par
}
}
{\xe \v IgnoreWhitespace\:Json::JsonParser}
{\xe \v Json::JsonParser\:IgnoreWhitespace}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void Json.JsonParser.IgnoreWhitespace (IList< char > {\i data}, ref int {\i index}, char {\i symbol}){\f2 [static]}, {\f2 [package]}}}
\par
{\bkmkstart AAAAAAAAFT}
{\bkmkend AAAAAAAAFT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 876         \{\par
877             var token = JsonToken.Unknown;\par
878             IgnoreWhitespace(data, ref index, ref token, symbol);\par
879             return;\par
880         \}\par
}
}
{\xe \v IgnoreWhitespace\:Json::JsonParser}
{\xe \v Json::JsonParser\:IgnoreWhitespace}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b JsonToken} Json.JsonParser.IgnoreWhitespace (IList< char > {\i data}, ref int {\i index}, ref {\b JsonToken} {\i token}, char {\i symbol}){\f2 [static]}, {\f2 [package]}}}
\par
{\bkmkstart AAAAAAAAFU}
{\bkmkend AAAAAAAAFU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 883         \{\par
884             switch (symbol)\par
885             \{\par
886                 case ' ':\par
887                 case '\\\\':\par
888                 case '/':\par
889                 case '\\b':\par
890                 case '\\f':\par
891                 case '\\n':\par
892                 case '\\r':\par
893                 case '\\t':\par
894                     index++;\par
895                     token = NextToken(data, ref index);\par
896                     break;\par
897             \}\par
898             return token;\par
899         \}\par
}
}
{\xe \v InitializeBag\:Json::JsonParser}
{\xe \v Json::JsonParser\:InitializeBag}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static Dictionary<string, object> Json.JsonParser.InitializeBag (){\f2 [static]}, {\f2 [package]}}}
\par
{\bkmkstart AAAAAAAAFV}
{\bkmkend AAAAAAAAFV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 351         \{\par
352             return new Dictionary<string, object>(\par
353                 0, StringComparer.OrdinalIgnoreCase\par
354                 );\par
355         \}\par
}
}
{\xe \v NextToken\:Json::JsonParser}
{\xe \v Json::JsonParser\:NextToken}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b JsonToken} Json.JsonParser.NextToken (IList< char > {\i data}, ref int {\i index}){\f2 [static]}, {\f2 [package]}}}
\par
{\bkmkstart AAAAAAAAFW}
{\bkmkend AAAAAAAAFW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 812         \{\par
813             var symbol = data[index];\par
814             var token = GetTokenFromSymbol(symbol);\par
815             token = IgnoreWhitespace(data, ref index, ref token, symbol);\par
816 \par
817             GetKeyword("true", JsonToken.True, data, ref index, ref token);\par
818             GetKeyword("false", JsonToken.False, data, ref index, ref token);\par
819             GetKeyword("null", JsonToken.Null, data, ref index, ref token);\par
820 \par
821             return token;\par
822         \}\par
}
}
{\xe \v ParseArray\:Json::JsonParser}
{\xe \v Json::JsonParser\:ParseArray}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static IEnumerable<object> Json.JsonParser.ParseArray (IList< char > {\i data}, ref int {\i index}){\f2 [static]}, {\f2 [package]}}}
\par
{\bkmkstart AAAAAAAAFX}
{\bkmkend AAAAAAAAFX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 729         \{\par
730             var result = new List<object>();\par
731 \par
732             index++; // Skip first bracket\par
733             while (index < data.Count - 1)\par
734             \{\par
735                 var token = NextToken(data, ref index);\par
736                 switch (token)\par
737                 \{\par
738                     // End Tokens\par
739                     case JsonToken.Unknown:             // Bad Data\par
740                         throw new InvalidJsonException(string.Format(\par
741                             "Invalid JSON found while parsing an array at index \{0\}.", index\par
742                             ));\par
743                     case JsonToken.RightBracket:        // End Array\par
744                         index++;\par
745                         return result;\par
746                     // Skip Tokens\par
747                     case JsonToken.Comma:               // Separator\par
748                     case JsonToken.RightBrace:          // End Object\par
749                     case JsonToken.Colon:               // Separator\par
750                         index++;\par
751                         break;\par
752                     // Value Tokens\par
753                     case JsonToken.LeftBrace:           // Start Object\par
754                         var nested = ParseObject(data, ref index);\par
755                         result.Add(nested);\par
756                         break;\par
757                     case JsonToken.LeftBracket:         // Start Array\par
758                     case JsonToken.String:\par
759                     case JsonToken.Number:\par
760                     case JsonToken.True:\par
761                     case JsonToken.False:\par
762                     case JsonToken.Null:\par
763                         var value = ParseValue(data, ref index);\par
764                         result.Add(value);\par
765                         break;\par
766                     default:\par
767                         throw new ArgumentOutOfRangeException();\par
768                 \}\par
769             \}\par
770 \par
771             return result;\par
772         \}\par
}
}
{\xe \v ParseNumber\:Json::JsonParser}
{\xe \v Json::JsonParser\:ParseNumber}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static object Json.JsonParser.ParseNumber (IList< char > {\i data}, ref int {\i index}){\f2 [static]}, {\f2 [package]}}}
\par
{\bkmkstart AAAAAAAAFY}
{\bkmkend AAAAAAAAFY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 775         \{\par
776             var symbol = data[index];\par
777             IgnoreWhitespace(data, ref index, symbol);\par
778 \par
779             var start = index;\par
780             var length = 0;\par
781             while (ParseToken(JsonToken.Number, data, ref index))\par
782             \{\par
783                 length++;\par
784                 index++;\par
785             \}\par
786 \par
787             var number = new char[length];\par
788             Array.Copy(data.ToArray(), start, number, 0, length);\par
789 \par
790             double result;\par
791             var buffer = new string(number);\par
792 #if NETCF\par
793             if (!buffer.TryParse(out result))\par
794             \{\par
795                 throw new InvalidJsonException(\par
796                     string.Format("Value '\{0\}' was not a valid JSON number", buffer)\par
797                     );\par
798             \}\par
799 #else\par
800             if (!double.TryParse(buffer, JsonNumbers, CultureInfo.InvariantCulture, out result))\par
801             \{\par
802                 throw new InvalidJsonException(\par
803                     string.Format("Value '\{0\}' was not a valid JSON number", buffer)\par
804                     );\par
805             \}\par
806 #endif\par
807 \par
808             return result;\par
809         \}\par
}
}
{\xe \v ParseObject\:Json::JsonParser}
{\xe \v Json::JsonParser\:ParseObject}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static IDictionary<string, object> Json.JsonParser.ParseObject (IList< char > {\i data}, ref int {\i index}){\f2 [static]}, {\f2 [package]}}}
\par
{\bkmkstart AAAAAAAAFZ}
{\bkmkend AAAAAAAAFZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 671         \{\par
672             var result = InitializeBag();\par
673 \par
674             index++; // Skip first token\par
675 \par
676             while (index < data.Count - 1)\par
677             \{\par
678                 var token = NextToken(data, ref index);\par
679                 switch (token)\par
680                 \{\par
681                     // End Tokens\par
682                     case JsonToken.Unknown:             // Bad Data\par
683                     case JsonToken.True:\par
684                     case JsonToken.False:\par
685                     case JsonToken.Null:\par
686                     case JsonToken.Colon:\par
687                     case JsonToken.RightBracket:\par
688                     case JsonToken.Number:\par
689                         throw new InvalidJsonException(string.Format(\par
690                             "Invalid JSON found while parsing an object at index \{0\}.", index\par
691                             ));\par
692                     case JsonToken.RightBrace:          // End Object\par
693                         index++;\par
694                         return result;\par
695                     // Skip Tokens\par
696                     case JsonToken.Comma:\par
697                         index++;\par
698                         break;\par
699                     // Start Tokens\par
700                     case JsonToken.LeftBrace:           // Start Object\par
701                         var @object = ParseObject(data, ref index);\par
702                         if (@object != null)\par
703                         \{\par
704                             result.Add(string.Concat("object", result.Count), @object);\par
705                         \}\par
706                         index++;\par
707                         break;\par
708                     case JsonToken.LeftBracket:         // Start Array\par
709                         var @array = ParseArray(data, ref index);\par
710                         if (@array != null)\par
711                         \{\par
712                             result.Add(string.Concat("array", result.Count), @array);\par
713                         \}\par
714                         index++;\par
715                         break;\par
716                     case JsonToken.String:\par
717                         var pair = ParsePair(data, ref index);\par
718                         result.Add(pair.Key, pair.Value);\par
719                         break;\par
720                     default:\par
721                         throw new NotSupportedException("Invalid token expected.");\par
722                 \}\par
723             \}\par
724 \par
725             return result;\par
726         \}\par
}
}
{\xe \v ParsePair\:Json::JsonParser}
{\xe \v Json::JsonParser\:ParsePair}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static KeyValuePair<string, object> Json.JsonParser.ParsePair (IList< char > {\i data}, ref int {\i index}){\f2 [static]}, {\f2 [package]}}}
\par
{\bkmkstart AAAAAAAAGA}
{\bkmkend AAAAAAAAGA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 531         \{\par
532             var valid = true;\par
533 \par
534             var name = ParseString(data, ref index);\par
535             if (name == null)\par
536             \{\par
537                 valid = false;\par
538             \}\par
539 \par
540             if (!ParseToken(JsonToken.Colon, data, ref index))\par
541             \{\par
542                 valid = false;\par
543             \}\par
544 \par
545             if (!valid)\par
546             \{\par
547                 throw new InvalidJsonException(string.Format(\par
548                             "Invalid JSON found while parsing a value pair at index \{0\}.", index\par
549                             ));\par
550             \}\par
551 \par
552             index++;\par
553             var value = ParseValue(data, ref index);\par
554             return new KeyValuePair<string, object>(name, value);\par
555         \}\par
}
}
{\xe \v ParseString\:Json::JsonParser}
{\xe \v Json::JsonParser\:ParseString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static string Json.JsonParser.ParseString (IList< char > {\i data}, ref int {\i index}){\f2 [static]}, {\f2 [package]}}}
\par
{\bkmkstart AAAAAAAAGB}
{\bkmkend AAAAAAAAGB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 564         \{\par
565             var symbol = data[index];\par
566             IgnoreWhitespace(data, ref index, symbol);\par
567             symbol = data[++index]; // Skip first quotation\par
568 \par
569             var sb = new StringBuilder();\par
570             while (true)\par
571             \{\par
572                 if (index >= data.Count - 1)\par
573                 \{\par
574                     return null;\par
575                 \}\par
576                 switch (symbol)\par
577                 \{\par
578                     case '"':  // End String\par
579                         index++;\par
580                         return sb.ToString();\par
581                     case '\\\\': // Control Character\par
582                         symbol = data[++index];\par
583                         switch (symbol)\par
584                         \{\par
585                             case '/':\par
586                                 sb.Append(symbol);\par
587                                 break;\par
588                             case 't':\par
589                                 sb.Append ("\\t");\par
590                                 break;\par
591                             case 'n':\par
592                                 sb.Append ("\\n");\par
593                                 break;\par
594                             case '\\\\':\par
595                                 sb.Append ("\\\\");\par
596                                 break;\par
597                             case '\\"':\par
598                                 sb.Append ("\\"");\par
599                                 break;\par
600                             case 'r':\par
601                                 \par
602                             case 'b':\par
603                             case 'f':\par
604                             \par
605                                 break;\par
606                             case 'u': // Unicode literals\par
607                                 if (index < data.Count - 5)\par
608                                 \{\par
609                                     var array = data.ToArray();\par
610                                     var buffer = new char[4];\par
611                                     Array.Copy(array, index + 1, buffer, 0, 4);\par
612 \par
613                                     // http://msdn.microsoft.com/en-us/library/aa664669%28VS.71%29.aspx\par
614                                     // http://www.yoda.arachsys.com/csharp/unicode.html\par
615                                     // http://en.wikipedia.org/wiki/UTF-32/UCS-4\par
616                                     var hex = new string(buffer);\par
617                                     var unicode = (char)Convert.ToInt32(hex, 16);\par
618                                     sb.Append(unicode);\par
619                                     index += 4;\par
620                                 \}\par
621                                 else\par
622                                 \{\par
623                                     break;\par
624                                 \}\par
625                                 break;\par
626                         \}\par
627                         break;\par
628                     default:\par
629                         sb.Append(symbol);\par
630                         break;\par
631                 \}\par
632                 symbol = data[++index];\par
633             \}\par
634         \}\par
}
}
{\xe \v ParseToken\:Json::JsonParser}
{\xe \v Json::JsonParser\:ParseToken}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static bool Json.JsonParser.ParseToken ({\b JsonToken} {\i token}, IList< char > {\i data}, ref int {\i index}){\f2 [static]}, {\f2 [package]}}}
\par
{\bkmkstart AAAAAAAAGC}
{\bkmkend AAAAAAAAGC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 558         \{\par
559             var nextToken = NextToken(data, ref index);\par
560             return token == nextToken;\par
561         \}\par
}
}
{\xe \v ParseValue\:Json::JsonParser}
{\xe \v Json::JsonParser\:ParseValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static object Json.JsonParser.ParseValue (IList< char > {\i data}, ref int {\i index}){\f2 [static]}, {\f2 [package]}}}
\par
{\bkmkstart AAAAAAAAGD}
{\bkmkend AAAAAAAAGD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 637         \{\par
638             var token = NextToken(data, ref index);\par
639             switch (token)\par
640             \{\par
641                 // End Tokens\par
642                 case JsonToken.RightBracket:    // Bad Data\par
643                 case JsonToken.RightBrace:\par
644                 case JsonToken.Unknown:\par
645                 case JsonToken.Colon:\par
646                 case JsonToken.Comma:\par
647                     throw new InvalidJsonException(string.Format(\par
648                             "Invalid JSON found while parsing a value at index \{0\}.", index\par
649                             ));\par
650                 // Value Tokens\par
651                 case JsonToken.LeftBrace:\par
652                     return ParseObject(data, ref index);\par
653                 case JsonToken.LeftBracket:\par
654                     return ParseArray(data, ref index);\par
655                 case JsonToken.String:\par
656                     return ParseString(data, ref index);\par
657                 case JsonToken.Number:\par
658                     return ParseNumber(data, ref index);\par
659                 case JsonToken.True:\par
660                     return true;\par
661                 case JsonToken.False:\par
662                     return false;\par
663                 case JsonToken.Null:\par
664                     return null;\par
665                 default:\par
666                     throw new ArgumentOutOfRangeException();\par
667             \}\par
668         \}\par
}
}
{\xe \v PrepareInstance\:Json::JsonParser}
{\xe \v Json::JsonParser\:PrepareInstance}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static IEnumerable<PropertyInfo> Json.JsonParser.PrepareInstance (out object {\i instance}, Type {\i type}){\f2 [static]}, {\f2 [package]}}}
\par
{\bkmkstart AAAAAAAAGE}
{\bkmkend AAAAAAAAGE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 358         \{\par
359             instance = Activator.CreateInstance(type);\par
360 \par
361             CacheReflection(type);\par
362 \par
363             return _cache[type];\par
364         \}\par
}
}
{\xe \v PrepareInstance< T >\:Json::JsonParser}
{\xe \v Json::JsonParser\:PrepareInstance< T >}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static IEnumerable<PropertyInfo> {\b Json.JsonParser.PrepareInstance}< T > (out T {\i instance}){\f2 [static]}, {\f2 [package]}}}
\par
{\bkmkstart AAAAAAAAGF}
{\bkmkend AAAAAAAAGF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 367         \{\par
368             instance = Activator.CreateInstance<T>();\par
369             var item = typeof(T);\par
370 \par
371             CacheReflection(item);\par
372 \par
373             return _cache[item];\par
374         \}\par
}
}
{\xe \v Serialize< T >\:Json::JsonParser}
{\xe \v Json::JsonParser\:Serialize< T >}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static string Json.JsonParser.Serialize< T > (T {\i instance}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAGG}
{\bkmkend AAAAAAAAGG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 155         \{\par
156             var bag = GetBagForObject(instance);\par
157 \par
158             return ToJson(bag);\par
159         \}\par
}
}
{\xe \v SerializeArray\:Json::JsonParser}
{\xe \v Json::JsonParser\:SerializeArray}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void Json.JsonParser.SerializeArray (object {\i item}, StringBuilder {\i sb}){\f2 [static]}, {\f2 [package]}}}
\par
{\bkmkstart AAAAAAAAGH}
{\bkmkend AAAAAAAAGH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 452         \{\par
453             var array = (IEnumerable)item;\par
454             sb.Append("[");\par
455             var count = 0;\par
456 \par
457             var total = array.Cast<object>().Count();\par
458             foreach (var element in array)\par
459             \{\par
460                 SerializeItem(sb, element);\par
461                 count++;\par
462                 if (count < total)\par
463                 \{\par
464                     sb.Append(",");\par
465                 \}\par
466             \}\par
467             sb.Append("]");\par
468         \}\par
}
}
{\xe \v SerializeDateTime\:Json::JsonParser}
{\xe \v Json::JsonParser\:SerializeDateTime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void Json.JsonParser.SerializeDateTime (StringBuilder {\i sb}){\f2 [static]}, {\f2 [package]}}}
\par
{\bkmkstart AAAAAAAAGI}
{\bkmkend AAAAAAAAGI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 445         \{\par
446             var elapsed = DateTime.UtcNow - new DateTime(1970, 1, 1).ToUniversalTime();\par
447             var epoch = (long)elapsed.TotalSeconds;\par
448             SerializeString(sb, epoch);\par
449         \}\par
}
}
{\xe \v SerializeItem\:Json::JsonParser}
{\xe \v Json::JsonParser\:SerializeItem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void Json.JsonParser.SerializeItem (StringBuilder {\i sb}, object {\i item}){\f2 [static]}, {\f2 [package]}}}
\par
{\bkmkstart AAAAAAAAGJ}
{\bkmkend AAAAAAAAGJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 395         \{\par
396             if (item is IDictionary<string, object>)\par
397             \{\par
398                 SerializeObject(item, sb);\par
399                 return;\par
400             \}\par
401 \par
402             if (item is IEnumerable)\par
403             \{\par
404                 SerializeArray(item, sb);\par
405                 return;\par
406             \}\par
407 \par
408             if (item is DateTime)\par
409             \{\par
410                 SerializeDateTime(sb);\par
411                 return;\par
412             \}\par
413 \par
414             if (item is bool)\par
415             \{\par
416                 sb.Append(((bool)item).ToString().ToLower());\par
417                 return;\par
418             \}\par
419 \par
420             double number;\par
421             var input = item != null ? item.ToString() : "";\par
422 #if NETCF\par
423             if (input.TryParse(out number))\par
424             \{\par
425                 sb.Append(number);\par
426             \}\par
427 #else\par
428             if (double.TryParse(input, JsonNumbers, CultureInfo.InvariantCulture, out number))\par
429             \{\par
430                 sb.Append(number);\par
431                 return;\par
432             \}\par
433 #endif\par
434             if (item == null)\par
435             \{\par
436                 sb.Append("null");\par
437                 return;\par
438             \}\par
439 \par
440             var bag = GetBagForObject(item.GetType(), item);\par
441             SerializeItem(sb, bag);\par
442         \}\par
}
}
{\xe \v SerializeObject\:Json::JsonParser}
{\xe \v Json::JsonParser\:SerializeObject}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void Json.JsonParser.SerializeObject (object {\i item}, StringBuilder {\i sb}){\f2 [static]}, {\f2 [package]}}}
\par
{\bkmkstart AAAAAAAAGK}
{\bkmkend AAAAAAAAGK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 471         \{\par
472             var nested = (IDictionary<string, object>)item;\par
473             sb.Append("\{");\par
474 \par
475             var count = 0;\par
476             foreach (var key in nested.Keys)\par
477             \{\par
478                 SerializeString(sb, key.ToLower());\par
479                 sb.Append(":");\par
480 \par
481                 var value = nested[key];\par
482                 if (value is string)\par
483                 \{\par
484                     SerializeString(sb, value);\par
485                 \}\par
486                 else\par
487                 \{\par
488                     SerializeItem(sb, nested[key]);\par
489                 \}\par
490 \par
491                 if (count < nested.Keys.Count - 1)\par
492                 \{\par
493                     sb.Append(",");\par
494                 \}\par
495                 count++;\par
496             \}\par
497             sb.Append("\}");\par
498         \}\par
}
}
{\xe \v SerializeString\:Json::JsonParser}
{\xe \v Json::JsonParser\:SerializeString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void Json.JsonParser.SerializeString (StringBuilder {\i sb}, object {\i item}){\f2 [static]}, {\f2 [package]}}}
\par
{\bkmkstart AAAAAAAAGL}
{\bkmkend AAAAAAAAGL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 502         \{\par
503             sb.Append("\\"");\par
504             var symbols = item.ToString().ToCharArray();\par
505             \par
506             var unicodes = symbols.Select(symbol => GetUnicode(symbol));\par
507 \par
508             foreach (var unicode in unicodes)\par
509             \{\par
510                 sb.Append(unicode);\par
511             \}\par
512 \par
513             sb.Append("\\"");\par
514         \}\par
}
}
{\xe \v ToJson\:Json::JsonParser}
{\xe \v Json::JsonParser\:ToJson}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static string Json.JsonParser.ToJson (IDictionary< string, object > {\i bag}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAGM}
{\bkmkend AAAAAAAAGM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 310         \{\par
311             var sb = new StringBuilder(0);\par
312 \par
313             SerializeItem(sb, bag);\par
314 \par
315             return sb.ToString();\par
316         \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v _base16\:Json::JsonParser}
{\xe \v Json::JsonParser\:_base16}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly char [] Json.JsonParser._base16{\f2 [static]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAGN}
{\bkmkend AAAAAAAAGN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = new[]\par
                             \{\par
                                 '0', '1', '2', '3', \par
                                 '4', '5', '6', '7', \par
                                 '8', '9', 'A', 'B', \par
                                 'C', 'D', 'E', 'F'\par
                             \}\par
}
}
{\xe \v _cache\:Json::JsonParser}
{\xe \v Json::JsonParser\:_cache}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly IDictionary<Type, PropertyInfo[]> Json.JsonParser._cache{\f2 [static]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAGO}
{\bkmkend AAAAAAAAGO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v JsonNumbers\:Json::JsonParser}
{\xe \v Json::JsonParser\:JsonNumbers}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const NumberStyles Json.JsonParser.JsonNumbers = NumberStyles.Float{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAGP}
{\bkmkend AAAAAAAAGP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
YarnSpinner/{\b JsonParser.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Yarn.Lexer Class Reference\par \pard\plain 
{\tc\tcl2 \v Yarn.Lexer}
{\xe \v Yarn.Lexer}
{\bkmkstart AAAAAAAAOE}
{\bkmkend AAAAAAAAOE}
Collaboration diagram for Yarn.Lexer:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "da/d2e/a00238.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b LexerState}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b TokenRule}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Lexer} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TokenList} {\b Tokenise} (string title, string text)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CreateStates} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TokenList} {\b TokeniseLine} (string line, int lineNumber)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b LineIndentation} (string line)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b EnterState} ({\b LexerState} state)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const string {\b LINE_COMMENT} = "//"\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Dictionary< string, {\b LexerState} > {\b states}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LexerState} {\b defaultState}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LexerState} {\b currentState}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Stack< KeyValuePair< int, bool > > {\b indentationStack}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b shouldTrackNextIndentation}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Lexer\:Yarn::Lexer}
{\xe \v Yarn::Lexer\:Lexer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Yarn.Lexer.Lexer ()}}
\par
{\bkmkstart AAAAAAAAOF}
{\bkmkend AAAAAAAAOF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 311         \{\par
312             CreateStates ();\par
313         \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v CreateStates\:Yarn::Lexer}
{\xe \v Yarn::Lexer\:CreateStates}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Yarn.Lexer.CreateStates (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAOG}
{\bkmkend AAAAAAAAOG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 316         \{\par
317 \par
318             var patterns = new Dictionary<TokenType, string> ();\par
319 \par
320             patterns[TokenType.Text] = ".*";\par
321 \par
322             patterns[TokenType.Number] = @"\\-?[0-9]+(\\.[0-9+])?";\par
323             patterns[TokenType.String] = @"""([^""\\\\]*(?:\\\\.[^""\\\\]*)*)""";\par
324             patterns[TokenType.LeftParen] = @"\\(";\par
325             patterns[TokenType.RightParen] = @"\\)";\par
326             patterns[TokenType.EqualTo] = @"(==|is(?!\\w)|eq(?!\\w))";\par
327             patterns[TokenType.EqualToOrAssign] = @"(=|to(?!\\w))";\par
328             patterns[TokenType.NotEqualTo] = @"(\\!=|neq(?!\\w))";\par
329             patterns[TokenType.GreaterThanOrEqualTo] = @"(\\>=|gte(?!\\w))";\par
330             patterns[TokenType.GreaterThan] = @"(\\>|gt(?!\\w))";\par
331             patterns[TokenType.LessThanOrEqualTo] = @"(\\<=|lte(?!\\w))";\par
332             patterns[TokenType.LessThan] = @"(\\<|lt(?!\\w))";\par
333             patterns[TokenType.AddAssign] = @"\\+=";\par
334             patterns[TokenType.MinusAssign] = @"\\-=";\par
335             patterns[TokenType.MultiplyAssign] = @"\\*=";\par
336             patterns[TokenType.DivideAssign] = @"\\/=";\par
337             patterns[TokenType.Add] = @"\\+";\par
338             patterns[TokenType.Minus] = @"\\-";\par
339             patterns[TokenType.Multiply] = @"\\*";\par
340             patterns[TokenType.Divide] = @"\\/";\par
341             patterns [TokenType.And] = @"(\\&\\&|and(?!\\w))";\par
342             patterns [TokenType.Or] = @"(\\|\\||or(?!\\w))";\par
343             patterns [TokenType.Xor] = @"(\\^|xor(?!\\w))";\par
344             patterns [TokenType.Not] = @"(\\!|not(?!\\w))";\par
345             patterns[TokenType.Variable] = @"\\$([A-Za-z0-9_\\.])+";\par
346             patterns[TokenType.Comma] = @",";\par
347             patterns[TokenType.True] = @"true(?!\\w)";\par
348             patterns[TokenType.False] = @"false(?!\\w)";\par
349             patterns[TokenType.Null] = @"null(?!\\w)";\par
350 \par
351             patterns[TokenType.BeginCommand] = @"\\<\\<";\par
352             patterns[TokenType.EndCommand] = @"\\>\\>";\par
353 \par
354             patterns[TokenType.OptionStart] = @"\\[\\[";\par
355             patterns[TokenType.OptionEnd] = @"\\]\\]";\par
356             patterns[TokenType.OptionDelimit] = @"\\|";\par
357 \par
358             patterns[TokenType.Identifier] = @"[a-zA-Z0-9_:\\.]+";\par
359 \par
360             patterns[TokenType.If] = @"if(?!\\w)";\par
361             patterns[TokenType.Else] = @"else(?!\\w)";\par
362             patterns[TokenType.ElseIf] = @"elseif(?!\\w)";\par
363             patterns[TokenType.EndIf] = @"endif(?!\\w)";\par
364             patterns[TokenType.Set] = @"set(?!\\w)";\par
365 \par
366             patterns[TokenType.ShortcutOption] = @"\\-\\>";\par
367 \par
368             states = new Dictionary<string, LexerState> ();\par
369 \par
370             states ["base"] = new LexerState (patterns);\par
371             states ["base"].AddTransition(TokenType.BeginCommand, "command", delimitsText:true);\par
372             states ["base"].AddTransition(TokenType.OptionStart, "link", delimitsText:true);\par
373             states ["base"].AddTransition(TokenType.ShortcutOption, "shortcut-option");\par
374             states ["base"].AddTextRule (TokenType.Text);\par
375 \par
376             states ["shortcut-option"] = new LexerState (patterns);\par
377             states ["shortcut-option"].setTrackNextIndentation = true;\par
378             states ["shortcut-option"].AddTransition (TokenType.BeginCommand, "expression", delimitsText: true);\par
379             states ["shortcut-option"].AddTextRule (TokenType.Text, "base");\par
380 \par
381             states ["command"] = new LexerState (patterns);\par
382             states ["command"].AddTransition (TokenType.If, "expression");\par
383             states ["command"].AddTransition (TokenType.Else);\par
384             states ["command"].AddTransition (TokenType.ElseIf, "expression");\par
385             states ["command"].AddTransition (TokenType.EndIf);\par
386             states ["command"].AddTransition (TokenType.Set, "assignment");\par
387             states ["command"].AddTransition (TokenType.EndCommand,  "base", delimitsText: true);\par
388             states ["command"].AddTransition (TokenType.Identifier, "command-or-expression");\par
389             states ["command"].AddTextRule (TokenType.Text);\par
390 \par
391             states ["command-or-expression"] = new LexerState (patterns);\par
392             states ["command-or-expression"].AddTransition (TokenType.LeftParen, "expression");\par
393             states ["command-or-expression"].AddTransition (TokenType.EndCommand, "base", delimitsText:true);\par
394             states ["command-or-expression"].AddTextRule (TokenType.Text);\par
395 \par
396 \par
397             states ["assignment"] = new LexerState (patterns);\par
398             states ["assignment"].AddTransition(TokenType.Variable);\par
399             states ["assignment"].AddTransition(TokenType.EqualToOrAssign, "expression");\par
400             states ["assignment"].AddTransition(TokenType.AddAssign, "expression");\par
401             states ["assignment"].AddTransition(TokenType.MinusAssign, "expression");\par
402             states ["assignment"].AddTransition(TokenType.MultiplyAssign, "expression");\par
403             states ["assignment"].AddTransition(TokenType.DivideAssign, "expression");\par
404 \par
405 \par
406             states ["expression"] = new LexerState (patterns);\par
407             states ["expression"].AddTransition(TokenType.EndCommand, "base");\par
408             states ["expression"].AddTransition(TokenType.Number);\par
409             states ["expression"].AddTransition(TokenType.String);\par
410             states ["expression"].AddTransition(TokenType.LeftParen);\par
411             states ["expression"].AddTransition(TokenType.RightParen);\par
412             states ["expression"].AddTransition(TokenType.EqualTo);\par
413             states ["expression"].AddTransition(TokenType.EqualToOrAssign);\par
414             states ["expression"].AddTransition(TokenType.NotEqualTo);\par
415             states ["expression"].AddTransition(TokenType.GreaterThanOrEqualTo);\par
416             states ["expression"].AddTransition(TokenType.GreaterThan);\par
417             states ["expression"].AddTransition(TokenType.LessThanOrEqualTo);\par
418             states ["expression"].AddTransition(TokenType.LessThan);\par
419             states ["expression"].AddTransition(TokenType.Add);\par
420             states ["expression"].AddTransition(TokenType.Minus);\par
421             states ["expression"].AddTransition(TokenType.Multiply);\par
422             states ["expression"].AddTransition(TokenType.Divide);\par
423             states ["expression"].AddTransition(TokenType.And);\par
424             states ["expression"].AddTransition(TokenType.Or);\par
425             states ["expression"].AddTransition(TokenType.Xor);\par
426             states ["expression"].AddTransition(TokenType.Not);\par
427             states ["expression"].AddTransition(TokenType.Variable);\par
428             states ["expression"].AddTransition(TokenType.Comma);\par
429             states ["expression"].AddTransition(TokenType.True);\par
430             states ["expression"].AddTransition(TokenType.False);\par
431             states ["expression"].AddTransition(TokenType.Null);\par
432             states ["expression"].AddTransition(TokenType.Identifier);\par
433 \par
434 \par
435             states ["link"] = new LexerState (patterns);\par
436             states ["link"].AddTransition (TokenType.OptionEnd, "base", delimitsText:true);\par
437             states ["link"].AddTransition (TokenType.OptionDelimit, "link-destination", delimitsText:true);\par
438             states ["link"].AddTextRule (TokenType.Text);\par
439 \par
440             states ["link-destination"] = new LexerState (patterns);\par
441             states ["link-destination"].AddTransition (TokenType.Identifier);\par
442             states ["link-destination"].AddTransition (TokenType.OptionEnd, "base");\par
443 \par
444             defaultState = states ["base"];\par
445         \}\par
}
}
{\xe \v EnterState\:Yarn::Lexer}
{\xe \v Yarn::Lexer\:EnterState}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Yarn.Lexer.EnterState ({\b LexerState} {\i state}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAOH}
{\bkmkend AAAAAAAAOH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 656                                           \{\par
657             currentState = state;\par
658 \par
659             if (currentState.setTrackNextIndentation)\par
660                 shouldTrackNextIndentation = true;\par
661         \}\par
}
}
{\xe \v LineIndentation\:Yarn::Lexer}
{\xe \v Yarn::Lexer\:LineIndentation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Yarn.Lexer.LineIndentation (string {\i line}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAOI}
{\bkmkend AAAAAAAAOI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 645         \{\par
646             var initialIndentRegex = new Regex (@"^(\\s*)");\par
647             var match = initialIndentRegex.Match (line);\par
648 \par
649             if (match == null || match.Groups [0] == null) \{\par
650                 return 0;\par
651             \}\par
652 \par
653             return match.Groups [0].Length;\par
654         \}\par
}
}
{\xe \v Tokenise\:Yarn::Lexer}
{\xe \v Yarn::Lexer\:Tokenise}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TokenList} Yarn.Lexer.Tokenise (string {\i title}, string {\i text})}}
\par
{\bkmkstart AAAAAAAAOJ}
{\bkmkend AAAAAAAAOJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 448         \{\par
449 \par
450             // Do some initial setup\par
451             indentationStack = new Stack<KeyValuePair<int,bool>> ();\par
452             indentationStack.Push (new KeyValuePair<int, bool>(0, false));\par
453             shouldTrackNextIndentation = false;\par
454 \par
455             var tokens = new TokenList();\par
456 \par
457             currentState = defaultState;\par
458     \par
459             // Parse each line\par
460             var lines = new List<string>(text.Split ('\\n'));\par
461             // Add a blank line to ensure that we end with zero indentation\par
462             lines.Add("");\par
463 \par
464             int lineNumber = 1;\par
465 \par
466             foreach (var line in lines) \{               \par
467                 tokens.AddRange (this.TokeniseLine (line, lineNumber));\par
468                 lineNumber++;\par
469             \}\par
470 \par
471             var endOfInput = new Token (TokenType.EndOfInput, lineNumber, 0);\par
472             tokens.Add (endOfInput);\par
473 \par
474             return tokens;\par
475         \}\par
}
}
{\xe \v TokeniseLine\:Yarn::Lexer}
{\xe \v Yarn::Lexer\:TokeniseLine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TokenList} Yarn.Lexer.TokeniseLine (string {\i line}, int {\i lineNumber}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAOK}
{\bkmkend AAAAAAAAOK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 478         \{\par
479             var lineTokens = new Stack<Token> ();\par
480 \par
481             // Replace tabs with four spaces\par
482             line = line.Replace ("\\t", "    ");\par
483 \par
484             // Strip out \\r's\par
485             line = line.Replace("\\r", "");\par
486 \par
487             // Record the indentation level if the previous state wants us to\par
488 \par
489             var thisIndentation = LineIndentation (line);\par
490             var previousIndentation = indentationStack.Peek ();\par
491 \par
492             if (shouldTrackNextIndentation && thisIndentation > previousIndentation.Key) \{\par
493                 // If we are more indented than before, emit an\par
494                 // indent token and record this new indent level\par
495                 indentationStack.Push (new KeyValuePair<int, bool>(thisIndentation, true));\par
496 \par
497                 var indent = new Token (TokenType.Indent, lineNumber, previousIndentation.Key);\par
498                 indent.value = "".PadLeft (thisIndentation - previousIndentation.Key);\par
499 \par
500                 shouldTrackNextIndentation = false;\par
501 \par
502                 lineTokens.Push (indent);\par
503 \par
504             \} else if (thisIndentation < previousIndentation.Key) \{\par
505 \par
506                 // If we are less indented, emit a dedent for every\par
507                 // indentation level that we passed on the way back to 0 that also\par
508                 // emitted an indentation token.\par
509                 // at the same time, remove those indent levels from the stack\par
510 \par
511                 while (thisIndentation < indentationStack.Peek ().Key) \{\par
512 \par
513                     var topLevel = indentationStack.Pop ();\par
514 \par
515                     if (topLevel.Value) \{\par
516                         var dedent = new Token (TokenType.Dedent, lineNumber, 0);\par
517                         lineTokens.Push (dedent);\par
518                     \}\par
519 \par
520                 \}\par
521             \}\par
522 \par
523             // Now that we're past any initial indentation, start\par
524             // finding tokens.\par
525             int columnNumber = thisIndentation;\par
526 \par
527             var whitespace = new Regex (@"\\s*");\par
528 \par
529             while (columnNumber < line.Length) \{\par
530 \par
531                 // If we're about to hit a line comment, abort processing line\par
532                 // immediately\par
533                 if (line.Substring(columnNumber).StartsWith(LINE_COMMENT)) \{\par
534                     break;\par
535                 \}\par
536 \par
537                 var matched = false;\par
538 \par
539                 foreach (var rule in currentState.tokenRules) \{\par
540                     \par
541                     var match = rule.regex.Match (line, columnNumber);\par
542 \par
543                     if (match.Success == false || match.Length == 0)\par
544                         continue;\par
545 \par
546                     string tokenText;\par
547 \par
548                     if (rule.type == TokenType.Text) \{\par
549                         // if this is text, then back up to the most recent text \par
550                         // delimiting token, and treat everything from there as\par
551                         // the text.\par
552                         // we do this because we don't want this:\par
553                         //    <<flip Harley3 +1>>\par
554                         // to get matched as this:\par
555                         //    BeginCommand Identifier("flip") Text("Harley3 +1") EndCommand\par
556                         // instead, we want to match it as this:\par
557                         //    BeginCommand Text("flip Harley3 +1") EndCommand\par
558 \par
559                         int textStartIndex = thisIndentation;\par
560 \par
561                         if (lineTokens.Count > 0) \{\par
562                             while (lineTokens.Peek().type == TokenType.Identifier) \{\par
563                                 lineTokens.Pop ();\par
564                             \}\par
565 \par
566                             var startDelimiterToken = lineTokens.Peek ();\par
567                             textStartIndex = startDelimiterToken.columnNumber;\par
568                             if (startDelimiterToken.type == TokenType.Indent)\par
569                                 textStartIndex += startDelimiterToken.value.Length;\par
570                             if (startDelimiterToken.type == TokenType.Dedent)\par
571                                 textStartIndex = thisIndentation;\par
572                         \}\par
573 \par
574                         columnNumber = textStartIndex;\par
575 \par
576                         var textEndIndex = match.Index + match.Length;\par
577 \par
578                         tokenText = line.Substring (textStartIndex, textEndIndex-textStartIndex);\par
579 \par
580                     \} else \{\par
581                         tokenText = match.Value;\par
582                     \}\par
583 \par
584                     columnNumber += tokenText.Length;\par
585 \par
586                     // If this was a string, lop off the quotes at the start and\par
587                     // end, and un-escape the quotes and slashes\par
588                     if (rule.type == TokenType.String) \{\par
589                         tokenText = tokenText.Substring (1, tokenText.Length - 2);\par
590 \par
591                         tokenText = tokenText.Replace (@"\\\\", @"\\");\par
592                         tokenText = tokenText.Replace (@"\\""", @"""");\par
593                     \}\par
594 \par
595                     var token = new Token (rule.type, lineNumber, columnNumber, tokenText);\par
596 \par
597                     token.delimitsText = rule.delimitsText;\par
598 \par
599                     lineTokens.Push (token);\par
600 \par
601 \par
602 \par
603                     if (rule.entersState != null) \{\par
604                         if (states.ContainsKey(rule.entersState) == false) \{\par
605                             throw new TokeniserException (lineNumber, columnNumber, "Unknown tokeniser state " + rule.entersState);\par
606                         \}\par
607                         EnterState (states [rule.entersState]);\par
608 \par
609                         if (shouldTrackNextIndentation == true) \{\par
610                             if (indentationStack.Peek().Key < thisIndentation) \{\par
611                                 indentationStack.Push (new KeyValuePair<int, bool>(thisIndentation, false));\par
612                             \}\par
613                                 \par
614                         \}\par
615                     \}\par
616 \par
617                     matched = true;\par
618 \par
619                     break;\par
620                 \}\par
621 \par
622                 if (matched == false) \{\par
623 \par
624                     throw TokeniserException.ExpectedTokensFromState (lineNumber, columnNumber, currentState);\par
625                 \}\par
626 \par
627                 // consume any lingering whitespace before the next token\par
628                 var lastWhitespace = whitespace.Match(line, columnNumber);\par
629                 if (lastWhitespace != null) \{\par
630                     columnNumber += lastWhitespace.Length;\par
631                 \}\par
632 \par
633             \}\par
634 \par
635             var listToReturn = new TokenList (lineTokens.ToArray ());\par
636             listToReturn.Reverse ();\par
637 \par
638             return listToReturn;\par
639 \par
640 \par
641         \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v currentState\:Yarn::Lexer}
{\xe \v Yarn::Lexer\:currentState}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LexerState} Yarn.Lexer.currentState{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAOL}
{\bkmkend AAAAAAAAOL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v defaultState\:Yarn::Lexer}
{\xe \v Yarn::Lexer\:defaultState}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LexerState} Yarn.Lexer.defaultState{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAOM}
{\bkmkend AAAAAAAAOM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v indentationStack\:Yarn::Lexer}
{\xe \v Yarn::Lexer\:indentationStack}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Stack<KeyValuePair<int,bool> > Yarn.Lexer.indentationStack{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAON}
{\bkmkend AAAAAAAAON}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v LINE_COMMENT\:Yarn::Lexer}
{\xe \v Yarn::Lexer\:LINE_COMMENT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const string Yarn.Lexer.LINE_COMMENT = "//"{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAOO}
{\bkmkend AAAAAAAAOO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v shouldTrackNextIndentation\:Yarn::Lexer}
{\xe \v Yarn::Lexer\:shouldTrackNextIndentation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Yarn.Lexer.shouldTrackNextIndentation{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAOP}
{\bkmkend AAAAAAAAOP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v states\:Yarn::Lexer}
{\xe \v Yarn::Lexer\:states}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Dictionary<string, {\b LexerState}> Yarn.Lexer.states{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAOQ}
{\bkmkend AAAAAAAAOQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
YarnSpinner/{\b Lexer.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Yarn.Lexer.LexerState Class Reference\par \pard\plain 
{\tc\tcl2 \v Yarn.Lexer.LexerState}
{\xe \v Yarn.Lexer.LexerState}
{\bkmkstart AAAAAAAAOR}
{\bkmkend AAAAAAAAOR}
Collaboration diagram for Yarn.Lexer.LexerState:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d9/d21/a00240.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LexerState} (Dictionary< {\b TokenType}, string > {\b patterns})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TokenRule} {\b AddTransition} ({\b TokenType} type, string entersState=null, bool delimitsText=false)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TokenRule} {\b AddTextRule} ({\b TokenType} type, string entersState=null)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
List< {\b TokenRule} > {\b tokenRules} = new List<{\b TokenRule}>()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b setTrackNextIndentation} = false\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b containsTextRule} \\G((?!\{0\}).)*"{\f2  [get]}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Dictionary< {\b TokenType}, string > {\b patterns}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v LexerState\:Yarn::Lexer::LexerState}
{\xe \v Yarn::Lexer::LexerState\:LexerState}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Yarn.Lexer.LexerState.LexerState (Dictionary< {\b TokenType}, string > {\i patterns})}}
\par
{\bkmkstart AAAAAAAAOS}
{\bkmkend AAAAAAAAOS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 212             \{\par
213                 this.patterns = patterns;\par
214             \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v AddTextRule\:Yarn::Lexer::LexerState}
{\xe \v Yarn::Lexer::LexerState\:AddTextRule}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TokenRule} Yarn.Lexer.LexerState.AddTextRule ({\b TokenType} {\i type}, string {\i entersState} = {\f2 null})}}
\par
{\bkmkstart AAAAAAAAOT}
{\bkmkend AAAAAAAAOT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 233             \{\par
234                 if (containsTextRule) \{\par
235                     throw new InvalidOperationException ("State already contains a text rule");\par
236                 \}\par
237 \par
238                 var delimiterRules = new List<string>();\par
239 \par
240                 foreach (var otherRule in tokenRules) \{\par
241                     if (otherRule.delimitsText == true)\par
242                         delimiterRules.Add (string.Format ("(\{0\})", otherRule.regex.ToString().Substring(2)));\par
243                 \}\par
244 \par
245                 // Create a regex that matches all text up to but not including\par
246                 // any of the delimiter rules\par
247                 var pattern = string.Format (@"\\G((?!\{0\}).)*", \par
248                     string.Join ("|", delimiterRules.ToArray()));\par
249 \par
250                 var rule = AddTransition(type, entersState);\par
251 \par
252                 rule.regex = new Regex (pattern);\par
253                 rule.isTextRule = true;\par
254 \par
255 \par
256                 return rule;\par
257             \}\par
}
}
{\xe \v AddTransition\:Yarn::Lexer::LexerState}
{\xe \v Yarn::Lexer::LexerState\:AddTransition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TokenRule} Yarn.Lexer.LexerState.AddTransition ({\b TokenType} {\i type}, string {\i entersState} = {\f2 null}, bool {\i delimitsText} = {\f2 false})}}
\par
{\bkmkstart AAAAAAAAOU}
{\bkmkend AAAAAAAAOU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 218                                                                                                                  \{\par
219 \par
220                 var pattern = string.Format (@"\\G\{0\}", patterns [type]);\par
221 \par
222                 var rule = new TokenRule (type, new Regex(pattern), entersState, delimitsText);\par
223 \par
224                 tokenRules.Add(rule);\par
225 \par
226                 return rule;\par
227             \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v patterns\:Yarn::Lexer::LexerState}
{\xe \v Yarn::Lexer::LexerState\:patterns}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Dictionary<{\b TokenType}, string> Yarn.Lexer.LexerState.patterns{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAOV}
{\bkmkend AAAAAAAAOV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setTrackNextIndentation\:Yarn::Lexer::LexerState}
{\xe \v Yarn::Lexer::LexerState\:setTrackNextIndentation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Yarn.Lexer.LexerState.setTrackNextIndentation = false}}
\par
{\bkmkstart AAAAAAAAOW}
{\bkmkend AAAAAAAAOW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tokenRules\:Yarn::Lexer::LexerState}
{\xe \v Yarn::Lexer::LexerState\:tokenRules}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
List<{\b TokenRule}> Yarn.Lexer.LexerState.tokenRules = new List<{\b TokenRule}>()}}
\par
{\bkmkstart AAAAAAAAOX}
{\bkmkend AAAAAAAAOX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v containsTextRule\:Yarn::Lexer::LexerState}
{\xe \v Yarn::Lexer::LexerState\:containsTextRule}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Yarn.Lexer.LexerState.containsTextRule \\G((?!\{0\}).)*"{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAOY}
{\bkmkend AAAAAAAAOY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
YarnSpinner/{\b Lexer.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Yarn.Library Class Reference\par \pard\plain 
{\tc\tcl2 \v Yarn.Library}
{\xe \v Yarn.Library}
{\bkmkstart AAAAAAAAPS}
{\bkmkend AAAAAAAAPS}
Inheritance diagram for Yarn.Library:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d4/d9a/a00246.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for Yarn.Library:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d0/d1f/a00247.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FunctionInfo} {\b GetFunction} (string name)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ImportLibrary} ({\b Library} otherLibrary)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b RegisterFunction} ({\b FunctionInfo} function)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b RegisterFunction} (string name, int parameterCount, {\b ReturningFunction} implementation)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b RegisterFunction} (string name, int parameterCount, {\b Function} implementation)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b FunctionExists} (string name)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b DeregisterFunction} (string name)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Dictionary< string, {\b FunctionInfo} > {\b functions} = new Dictionary<string, {\b FunctionInfo}>()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v DeregisterFunction\:Yarn::Library}
{\xe \v Yarn::Library\:DeregisterFunction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Yarn.Library.DeregisterFunction (string {\i name})}}
\par
{\bkmkstart AAAAAAAANF}
{\bkmkend AAAAAAAANF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 125                                                     \{\par
126             if (functions.ContainsKey(name))\par
127                 functions.Remove (name);\par
128         \}\par
}
}
{\xe \v FunctionExists\:Yarn::Library}
{\xe \v Yarn::Library\:FunctionExists}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Yarn.Library.FunctionExists (string {\i name})}}
\par
{\bkmkstart AAAAAAAANG}
{\bkmkend AAAAAAAANG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 121                                                 \{\par
122             return functions.ContainsKey (name);\par
123         \}\par
}
}
{\xe \v GetFunction\:Yarn::Library}
{\xe \v Yarn::Library\:GetFunction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FunctionInfo} Yarn.Library.GetFunction (string {\i name})}}
\par
{\bkmkstart AAAAAAAANH}
{\bkmkend AAAAAAAANH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 90                                                      \{\par
91             try \{\par
92                 return functions [name];\par
93             \} catch (KeyNotFoundException) \{\par
94                 throw new InvalidOperationException (name + " is not a valid function");\par
95             \}\par
96         \}\par
}
}
{\xe \v ImportLibrary\:Yarn::Library}
{\xe \v Yarn::Library\:ImportLibrary}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Yarn.Library.ImportLibrary ({\b Library} {\i otherLibrary})}}
\par
{\bkmkstart AAAAAAAANI}
{\bkmkend AAAAAAAANI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 101                                                         \{\par
102             foreach (var entry in otherLibrary.functions) \{\par
103                 functions [entry.Key] = entry.Value;\par
104             \}\par
105         \}\par
}
}
{\xe \v RegisterFunction\:Yarn::Library}
{\xe \v Yarn::Library\:RegisterFunction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Yarn.Library.RegisterFunction ({\b FunctionInfo} {\i function})}}
\par
{\bkmkstart AAAAAAAANJ}
{\bkmkend AAAAAAAANJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 107                                                             \{\par
108             functions [function.name] = function;\par
109         \}\par
}
}
{\xe \v RegisterFunction\:Yarn::Library}
{\xe \v Yarn::Library\:RegisterFunction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Yarn.Library.RegisterFunction (string {\i name}, int {\i parameterCount}, {\b ReturningFunction} {\i implementation})}}
\par
{\bkmkstart AAAAAAAANK}
{\bkmkend AAAAAAAANK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 111                                                                                                         \{\par
112             var info = new FunctionInfo (name, parameterCount, implementation);\par
113             RegisterFunction (info);\par
114         \}\par
}
}
{\xe \v RegisterFunction\:Yarn::Library}
{\xe \v Yarn::Library\:RegisterFunction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Yarn.Library.RegisterFunction (string {\i name}, int {\i parameterCount}, {\b Function} {\i implementation})}}
\par
{\bkmkstart AAAAAAAANL}
{\bkmkend AAAAAAAANL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 116                                                                                                \{\par
117             var info = new FunctionInfo (name, parameterCount, implementation);\par
118             RegisterFunction (info);\par
119         \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v functions\:Yarn::Library}
{\xe \v Yarn::Library\:functions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Dictionary<string, {\b FunctionInfo}> Yarn.Library.functions = new Dictionary<string, {\b FunctionInfo}>(){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAPT}
{\bkmkend AAAAAAAAPT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
YarnSpinner/{\b Library.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Yarn.Dialogue.LineResult Class Reference\par \pard\plain 
{\tc\tcl2 \v Yarn.Dialogue.LineResult}
{\xe \v Yarn.Dialogue.LineResult}
{\bkmkstart AAAAAAAAMS}
{\bkmkend AAAAAAAAMS}
Inheritance diagram for Yarn.Dialogue.LineResult:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/d43/a00216.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for Yarn.Dialogue.LineResult:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/d24/a00217.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LineResult} (string text)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Line} {\b line}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v LineResult\:Yarn::Dialogue::LineResult}
{\xe \v Yarn::Dialogue::LineResult\:LineResult}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Yarn.Dialogue.LineResult.LineResult (string {\i text})}}
\par
{\bkmkstart AAAAAAAAMT}
{\bkmkend AAAAAAAAMT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 96                                             \{\par
97                 var line = new Line();\par
98                 line.text = text;\par
99                 this.line = line;\par
100             \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v line\:Yarn::Dialogue::LineResult}
{\xe \v Yarn::Dialogue::LineResult\:line}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Line} Yarn.Dialogue.LineResult.line}}
\par
{\bkmkstart AAAAAAAAMU}
{\bkmkend AAAAAAAAMU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
YarnSpinner/{\b Dialogue.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Yarn.Loader Class Reference\par \pard\plain 
{\tc\tcl2 \v Yarn.Loader}
{\xe \v Yarn.Loader}
{\bkmkstart AAAAAAAAPU}
{\bkmkend AAAAAAAAPU}
Collaboration diagram for Yarn.Loader:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "de/dbc/a00249.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b NodeInfo}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Loader} ({\b Dialogue} {\b dialogue})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Program} {\b Load} (string text, {\b Library} library, string fileName, {\b Program} includeProgram, bool showTokens, bool showParseTree, string onlyConsiderNode)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Program} {\b program}{\f2  [get, set]}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b PrintTokenList} (IEnumerable< {\b Token} > tokenList)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b PrintParseTree} ({\b Yarn.Parser.ParseNode} rootNode)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b NodeInfo}[] {\b ParseInput} (string text)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Dialogue} {\b dialogue}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Loader\:Yarn::Loader}
{\xe \v Yarn::Loader\:Loader}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Yarn.Loader.Loader ({\b Dialogue} {\i dialogue})}}
\par
{\bkmkstart AAAAAAAAPV}
{\bkmkend AAAAAAAAPV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 65                                          \{\par
66             if (dialogue == null)\par
67                 throw new ArgumentNullException ("dialogue");\par
68             \par
69             this.dialogue = dialogue;\par
70 \par
71         \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Load\:Yarn::Loader}
{\xe \v Yarn::Loader\:Load}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Program} Yarn.Loader.Load (string {\i text}, {\b Library} {\i library}, string {\i fileName}, {\b Program} {\i includeProgram}, bool {\i showTokens}, bool {\i showParseTree}, string {\i onlyConsiderNode})}}
\par
{\bkmkstart AAAAAAAAPW}
{\bkmkend AAAAAAAAPW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 77                                                                                                                                                                  \{\par
78 \par
79             // The final parsed nodes that were in the file we were given\par
80             Dictionary<string, Yarn.Parser.Node> nodes = new Dictionary<string, Parser.Node>();\par
81 \par
82             // Load the raw data and get the array of node title-text pairs\par
83             var nodeInfos = ParseInput (text);\par
84 \par
85             int nodesLoaded = 0;\par
86 \par
87             foreach (NodeInfo nodeInfo in nodeInfos) \{\par
88 \par
89                 if (onlyConsiderNode != null && nodeInfo.title != onlyConsiderNode)\par
90                     continue;\par
91 \par
92                 // Attempt to parse every node; log if we encounter any errors\par
93                 #if CATCH_EXCEPTIONS\par
94                 try \{\par
95                 #endif \par
96                     \par
97                     if (nodes.ContainsKey(nodeInfo.title)) \{\par
98                         throw new InvalidOperationException("Attempted to load a node called "+\par
99                             nodeInfo.title+", but a node with that name has already been loaded!");\par
100                     \}\par
101 \par
102                     var lexer = new Lexer ();\par
103                     var tokens = lexer.Tokenise (nodeInfo.title, nodeInfo.text);\par
104 \par
105                     if (showTokens)\par
106                         PrintTokenList (tokens);\par
107 \par
108                     var node = new Parser (tokens, library).Parse();\par
109 \par
110                     // If this node is tagged "rawText", then preserve its source\par
111                     if (string.IsNullOrEmpty(nodeInfo.tags) == false && \par
112                         nodeInfo.tags.Contains("rawText")) \{\par
113                         node.source = nodeInfo.text;\par
114                     \}\par
115 \par
116                     node.name = nodeInfo.title;\par
117 \par
118                     if (showParseTree)\par
119                         PrintParseTree(node);\par
120 \par
121                     nodes[nodeInfo.title] = node;\par
122 \par
123                     nodesLoaded++;\par
124 \par
125                 #if CATCH_EXCEPTIONS\par
126                 \} catch (Yarn.TokeniserException t) \{\par
127                     // Add file information\par
128                     var message = string.Format ("In file \{0\}: Error reading node \{1\}: \{2\}", fileName, nodeInfo.title, t.Message);\par
129                     throw new Yarn.TokeniserException (message);\par
130                 \} catch (Yarn.ParseException p) \{\par
131                     var message = string.Format ("In file \{0\}: Error parsing node \{1\}: \{2\}", fileName, nodeInfo.title, p.Message);\par
132                     throw new Yarn.ParseException (message);\par
133                 \} catch (InvalidOperationException e) \{\par
134                     var message = string.Format ("In file \{0\}: Error reading node \{1\}: \{2\}", fileName, nodeInfo.title, e.Message);\par
135                     throw new InvalidOperationException (message);\par
136                 \}\par
137                 #endif \par
138 \par
139 \par
140             \}\par
141 \par
142             var compiler = new Yarn.Compiler(fileName);\par
143 \par
144             foreach (var node in nodes) \{\par
145                 compiler.CompileNode (node.Value);\par
146             \}\par
147 \par
148             if (includeProgram != null) \{\par
149                 compiler.program.Include (includeProgram);\par
150             \}\par
151 \par
152             return compiler.program;\par
153 \par
154         \}\par
}
}
{\xe \v ParseInput\:Yarn::Loader}
{\xe \v Yarn::Loader\:ParseInput}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b NodeInfo} [] Yarn.Loader.ParseInput (string {\i text}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAPX}
{\bkmkend AAAAAAAAPX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 171         \{\par
172             // All the nodes we found in this file\par
173             var nodes = new List<NodeInfo> ();\par
174 \par
175             if (text.IndexOf("//") == 0) \{\par
176                 // If it starts with a comment, treat it as a single-node file\par
177                 nodes.Add (new NodeInfo ("Start", text, null));\par
178             \} else \{\par
179                 // Blindly assume it's JSON! \\:D/\par
180                 try \{\par
181 \par
182                     // First, parse the raw text\par
183                     var loadedJSON = JsonParser.FromJson (text);\par
184 \par
185                     // Process each item that was found (probably just a single one)\par
186                     foreach (var item in loadedJSON) \{\par
187 \par
188                         // We expect it to be an array of dictionaries\par
189                         var list = item.Value as IList<object>;\par
190 \par
191                         // For each dictionary in the list..\par
192                         foreach (IDictionary<string,object> nodeJSON in list) \{\par
193 \par
194                             // Pull out the node's title and body, and use that\par
195                             nodes.Add(\par
196                                 new NodeInfo(\par
197                                     nodeJSON["title"] as string, \par
198                                     nodeJSON["body"] as string,\par
199                                     nodeJSON["tags"] as string\par
200                                 )\par
201                             );\par
202                         \}\par
203                     \}\par
204 \par
205                 \} catch (InvalidCastException) \{\par
206                     dialogue.LogErrorMessage ("Error parsing Yarn input: it's valid JSON, but " +\par
207                         "it didn't match the data layout I was expecting.");\par
208                 \} catch (InvalidJsonException e) \{\par
209                     dialogue.LogErrorMessage ("Error parsing Yarn input: " + e.Message);\par
210                 \}\par
211             \}\par
212 \par
213             // hooray we're done\par
214             return nodes.ToArray();\par
215         \}\par
}
}
{\xe \v PrintParseTree\:Yarn::Loader}
{\xe \v Yarn::Loader\:PrintParseTree}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Yarn.Loader.PrintParseTree ({\b Yarn.Parser.ParseNode} {\i rootNode}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAPY}
{\bkmkend AAAAAAAAPY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 58                                                             \{\par
59             dialogue.LogDebugMessage("Parse Tree:");\par
60             dialogue.LogDebugMessage(rootNode.PrintTree(0));\par
61 \par
62         \}\par
}
}
{\xe \v PrintTokenList\:Yarn::Loader}
{\xe \v Yarn::Loader\:PrintTokenList}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Yarn.Loader.PrintTokenList (IEnumerable< {\b Token} > {\i tokenList}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAPZ}
{\bkmkend AAAAAAAAPZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 44                                                           \{\par
45             // Sum up the result\par
46             var sb = new System.Text.StringBuilder();\par
47             foreach (var t in tokenList) \{\par
48                 sb.AppendLine (string.Format("\{0\} (\{1\} line \{2\})", t.ToString (), t.context, t.lineNumber));\par
49             \}\par
50 \par
51             // Let's see what we got\par
52             dialogue.LogDebugMessage("Tokens:");\par
53             dialogue.LogDebugMessage(sb.ToString());\par
54 \par
55         \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v dialogue\:Yarn::Loader}
{\xe \v Yarn::Loader\:dialogue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Dialogue} Yarn.Loader.dialogue{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAQA}
{\bkmkend AAAAAAAAQA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v program\:Yarn::Loader}
{\xe \v Yarn::Loader\:program}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Program} Yarn.Loader.program{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAQB}
{\bkmkend AAAAAAAAQB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
YarnSpinner/{\b Loader.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Yarn.MemoryVariableStore Class Reference\par \pard\plain 
{\tc\tcl2 \v Yarn.MemoryVariableStore}
{\xe \v Yarn.MemoryVariableStore}
{\bkmkstart AAAAAAAAVX}
{\bkmkend AAAAAAAAVX}
Inheritance diagram for Yarn.MemoryVariableStore:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dc/d0f/a00303.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for Yarn.MemoryVariableStore:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d8/d17/a00304.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override void {\b SetValue} (string variableName, {\b Value} value)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override {\b Value} {\b GetValue} (string variableName)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override void {\b Clear} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SetNumber} (string variableName, float number)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b GetNumber} (string variableName)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Dictionary< string, {\b Value} > {\b variables} = new Dictionary<string, {\b Value}>()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Clear\:Yarn::MemoryVariableStore}
{\xe \v Yarn::MemoryVariableStore\:Clear}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override void Yarn.MemoryVariableStore.Clear (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAALA}
{\bkmkend AAAAAAAALA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Yarn.BaseVariableStorage} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAALB \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 336                                      \{\par
337             variables.Clear ();\par
338         \}\par
}
}
{\xe \v GetNumber\:Yarn::MemoryVariableStore}
{\xe \v Yarn::MemoryVariableStore\:GetNumber}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float Yarn.BaseVariableStorage.GetNumber (string {\i variableName}){\f2 [inherited]}}}
\par
{\bkmkstart AAAAAAAALD}
{\bkmkend AAAAAAAALD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Yarn.VariableStorage} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAACS \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 73                                                     \{\par
74             return this.GetValue(variableName).AsNumber;\par
75         \}\par
}
}
{\xe \v GetValue\:Yarn::MemoryVariableStore}
{\xe \v Yarn::MemoryVariableStore\:GetValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override {\b Value} Yarn.MemoryVariableStore.GetValue (string {\i variableName}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAALG}
{\bkmkend AAAAAAAALG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Yarn.BaseVariableStorage} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAALH \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 326         \{\par
327             Value value = Value.NULL;\par
328             if (variables.ContainsKey(variableName)) \{\par
329 \par
330                 value = variables [variableName];\par
331 \par
332             \}\par
333             return value;\par
334         \}               \par
}
}
{\xe \v SetNumber\:Yarn::MemoryVariableStore}
{\xe \v Yarn::MemoryVariableStore\:SetNumber}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Yarn.BaseVariableStorage.SetNumber (string {\i variableName}, float {\i number}){\f2 [inherited]}}}
\par
{\bkmkstart AAAAAAAALJ}
{\bkmkend AAAAAAAALJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Yarn.VariableStorage} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAACY \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 68                                                                  \{\par
69             this.SetValue(variableName, new Value(number));\par
70         \}\par
}
}
{\xe \v SetValue\:Yarn::MemoryVariableStore}
{\xe \v Yarn::MemoryVariableStore\:SetValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override void Yarn.MemoryVariableStore.SetValue (string {\i variableName}, {\b Value} {\i value}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAALM}
{\bkmkend AAAAAAAALM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Yarn.BaseVariableStorage} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAALN \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 321         \{\par
322             variables [variableName] = value;\par
323         \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v variables\:Yarn::MemoryVariableStore}
{\xe \v Yarn::MemoryVariableStore\:variables}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Dictionary<string, {\b Value}> Yarn.MemoryVariableStore.variables = new Dictionary<string, {\b Value}>(){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAVY}
{\bkmkend AAAAAAAAVY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
YarnSpinner/{\b TreeRunner.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
MobileOnly Class Reference\par \pard\plain 
{\tc\tcl2 \v MobileOnly}
{\xe \v MobileOnly}
{\bkmkstart AAAAAAAADF}
{\bkmkend AAAAAAAADF}
Inheritance diagram for MobileOnly:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d8/d64/a00181.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for MobileOnly:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d7/d25/a00182.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Awake} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Awake\:MobileOnly}
{\xe \v MobileOnly\:Awake}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MobileOnly.Awake (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAADG}
{\bkmkend AAAAAAAADG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 9                   \{\par
10 \par
11         if (Application.isMobilePlatform || Application.platform == RuntimePlatform.WebGLPlayer ) \{\par
12             // Hang around\par
13         \} else \{\par
14             Destroy(gameObject);\par
15         \}\par
16     \par
17     \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Unity/Assets/Yarn Spinner/Examples/Demo Scripts/{\b MobileOnly.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Yarn.Parser.Node Class Reference\par \pard\plain 
{\tc\tcl2 \v Yarn.Parser.Node}
{\xe \v Yarn.Parser.Node}
{\bkmkstart AAAAAAAASU}
{\bkmkend AAAAAAAASU}
Inheritance diagram for Yarn.Parser.Node:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d3/d5e/a00275.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for Yarn.Parser.Node:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dc/d28/a00276.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b ToString} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Package Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Node} (string {\b name}, {\b ParseNode} {\b parent}, {\b Parser} p)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b PrintTree} (int indentLevel)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Node} {\b NodeParent} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b name}{\f2  [get, set]}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b source}{\f2  [get, set]}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IEnumerable< {\b Statement} > {\b statements}{\f2  [get]}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
List< {\b Statement} > {\b _statements} = new List<{\b Statement}> ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Node\:Yarn::Parser::Node}
{\xe \v Yarn::Parser::Node\:Node}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Yarn.Parser.Node.Node (string {\i name}, {\b ParseNode} {\i parent}, {\b Parser} {\i p}){\f2 [package]}}}
\par
{\bkmkstart AAAAAAAASV}
{\bkmkend AAAAAAAASV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 145                                                                    : base(parent, p) \{\par
146                 this.name = name;\par
147                 // Consume statements until we run out of input or we hit a dedent\par
148                 while (p.tokens.Count > 0 && p.NextSymbolIs(TokenType.Dedent,TokenType.EndOfInput) == false) \{\par
149                     _statements.Add(new Statement(this, p));\par
150                 \}\par
151 \par
152             \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v NodeParent\:Yarn::Parser::Node}
{\xe \v Yarn::Parser::Node\:NodeParent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Node} Yarn.Parser.ParseNode.NodeParent (){\f2 [package]}, {\f2 [inherited]}}}
\par
{\bkmkstart AAAAAAAARA}
{\bkmkend AAAAAAAARA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 116                                        \{\par
117                 var node = this;\par
118 \par
119                 do \{\par
120                     if (node is Node) \{\par
121                         return node as Node;\par
122                     \}\par
123                     node = node.parent;\par
124                 \} while (node \par
125                     != null);                   \par
126 \par
127                 return null;\par
128             \}\par
}
}
{\xe \v PrintTree\:Yarn::Parser::Node}
{\xe \v Yarn::Parser::Node\:PrintTree}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string Yarn.Parser.Node.PrintTree (int {\i indentLevel}){\f2 [package]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAASW}
{\bkmkend AAAAAAAASW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Yarn.Parser.ParseNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAARC \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 156             \{\par
157                 var sb = new StringBuilder ();\par
158                 sb.Append (Tab (indentLevel, "Node "+name+" \{"));\par
159                 foreach (var statement in _statements) \{\par
160                     sb.Append( statement.PrintTree (indentLevel + 1));\par
161                 \}\par
162                 sb.Append (Tab (indentLevel, "\}"));\par
163                 return sb.ToString();\par
164             \}\par
}
}
{\xe \v ToString\:Yarn::Parser::Node}
{\xe \v Yarn::Parser::Node\:ToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string Yarn.Parser.ParseNode.ToString (){\f2 [inherited]}}}
\par
{\bkmkstart AAAAAAAARD}
{\bkmkend AAAAAAAARD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 111             \{\par
112                 return this.GetType ().Name;\par
113             \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v _statements\:Yarn::Parser::Node}
{\xe \v Yarn::Parser::Node\:_statements}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
List<{\b Statement}> Yarn.Parser.Node._statements = new List<{\b Statement}> (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAASX}
{\bkmkend AAAAAAAASX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v name\:Yarn::Parser::Node}
{\xe \v Yarn::Parser::Node\:name}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string Yarn.Parser.Node.name{\f2 [get]}, {\f2 [set]}, {\f2 [package]}}}
\par
{\bkmkstart AAAAAAAASY}
{\bkmkend AAAAAAAASY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v source\:Yarn::Parser::Node}
{\xe \v Yarn::Parser::Node\:source}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string Yarn.Parser.Node.source{\f2 [get]}, {\f2 [set]}, {\f2 [package]}}}
\par
{\bkmkstart AAAAAAAASZ}
{\bkmkend AAAAAAAASZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v statements\:Yarn::Parser::Node}
{\xe \v Yarn::Parser::Node\:statements}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IEnumerable<{\b Statement}> Yarn.Parser.Node.statements{\f2 [get]}, {\f2 [package]}}}
\par
{\bkmkstart AAAAAAAATA}
{\bkmkend AAAAAAAATA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
YarnSpinner/{\b Parser.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Yarn.Dialogue.NodeCompleteResult Class Reference\par \pard\plain 
{\tc\tcl2 \v Yarn.Dialogue.NodeCompleteResult}
{\xe \v Yarn.Dialogue.NodeCompleteResult}
{\bkmkstart AAAAAAAAMV}
{\bkmkend AAAAAAAAMV}
Inheritance diagram for Yarn.Dialogue.NodeCompleteResult:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dd/df3/a00219.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for Yarn.Dialogue.NodeCompleteResult:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d5/d0b/a00220.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b NodeCompleteResult} (string {\b nextNode})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b nextNode}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v NodeCompleteResult\:Yarn::Dialogue::NodeCompleteResult}
{\xe \v Yarn::Dialogue::NodeCompleteResult\:NodeCompleteResult}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Yarn.Dialogue.NodeCompleteResult.NodeCompleteResult (string {\i nextNode})}}
\par
{\bkmkstart AAAAAAAAMW}
{\bkmkend AAAAAAAAMW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 136                                                         \{\par
137                 this.nextNode = nextNode;\par
138             \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v nextNode\:Yarn::Dialogue::NodeCompleteResult}
{\xe \v Yarn::Dialogue::NodeCompleteResult\:nextNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string Yarn.Dialogue.NodeCompleteResult.nextNode}}
\par
{\bkmkstart AAAAAAAAMX}
{\bkmkend AAAAAAAAMX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
YarnSpinner/{\b Dialogue.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Yarn.Loader.NodeInfo Struct Reference\par \pard\plain 
{\tc\tcl2 \v Yarn.Loader.NodeInfo}
{\xe \v Yarn.Loader.NodeInfo}
{\bkmkstart AAAAAAAAQC}
{\bkmkend AAAAAAAAQC}
Collaboration diagram for Yarn.Loader.NodeInfo:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d3/d1a/a00251.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b NodeInfo} (string {\b title}, string {\b text}, string {\b tags})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b title}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b text}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b tags}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v NodeInfo\:Yarn::Loader::NodeInfo}
{\xe \v Yarn::Loader::NodeInfo\:NodeInfo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Yarn.Loader.NodeInfo.NodeInfo (string {\i title}, string {\i text}, string {\i tags})}}
\par
{\bkmkstart AAAAAAAAQD}
{\bkmkend AAAAAAAAQD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 161                                                                     \{\par
162                 this.title = title;\par
163                 this.text = text;\par
164                 this.tags = tags;\par
165             \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v tags\:Yarn::Loader::NodeInfo}
{\xe \v Yarn::Loader::NodeInfo\:tags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string Yarn.Loader.NodeInfo.tags}}
\par
{\bkmkstart AAAAAAAAQE}
{\bkmkend AAAAAAAAQE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v text\:Yarn::Loader::NodeInfo}
{\xe \v Yarn::Loader::NodeInfo\:text}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string Yarn.Loader.NodeInfo.text}}
\par
{\bkmkstart AAAAAAAAQF}
{\bkmkend AAAAAAAAQF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v title\:Yarn::Loader::NodeInfo}
{\xe \v Yarn::Loader::NodeInfo\:title}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string Yarn.Loader.NodeInfo.title}}
\par
{\bkmkstart AAAAAAAAQG}
{\bkmkend AAAAAAAAQG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
YarnSpinner/{\b Loader.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Yarn.Unity.Example.NPC Class Reference\par \pard\plain 
{\tc\tcl2 \v Yarn.Unity.Example.NPC}
{\xe \v Yarn.Unity.Example.NPC}
{\bkmkstart AAAAAAABDZ}
{\bkmkend AAAAAAABDZ}
Inheritance diagram for Yarn.Unity.Example.NPC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/df1/a00357.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for Yarn.Unity.Example.NPC:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/d73/a00358.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b characterName} = ""\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b talkToNode} = ""\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
TextAsset {\b scriptToLoad}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Start} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Update} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Start\:Yarn::Unity::Example::NPC}
{\xe \v Yarn::Unity::Example::NPC\:Start}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Yarn.Unity.Example.NPC.Start (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABEA}
{\bkmkend AAAAAAABEA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 44                       \{\par
45             if (scriptToLoad != null) \{\par
46                 FindObjectOfType<Yarn.Unity.DialogueRunner>().AddScript(scriptToLoad);\par
47             \}\par
48             \par
49         \}\par
}
}
{\xe \v Update\:Yarn::Unity::Example::NPC}
{\xe \v Yarn::Unity::Example::NPC\:Update}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Yarn.Unity.Example.NPC.Update (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABEB}
{\bkmkend AAAAAAABEB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 52                        \{\par
53             \par
54         \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v characterName\:Yarn::Unity::Example::NPC}
{\xe \v Yarn::Unity::Example::NPC\:characterName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string Yarn.Unity.Example.NPC.characterName = ""}}
\par
{\bkmkstart AAAAAAABEC}
{\bkmkend AAAAAAABEC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v scriptToLoad\:Yarn::Unity::Example::NPC}
{\xe \v Yarn::Unity::Example::NPC\:scriptToLoad}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
TextAsset Yarn.Unity.Example.NPC.scriptToLoad}}
\par
{\bkmkstart AAAAAAABED}
{\bkmkend AAAAAAABED}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v talkToNode\:Yarn::Unity::Example::NPC}
{\xe \v Yarn::Unity::Example::NPC\:talkToNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string Yarn.Unity.Example.NPC.talkToNode = ""}}
\par
{\bkmkstart AAAAAAABEE}
{\bkmkend AAAAAAABEE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Unity/Assets/Yarn Spinner/Examples/Demo Scripts/{\b NPC.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Yarn.Parser.Operator Class Reference\par \pard\plain 
{\tc\tcl2 \v Yarn.Parser.Operator}
{\xe \v Yarn.Parser.Operator}
{\bkmkstart AAAAAAAATB}
{\bkmkend AAAAAAAATB}
Inheritance diagram for Yarn.Parser.Operator:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dc/d5d/a00278.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for Yarn.Parser.Operator:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d2/d82/a00279.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b OperatorInfo}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b ToString} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Package Types\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Associativity} \{ {\b Associativity.Left}, 
{\b Associativity.Right}, 
{\b Associativity.None}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Package Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Operator} ({\b ParseNode} {\b parent}, {\b TokenType} t)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Operator} ({\b ParseNode} {\b parent}, {\b Parser} p)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b PrintTree} (int indentLevel)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Node} {\b NodeParent} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Package Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b OperatorInfo} {\b InfoForOperator} ({\b TokenType} op)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b IsOperator} ({\b TokenType} type)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TokenType} {\b operatorType}{\f2  [get, set]}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b TokenType}[] {\b operatorTypes}{\f2  [get]}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Enumeration Documentation\par
\pard\plain 
{\xe \v Associativity\:Yarn::Parser::Operator}
{\xe \v Yarn::Parser::Operator\:Associativity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b Yarn.Parser.Operator.Associativity}{\f2 [package]}}}
\par
{\bkmkstart AAAAAAAATC}
{\bkmkend AAAAAAAATC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v Left\:Yarn::Parser::Operator}
{\xe \v Yarn::Parser::Operator\:Left}
{\b {\i Left{\bkmkstart AAAAAAAATD}
{\bkmkend AAAAAAAATD}
}}  \par
{\xe \v Right\:Yarn::Parser::Operator}
{\xe \v Yarn::Parser::Operator\:Right}
{\b {\i Right{\bkmkstart AAAAAAAATE}
{\bkmkend AAAAAAAATE}
}}  \par
{\xe \v None\:Yarn::Parser::Operator}
{\xe \v Yarn::Parser::Operator\:None}
{\b {\i None{\bkmkstart AAAAAAAATF}
{\bkmkend AAAAAAAATF}
}}  \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1125                                         \{\par
1126                 Left, // resolve leftmost operand first\par
1127                 Right, // resolve rightmost operand first\par
1128                 None // special-case (like "(", ")", ","\par
1129             \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Operator\:Yarn::Parser::Operator}
{\xe \v Yarn::Parser::Operator\:Operator}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Yarn.Parser.Operator.Operator ({\b ParseNode} {\i parent}, {\b TokenType} {\i t}){\f2 [package]}}}
\par
{\bkmkstart AAAAAAAATG}
{\bkmkend AAAAAAAATG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1216                                                              : base(parent, null) \{\par
1217                 operatorType = t;\par
1218             \}\par
}
}
{\xe \v Operator\:Yarn::Parser::Operator}
{\xe \v Yarn::Parser::Operator\:Operator}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Yarn.Parser.Operator.Operator ({\b ParseNode} {\i parent}, {\b Parser} {\i p}){\f2 [package]}}}
\par
{\bkmkstart AAAAAAAATH}
{\bkmkend AAAAAAAATH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1220                                                           : base(parent, p) \{\par
1221                 operatorType = p.ExpectSymbol(Operator.operatorTypes).type;\par
1222             \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v InfoForOperator\:Yarn::Parser::Operator}
{\xe \v Yarn::Parser::Operator\:InfoForOperator}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b OperatorInfo} Yarn.Parser.Operator.InfoForOperator ({\b TokenType} {\i op}){\f2 [static]}, {\f2 [package]}}}
\par
{\bkmkstart AAAAAAAATI}
{\bkmkend AAAAAAAATI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1143                                                                        \{\par
1144                 if (Array.IndexOf(operatorTypes, op) == -1) \{\par
1145                     throw new ParseException (op.ToString () + " is not a valid operator");\par
1146                 \}\par
1147 \par
1148                 // Determine the precendence, associativity and\par
1149                 // number of operands that each operator has.\par
1150                 switch (op) \{\par
1151 \par
1152                 case TokenType.Not:\par
1153                 case TokenType.UnaryMinus:\par
1154                     return new OperatorInfo (Associativity.Right, 30, 1);\par
1155 \par
1156                 case TokenType.Multiply:\par
1157                 case TokenType.Divide:\par
1158                     return new OperatorInfo(Associativity.Left, 20,2);\par
1159                 case TokenType.Add:\par
1160                 case TokenType.Minus:\par
1161                     return new OperatorInfo(Associativity.Left, 15,2);\par
1162                 case TokenType.GreaterThan:\par
1163                 case TokenType.LessThan:\par
1164                 case TokenType.GreaterThanOrEqualTo:\par
1165                 case TokenType.LessThanOrEqualTo:\par
1166                     return new OperatorInfo(Associativity.Left, 10,2);\par
1167                 case TokenType.EqualTo:\par
1168                 case TokenType.EqualToOrAssign:\par
1169                 case TokenType.NotEqualTo:\par
1170                     return new OperatorInfo(Associativity.Left, 5,2);\par
1171                 case TokenType.And:\par
1172                     return new OperatorInfo(Associativity.Left, 4,2);\par
1173                 case TokenType.Or:\par
1174                     return new OperatorInfo(Associativity.Left, 3,2);\par
1175                 case TokenType.Xor:\par
1176                     return new OperatorInfo(Associativity.Left, 2,2);\par
1177 \par
1178                 \}\par
1179                 throw new InvalidOperationException ();\par
1180                 \par
1181             \}\par
}
}
{\xe \v IsOperator\:Yarn::Parser::Operator}
{\xe \v Yarn::Parser::Operator\:IsOperator}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static bool Yarn.Parser.Operator.IsOperator ({\b TokenType} {\i type}){\f2 [static]}, {\f2 [package]}}}
\par
{\bkmkstart AAAAAAAATJ}
{\bkmkend AAAAAAAATJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1183                                                             \{\par
1184                 return Array.IndexOf (operatorTypes, type) != -1;\par
1185             \}\par
}
}
{\xe \v NodeParent\:Yarn::Parser::Operator}
{\xe \v Yarn::Parser::Operator\:NodeParent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Node} Yarn.Parser.ParseNode.NodeParent (){\f2 [package]}, {\f2 [inherited]}}}
\par
{\bkmkstart AAAAAAAARA}
{\bkmkend AAAAAAAARA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 116                                        \{\par
117                 var node = this;\par
118 \par
119                 do \{\par
120                     if (node is Node) \{\par
121                         return node as Node;\par
122                     \}\par
123                     node = node.parent;\par
124                 \} while (node \par
125                     != null);                   \par
126 \par
127                 return null;\par
128             \}\par
}
}
{\xe \v PrintTree\:Yarn::Parser::Operator}
{\xe \v Yarn::Parser::Operator\:PrintTree}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string Yarn.Parser.Operator.PrintTree (int {\i indentLevel}){\f2 [package]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAATK}
{\bkmkend AAAAAAAATK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Yarn.Parser.ParseNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAARC \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1225             \{\par
1226                 return Tab (indentLevel, operatorType.ToString ());\par
1227             \}\par
}
}
{\xe \v ToString\:Yarn::Parser::Operator}
{\xe \v Yarn::Parser::Operator\:ToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string Yarn.Parser.ParseNode.ToString (){\f2 [inherited]}}}
\par
{\bkmkstart AAAAAAAARD}
{\bkmkend AAAAAAAARD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 111             \{\par
112                 return this.GetType ().Name;\par
113             \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v operatorType\:Yarn::Parser::Operator}
{\xe \v Yarn::Parser::Operator\:operatorType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TokenType} Yarn.Parser.Operator.operatorType{\f2 [get]}, {\f2 [set]}, {\f2 [package]}}}
\par
{\bkmkstart AAAAAAAATL}
{\bkmkend AAAAAAAATL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v operatorTypes\:Yarn::Parser::Operator}
{\xe \v Yarn::Parser::Operator\:operatorTypes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TokenType} [] Yarn.Parser.Operator.operatorTypes{\f2 [static]}, {\f2 [get]}, {\f2 [package]}}}
\par
{\bkmkstart AAAAAAAATM}
{\bkmkend AAAAAAAATM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
YarnSpinner/{\b Parser.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Yarn.Parser.Operator.OperatorInfo Struct Reference\par \pard\plain 
{\tc\tcl2 \v Yarn.Parser.Operator.OperatorInfo}
{\xe \v Yarn.Parser.Operator.OperatorInfo}
{\bkmkstart AAAAAAAATN}
{\bkmkend AAAAAAAATN}
Collaboration diagram for Yarn.Parser.Operator.OperatorInfo:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d2/d04/a00281.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Package Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b OperatorInfo} ({\b Associativity} {\b associativity}, int {\b precedence}, int {\b arguments})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Package Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Associativity} {\b associativity}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b precedence}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b arguments}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v OperatorInfo\:Yarn::Parser::Operator::OperatorInfo}
{\xe \v Yarn::Parser::Operator::OperatorInfo\:OperatorInfo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Yarn.Parser.Operator.OperatorInfo.OperatorInfo ({\b Associativity} {\i associativity}, int {\i precedence}, int {\i arguments}){\f2 [package]}}}
\par
{\bkmkstart AAAAAAAATO}
{\bkmkend AAAAAAAATO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1136                                                                                                   \{                 \par
1137                     this.associativity = associativity;\par
1138                     this.precedence = precedence;\par
1139                     this.arguments = arguments;\par
1140                 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v arguments\:Yarn::Parser::Operator::OperatorInfo}
{\xe \v Yarn::Parser::Operator::OperatorInfo\:arguments}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Yarn.Parser.Operator.OperatorInfo.arguments{\f2 [package]}}}
\par
{\bkmkstart AAAAAAAATP}
{\bkmkend AAAAAAAATP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v associativity\:Yarn::Parser::Operator::OperatorInfo}
{\xe \v Yarn::Parser::Operator::OperatorInfo\:associativity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Associativity} Yarn.Parser.Operator.OperatorInfo.associativity{\f2 [package]}}}
\par
{\bkmkstart AAAAAAAATQ}
{\bkmkend AAAAAAAATQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v precedence\:Yarn::Parser::Operator::OperatorInfo}
{\xe \v Yarn::Parser::Operator::OperatorInfo\:precedence}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Yarn.Parser.Operator.OperatorInfo.precedence{\f2 [package]}}}
\par
{\bkmkstart AAAAAAAATR}
{\bkmkend AAAAAAAATR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
YarnSpinner/{\b Parser.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Yarn.Dialogue.OptionSetResult Class Reference\par \pard\plain 
{\tc\tcl2 \v Yarn.Dialogue.OptionSetResult}
{\xe \v Yarn.Dialogue.OptionSetResult}
{\bkmkstart AAAAAAAAMY}
{\bkmkend AAAAAAAAMY}
Inheritance diagram for Yarn.Dialogue.OptionSetResult:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d0/d24/a00222.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for Yarn.Dialogue.OptionSetResult:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dc/d28/a00223.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b OptionSetResult} (IList< string > optionStrings, {\b OptionChooser} setSelectedOption)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Options} {\b options}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b OptionChooser} {\b setSelectedOptionDelegate}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v OptionSetResult\:Yarn::Dialogue::OptionSetResult}
{\xe \v Yarn::Dialogue::OptionSetResult\:OptionSetResult}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Yarn.Dialogue.OptionSetResult.OptionSetResult (IList< string > {\i optionStrings}, {\b OptionChooser} {\i setSelectedOption})}}
\par
{\bkmkstart AAAAAAAAMZ}
{\bkmkend AAAAAAAAMZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 123                                                                                                   \{\par
124                 var options = new Options();\par
125                 options.options = optionStrings;\par
126                 this.options = options;\par
127                 this.setSelectedOptionDelegate = setSelectedOption;\par
128             \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v options\:Yarn::Dialogue::OptionSetResult}
{\xe \v Yarn::Dialogue::OptionSetResult\:options}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Options} Yarn.Dialogue.OptionSetResult.options}}
\par
{\bkmkstart AAAAAAAANA}
{\bkmkend AAAAAAAANA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v setSelectedOptionDelegate\:Yarn::Dialogue::OptionSetResult}
{\xe \v Yarn::Dialogue::OptionSetResult\:setSelectedOptionDelegate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b OptionChooser} Yarn.Dialogue.OptionSetResult.setSelectedOptionDelegate}}
\par
{\bkmkstart AAAAAAAANB}
{\bkmkend AAAAAAAANB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
YarnSpinner/{\b Dialogue.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Yarn.Parser.OptionStatement Class Reference\par \pard\plain 
{\tc\tcl2 \v Yarn.Parser.OptionStatement}
{\xe \v Yarn.Parser.OptionStatement}
{\bkmkstart AAAAAAAATS}
{\bkmkend AAAAAAAATS}
Inheritance diagram for Yarn.Parser.OptionStatement:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dd/dfe/a00283.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for Yarn.Parser.OptionStatement:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "db/dc3/a00284.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b ToString} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Package Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b OptionStatement} ({\b ParseNode} {\b parent}, {\b Parser} p)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b PrintTree} (int indentLevel)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Node} {\b NodeParent} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Package Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b CanParse} ({\b Parser} p)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b destination}{\f2  [get, set]}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b label}{\f2  [get, set]}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v OptionStatement\:Yarn::Parser::OptionStatement}
{\xe \v Yarn::Parser::OptionStatement\:OptionStatement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Yarn.Parser.OptionStatement.OptionStatement ({\b ParseNode} {\i parent}, {\b Parser} {\i p}){\f2 [package]}}}
\par
{\bkmkstart AAAAAAAATT}
{\bkmkend AAAAAAAATT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 474                                                                  : base(parent, p) \{\par
475 \par
476                 // The meaning of the string(s) we have changes\par
477                 // depending on whether we have one or two, so\par
478                 // keep them both and decide their meaning once\par
479                 // we know more\par
480 \par
481                 string firstString;\par
482                 string secondString;\par
483 \par
484                 // Parse "[[LABEL"\par
485                 p.ExpectSymbol(TokenType.OptionStart);\par
486                 firstString = p.ExpectSymbol(TokenType.Text).value as String;\par
487 \par
488                 // If there's a | in there, get the string that comes after it\par
489                 if (p.NextSymbolIs(TokenType.OptionDelimit)) \{\par
490 \par
491                     p.ExpectSymbol(TokenType.OptionDelimit);\par
492                     secondString = p.ExpectSymbol(TokenType.Text, TokenType.Identifier).value as String;\par
493 \par
494                     // Two strings mean that the first is the label, and the second\par
495                     // is the name of the node that we should head to if this option\par
496                     // is selected\par
497                     label = firstString;\par
498                     destination = secondString;\par
499                 \} else \{\par
500                     // One string means we don't have a label\par
501                     label = null;\par
502                     destination = firstString;\par
503                 \}\par
504 \par
505                 // Parse the closing ]]\par
506                 p.ExpectSymbol(TokenType.OptionEnd);\par
507             \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v CanParse\:Yarn::Parser::OptionStatement}
{\xe \v Yarn::Parser::OptionStatement\:CanParse}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static bool Yarn.Parser.OptionStatement.CanParse ({\b Parser} {\i p}){\f2 [static]}, {\f2 [package]}}}
\par
{\bkmkstart AAAAAAAATU}
{\bkmkend AAAAAAAATU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 466             \{\par
467                 return p.NextSymbolIs (TokenType.OptionStart);\par
468             \}\par
}
}
{\xe \v NodeParent\:Yarn::Parser::OptionStatement}
{\xe \v Yarn::Parser::OptionStatement\:NodeParent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Node} Yarn.Parser.ParseNode.NodeParent (){\f2 [package]}, {\f2 [inherited]}}}
\par
{\bkmkstart AAAAAAAARA}
{\bkmkend AAAAAAAARA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 116                                        \{\par
117                 var node = this;\par
118 \par
119                 do \{\par
120                     if (node is Node) \{\par
121                         return node as Node;\par
122                     \}\par
123                     node = node.parent;\par
124                 \} while (node \par
125                     != null);                   \par
126 \par
127                 return null;\par
128             \}\par
}
}
{\xe \v PrintTree\:Yarn::Parser::OptionStatement}
{\xe \v Yarn::Parser::OptionStatement\:PrintTree}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string Yarn.Parser.OptionStatement.PrintTree (int {\i indentLevel}){\f2 [package]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAATV}
{\bkmkend AAAAAAAATV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Yarn.Parser.ParseNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAARC \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 511             \{\par
512                 if (label != null) \{\par
513                     return Tab (indentLevel, string.Format ("Option: \\"\{0\}\\" -> \{1\}", label, destination));\par
514                 \} else \{\par
515                     return Tab (indentLevel, string.Format ("Option: -> \{0\}", destination));\par
516                 \}\par
517             \}\par
}
}
{\xe \v ToString\:Yarn::Parser::OptionStatement}
{\xe \v Yarn::Parser::OptionStatement\:ToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string Yarn.Parser.ParseNode.ToString (){\f2 [inherited]}}}
\par
{\bkmkstart AAAAAAAARD}
{\bkmkend AAAAAAAARD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 111             \{\par
112                 return this.GetType ().Name;\par
113             \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v destination\:Yarn::Parser::OptionStatement}
{\xe \v Yarn::Parser::OptionStatement\:destination}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string Yarn.Parser.OptionStatement.destination{\f2 [get]}, {\f2 [set]}, {\f2 [package]}}}
\par
{\bkmkstart AAAAAAAATW}
{\bkmkend AAAAAAAATW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v label\:Yarn::Parser::OptionStatement}
{\xe \v Yarn::Parser::OptionStatement\:label}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string Yarn.Parser.OptionStatement.label{\f2 [get]}, {\f2 [set]}, {\f2 [package]}}}
\par
{\bkmkstart AAAAAAAATX}
{\bkmkend AAAAAAAATX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
YarnSpinner/{\b Parser.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Yarn.ParseException Class Reference\par \pard\plain 
{\tc\tcl2 \v Yarn.ParseException}
{\xe \v Yarn.ParseException}
{\bkmkstart AAAAAAAAQH}
{\bkmkend AAAAAAAAQH}
Inheritance diagram for Yarn.ParseException:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d0/d3e/a00253.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for Yarn.ParseException:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d7/d03/a00254.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Package Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ParseException} (string message)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Package Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b ParseException} {\b Make} ({\b Token} foundToken, params {\b TokenType}[] expectedTypes)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b ParseException} {\b Make} ({\b Token} mostRecentToken, string message)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Package Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b lineNumber} = 0\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v ParseException\:Yarn::ParseException}
{\xe \v Yarn::ParseException\:ParseException}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Yarn.ParseException.ParseException (string {\i message}){\f2 [package]}}}
\par
{\bkmkstart AAAAAAAAQI}
{\bkmkend AAAAAAAAQI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 73 : base(message) \{\}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Make\:Yarn::ParseException}
{\xe \v Yarn::ParseException\:Make}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b ParseException} Yarn.ParseException.Make ({\b Token} {\i foundToken}, params {\b TokenType}[] {\i expectedTypes}){\f2 [static]}, {\f2 [package]}}}
\par
{\bkmkstart AAAAAAAAQJ}
{\bkmkend AAAAAAAAQJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 41                                                                                                 \{\par
42 \par
43             var lineNumber = foundToken.lineNumber+1;\par
44 \par
45             var expectedTypeNames = new List<String> ();\par
46             foreach (var type in expectedTypes) \{\par
47                 expectedTypeNames.Add (type.ToString ());\par
48             \}\par
49 \par
50             string possibleValues = string.Join(",", expectedTypeNames.ToArray());\par
51             string message = string.Format("Line \{0\}:\{1\}: Expected \{2\}, but found \{3\}",\par
52                                            lineNumber,\par
53                                            foundToken.columnNumber,\par
54                                            possibleValues,\par
55                                            foundToken.type.ToString()\par
56                                            );\par
57             var e = new ParseException (message);\par
58             e.lineNumber = lineNumber;\par
59             return e;\par
60         \}\par
}
}
{\xe \v Make\:Yarn::ParseException}
{\xe \v Yarn::ParseException\:Make}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b ParseException} Yarn.ParseException.Make ({\b Token} {\i mostRecentToken}, string {\i message}){\f2 [static]}, {\f2 [package]}}}
\par
{\bkmkstart AAAAAAAAQK}
{\bkmkend AAAAAAAAQK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 62                                                                                    \{\par
63             var lineNumber = mostRecentToken.lineNumber+1;\par
64             string theMessage = string.Format ("Line \{0\}:\{1\}: \{2\}",\par
65                                  lineNumber,\par
66                                 mostRecentToken.columnNumber,\par
67                                  message);\par
68             var e = new ParseException (theMessage);\par
69             e.lineNumber = lineNumber;\par
70             return e;\par
71         \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v lineNumber\:Yarn::ParseException}
{\xe \v Yarn::ParseException\:lineNumber}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Yarn.ParseException.lineNumber = 0{\f2 [package]}}}
\par
{\bkmkstart AAAAAAAAQL}
{\bkmkend AAAAAAAAQL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
YarnSpinner/{\b Parser.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Yarn.Parser.ParseNode Class Reference\par \pard\plain 
{\tc\tcl2 \v Yarn.Parser.ParseNode}
{\xe \v Yarn.Parser.ParseNode}
{\bkmkstart AAAAAAAATY}
{\bkmkend AAAAAAAATY}
Inheritance diagram for Yarn.Parser.ParseNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d5/d7b/a00286.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for Yarn.Parser.ParseNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/d7f/a00287.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b ToString} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Package Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ParseNode} ({\b ParseNode} {\b parent}, {\b Parser} p)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
abstract string {\b PrintTree} (int indentLevel)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Node} {\b NodeParent} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ParseNode} {\b parent}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v ParseNode\:Yarn::Parser::ParseNode}
{\xe \v Yarn::Parser::ParseNode\:ParseNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Yarn.Parser.ParseNode.ParseNode ({\b ParseNode} {\i parent}, {\b Parser} {\i p}){\f2 [package]}}}
\par
{\bkmkstart AAAAAAAATZ}
{\bkmkend AAAAAAAATZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 105 \{ this.parent = parent; \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v NodeParent\:Yarn::Parser::ParseNode}
{\xe \v Yarn::Parser::ParseNode\:NodeParent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Node} Yarn.Parser.ParseNode.NodeParent (){\f2 [package]}}}
\par
{\bkmkstart AAAAAAAARA}
{\bkmkend AAAAAAAARA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 116                                        \{\par
117                 var node = this;\par
118 \par
119                 do \{\par
120                     if (node is Node) \{\par
121                         return node as Node;\par
122                     \}\par
123                     node = node.parent;\par
124                 \} while (node \par
125                     != null);                   \par
126 \par
127                 return null;\par
128             \}\par
}
}
{\xe \v PrintTree\:Yarn::Parser::ParseNode}
{\xe \v Yarn::Parser::ParseNode\:PrintTree}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
abstract string Yarn.Parser.ParseNode.PrintTree (int {\i indentLevel}){\f2 [package]}, {\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAARC}
{\bkmkend AAAAAAAARC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b Yarn.Parser.Operator} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAATK \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Yarn.Parser.AssignmentStatement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAARB \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Yarn.Parser.Expression} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAASF \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Yarn.Parser.ValueNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUA \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Yarn.Parser.IfStatement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAASO \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Yarn.Parser.OptionStatement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAATV \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Yarn.Parser.Block} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAARL \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Yarn.Parser.ShortcutOption} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUB \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Yarn.Parser.ShortcutOptionGroup} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUC \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Yarn.Parser.CustomCommand} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAARU \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Yarn.Parser.Statement} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUD \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b Yarn.Parser.Node} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAASW \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v ToString\:Yarn::Parser::ParseNode}
{\xe \v Yarn::Parser::ParseNode\:ToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string Yarn.Parser.ParseNode.ToString ()}}
\par
{\bkmkstart AAAAAAAARD}
{\bkmkend AAAAAAAARD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 111             \{\par
112                 return this.GetType ().Name;\par
113             \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v parent\:Yarn::Parser::ParseNode}
{\xe \v Yarn::Parser::ParseNode\:parent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ParseNode} Yarn.Parser.ParseNode.parent{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAUE}
{\bkmkend AAAAAAAAUE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
YarnSpinner/{\b Parser.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Yarn.Parser Class Reference\par \pard\plain 
{\tc\tcl2 \v Yarn.Parser}
{\xe \v Yarn.Parser}
{\bkmkstart AAAAAAAAQM}
{\bkmkend AAAAAAAAQM}
Collaboration diagram for Yarn.Parser:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d0/def/a00256.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b AssignmentStatement}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Block}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CustomCommand}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Expression}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b IfStatement}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Node}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Operator}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b OptionStatement}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ParseNode}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ShortcutOption}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ShortcutOptionGroup}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Statement}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ValueNode}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Package Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Parser} (ICollection< {\b Token} > {\b tokens}, {\b Library} {\b library})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Node} {\b Parse} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b NextSymbolIs} (params {\b TokenType}[] validTypes)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b NextSymbolsAre} (params {\b TokenType}[] validTypes)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Token} {\b ExpectSymbol} ({\b TokenType} type)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Token} {\b ExpectSymbol} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Token} {\b ExpectSymbol} (params {\b TokenType}[] validTypes)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Private Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static string {\b Tab} (int indentLevel, string input, bool newLine=true)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Queue< {\b Token} > {\b tokens}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Library} {\b library}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Parser\:Yarn::Parser}
{\xe \v Yarn::Parser\:Parser}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Yarn.Parser.Parser (ICollection< {\b Token} > {\i tokens}, {\b Library} {\i library}){\f2 [package]}}}
\par
{\bkmkstart AAAAAAAAQN}
{\bkmkend AAAAAAAAQN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1238                                                                     \{\par
1239             this.tokens = new Queue<Token>(tokens);\par
1240             this.library = library;\par
1241         \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v ExpectSymbol\:Yarn::Parser}
{\xe \v Yarn::Parser\:ExpectSymbol}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Token} Yarn.Parser.ExpectSymbol ({\b TokenType} {\i type}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAQO}
{\bkmkend AAAAAAAAQO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1276                                            \{\par
1277             var t = this.tokens.Dequeue();\par
1278             if (t.type != type) \{\par
1279 \par
1280                 throw ParseException.Make(t, type);\par
1281             \}\par
1282             return t;\par
1283         \}\par
}
}
{\xe \v ExpectSymbol\:Yarn::Parser}
{\xe \v Yarn::Parser\:ExpectSymbol}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Token} Yarn.Parser.ExpectSymbol (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAQP}
{\bkmkend AAAAAAAAQP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1286                              \{\par
1287             var token = this.tokens.Dequeue ();\par
1288             if (token.type == TokenType.EndOfInput) \{\par
1289                 throw ParseException.Make (token, "Unexpected end of input");\par
1290             \}\par
1291             return token;\par
1292         \}\par
}
}
{\xe \v ExpectSymbol\:Yarn::Parser}
{\xe \v Yarn::Parser\:ExpectSymbol}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Token} Yarn.Parser.ExpectSymbol (params {\b TokenType}[] {\i validTypes}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAQQ}
{\bkmkend AAAAAAAAQQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1296                                                           \{\par
1297             var t = this.tokens.Dequeue();\par
1298 \par
1299             foreach (var validType in validTypes) \{\par
1300                 if (t.type == validType) \{\par
1301                     return t;\par
1302                 \}\par
1303             \}\par
1304 \par
1305             throw ParseException.Make(t, validTypes);\par
1306         \}\par
}
}
{\xe \v NextSymbolIs\:Yarn::Parser}
{\xe \v Yarn::Parser\:NextSymbolIs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Yarn.Parser.NextSymbolIs (params {\b TokenType}[] {\i validTypes}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAQR}
{\bkmkend AAAAAAAAQR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1250                                                          \{\par
1251             var t = this.tokens.Peek().type;\par
1252 \par
1253             foreach (var validType in validTypes) \{\par
1254                 if (t == validType) \{\par
1255                     return true;\par
1256                 \}\par
1257             \}\par
1258             return false;\par
1259         \}\par
}
}
{\xe \v NextSymbolsAre\:Yarn::Parser}
{\xe \v Yarn::Parser\:NextSymbolsAre}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Yarn.Parser.NextSymbolsAre (params {\b TokenType}[] {\i validTypes}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAQS}
{\bkmkend AAAAAAAAQS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1264                                                            \{\par
1265             var tempQueue = new Queue<Token> (tokens);\par
1266             foreach (var type in validTypes) \{\par
1267                 if (tempQueue.Dequeue ().type != type)\par
1268                     return false;\par
1269             \}\par
1270             return true;\par
1271         \}\par
}
}
{\xe \v Parse\:Yarn::Parser}
{\xe \v Yarn::Parser\:Parse}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Node} Yarn.Parser.Parse (){\f2 [package]}}}
\par
{\bkmkstart AAAAAAAAQT}
{\bkmkend AAAAAAAAQT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1243                               \{\par
1244 \par
1245             // Kick off the parsing process by trying to parse a whole node\par
1246             return new Node("Start", null, this);\par
1247         \}\par
}
}
{\xe \v Tab\:Yarn::Parser}
{\xe \v Yarn::Parser\:Tab}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static string Yarn.Parser.Tab (int {\i indentLevel}, string {\i input}, bool {\i newLine} = {\f2 true}){\f2 [static]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAQU}
{\bkmkend AAAAAAAAQU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 83                                                                                       \{\par
84             var sb = new StringBuilder();\par
85 \par
86             for (int i = 0; i < indentLevel; i++) \{\par
87                 sb.Append ("| ");\par
88             \}\par
89             sb.Append (input);\par
90 \par
91             if (newLine)\par
92                 sb.Append ("\\n");\par
93             \par
94             return sb.ToString ();\par
95         \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v library\:Yarn::Parser}
{\xe \v Yarn::Parser\:library}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Library} Yarn.Parser.library{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAQV}
{\bkmkend AAAAAAAAQV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v tokens\:Yarn::Parser}
{\xe \v Yarn::Parser\:tokens}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Queue<{\b Token}> Yarn.Parser.tokens{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAQW}
{\bkmkend AAAAAAAAQW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
YarnSpinner/{\b Parser.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Yarn.Unity.Example.PlayerCharacter Class Reference\par \pard\plain 
{\tc\tcl2 \v Yarn.Unity.Example.PlayerCharacter}
{\xe \v Yarn.Unity.Example.PlayerCharacter}
{\bkmkstart AAAAAAABEF}
{\bkmkend AAAAAAABEF}
Inheritance diagram for Yarn.Unity.Example.PlayerCharacter:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d0/d65/a00360.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for Yarn.Unity.Example.PlayerCharacter:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d7/ddb/a00361.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CheckForNearbyNPC} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b minPosition} = -5.3f\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b maxPosition} = 5.3f\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b moveSpeed} = 1.0f\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b interactionRadius} = 2.0f\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b movementFromButtons}{\f2  [get, set]}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OnDrawGizmosSelected} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Update} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v CheckForNearbyNPC\:Yarn::Unity::Example::PlayerCharacter}
{\xe \v Yarn::Unity::Example::PlayerCharacter\:CheckForNearbyNPC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Yarn.Unity.Example.PlayerCharacter.CheckForNearbyNPC ()}}
\par
{\bkmkstart AAAAAAABEG}
{\bkmkend AAAAAAABEG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 86         \{\par
87             // Find all DialogueParticipants, and filter them to\par
88             // those that have a Yarn start node and are in range; \par
89             // then start a conversation with the first one\par
90             var allParticipants = new List<NPC> (FindObjectsOfType<NPC> ());\par
91             var target = allParticipants.Find (delegate (NPC p) \{\par
92                 return string.IsNullOrEmpty (p.talkToNode) == false && // has a conversation node?\par
93                 (p.transform.position - this.transform.position)// is in range?\par
94                 .magnitude <= interactionRadius;\par
95             \});\par
96             if (target != null) \{\par
97                 // Kick off the dialogue at this node.\par
98                 FindObjectOfType<DialogueRunner> ().StartDialogue (target.talkToNode);\par
99             \}\par
100         \}\par
}
}
{\xe \v OnDrawGizmosSelected\:Yarn::Unity::Example::PlayerCharacter}
{\xe \v Yarn::Unity::Example::PlayerCharacter\:OnDrawGizmosSelected}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Yarn.Unity.Example.PlayerCharacter.OnDrawGizmosSelected (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABEH}
{\bkmkend AAAAAAABEH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 44                                     \{\par
45             Gizmos.color = Color.blue;\par
46 \par
47             // Flatten the sphere into a disk, which looks nicer in 2D games\par
48             Gizmos.matrix = Matrix4x4.TRS(transform.position, Quaternion.identity, new Vector3(1,1,0));\par
49 \par
50             // Need to draw at position zero because we set position in the line above\par
51             Gizmos.DrawWireSphere(Vector3.zero, interactionRadius);\par
52         \}\par
}
}
{\xe \v Update\:Yarn::Unity::Example::PlayerCharacter}
{\xe \v Yarn::Unity::Example::PlayerCharacter\:Update}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Yarn.Unity.Example.PlayerCharacter.Update (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABEI}
{\bkmkend AAAAAAABEI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 56                        \{\par
57 \par
58             // Remove all player control when we're in dialogue\par
59             if (FindObjectOfType<DialogueRunner>().isDialogueRunning == true) \{\par
60                 return;\par
61             \}\par
62 \par
63             // Move the player, clamping them to within the boundaries \par
64             // of the level.\par
65             var movement = Input.GetAxis("Horizontal");\par
66             movement += movementFromButtons;\par
67             movement *= (moveSpeed * Time.deltaTime);\par
68 \par
69 \par
70             var newPosition = transform.position;\par
71             newPosition.x += movement;\par
72             newPosition.x = Mathf.Clamp(newPosition.x, minPosition, maxPosition);\par
73 \par
74             transform.position = newPosition;\par
75 \par
76             // Detect if we want to start a conversation\par
77 \par
78             if (Input.GetKeyDown(KeyCode.Space)) \{\par
79                 CheckForNearbyNPC ();\par
80             \}\par
81         \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v interactionRadius\:Yarn::Unity::Example::PlayerCharacter}
{\xe \v Yarn::Unity::Example::PlayerCharacter\:interactionRadius}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float Yarn.Unity.Example.PlayerCharacter.interactionRadius = 2.0f}}
\par
{\bkmkstart AAAAAAABEJ}
{\bkmkend AAAAAAABEJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v maxPosition\:Yarn::Unity::Example::PlayerCharacter}
{\xe \v Yarn::Unity::Example::PlayerCharacter\:maxPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float Yarn.Unity.Example.PlayerCharacter.maxPosition = 5.3f}}
\par
{\bkmkstart AAAAAAABEK}
{\bkmkend AAAAAAABEK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v minPosition\:Yarn::Unity::Example::PlayerCharacter}
{\xe \v Yarn::Unity::Example::PlayerCharacter\:minPosition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float Yarn.Unity.Example.PlayerCharacter.minPosition = -5.3f}}
\par
{\bkmkstart AAAAAAABEL}
{\bkmkend AAAAAAABEL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v moveSpeed\:Yarn::Unity::Example::PlayerCharacter}
{\xe \v Yarn::Unity::Example::PlayerCharacter\:moveSpeed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float Yarn.Unity.Example.PlayerCharacter.moveSpeed = 1.0f}}
\par
{\bkmkstart AAAAAAABEM}
{\bkmkend AAAAAAABEM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v movementFromButtons\:Yarn::Unity::Example::PlayerCharacter}
{\xe \v Yarn::Unity::Example::PlayerCharacter\:movementFromButtons}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float Yarn.Unity.Example.PlayerCharacter.movementFromButtons{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAABEN}
{\bkmkend AAAAAAABEN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Unity/Assets/Yarn Spinner/Examples/Demo Scripts/{\b PlayerCharacter.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
NUnitLite.Tests.Program Class Reference\par \pard\plain 
{\tc\tcl2 \v NUnitLite.Tests.Program}
{\xe \v NUnitLite.Tests.Program}
{\bkmkstart AAAAAAAAGS}
{\bkmkend AAAAAAAAGS}
Collaboration diagram for NUnitLite.Tests.Program:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dc/d57/a00194.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b Main} (string[] args)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The main program executes the tests. Output may be routed to various locations, depending on the arguments passed. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Main\:NUnitLite::Tests::Program}
{\xe \v NUnitLite::Tests::Program\:Main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void NUnitLite.Tests.Program.Main (string[] {\i args}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAGT}
{\bkmkend AAAAAAAAGT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The main program executes the tests. Output may be routed to various locations, depending on the arguments passed. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Run with -help for a full list of arguments supported\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i args} \cell }{\cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 37         \{\par
38             new AutoRun().Execute(args);\par
39         \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
packages/NUnitLite.3.0.1/content/{\b Program.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Yarn.Program Class Reference\par \pard\plain 
{\tc\tcl2 \v Yarn.Program}
{\xe \v Yarn.Program}
{\bkmkstart AAAAAAAAJP}
{\bkmkend AAAAAAAAJP}
Collaboration diagram for Yarn.Program:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d7/ded/a00196.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b RegisterString} (string theString, string forNode)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b GetString} (string key)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b DumpCode} ({\b Library} l)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b GetTextForNode} (string nodeName)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Include} ({\b Program} otherProgram)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Dictionary< string, string > {\b strings} = new Dictionary<string, string> ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Dictionary< string, {\b Node} > {\b nodes} = new Dictionary<string, {\b Node}> ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b stringCount} = 0\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v DumpCode\:Yarn::Program}
{\xe \v Yarn::Program\:DumpCode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string Yarn.Program.DumpCode ({\b Library} {\i l})}}
\par
{\bkmkstart AAAAAAAAJQ}
{\bkmkend AAAAAAAAJQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 32                                           \{\par
33 \par
34             var sb = new System.Text.StringBuilder ();\par
35 \par
36             foreach (var entry in nodes) \{\par
37                 sb.AppendLine ("Node " + entry.Key + ":");\par
38 \par
39                 int instructionCount = 0;\par
40                 foreach (var instruction in entry.Value.instructions) \{\par
41                     string instructionText;\par
42 \par
43                     if (instruction.operation == ByteCode.Label) \{\par
44                         instructionText = instruction.ToString (this, l);\par
45                     \} else \{\par
46                         instructionText = "    " + instruction.ToString (this, l);\par
47                     \}\par
48 \par
49                     string preface;\par
50 \par
51                     if (instructionCount % 5 == 0 || instructionCount == entry.Value.instructions.Count - 1) \{\par
52                         preface = string.Format ("\{0,6\}   ", instructionCount);\par
53                     \} else \{\par
54                         preface = string.Format ("\{0,6\}   ", " ");\par
55                     \}\par
56 \par
57                     sb.AppendLine (preface + instructionText);\par
58 \par
59                     instructionCount++;\par
60                 \}\par
61 \par
62                 /* sb.AppendLine ();\par
63                 sb.AppendLine ("Label table:");\par
64 \par
65                 foreach (var label in entry.Value.labels) \{\par
66                     sb.AppendLine (string.Format ("\{0,12\} : \{1\}", label.Key, label.Value));\par
67                 \}*/\par
68 \par
69                 sb.AppendLine ();\par
70             \}\par
71 \par
72             sb.AppendLine ("String table:");\par
73 \par
74             int stringCount = 0;\par
75             foreach (var entry in strings) \{\par
76                 sb.AppendLine(string.Format("\{0, 4\}: \{1\}", stringCount, entry));\par
77                 stringCount++;\par
78             \}\par
79 \par
80 \par
81             return sb.ToString ();\par
82         \}\par
}
}
{\xe \v GetString\:Yarn::Program}
{\xe \v Yarn::Program\:GetString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string Yarn.Program.GetString (string {\i key})}}
\par
{\bkmkstart AAAAAAAAJR}
{\bkmkend AAAAAAAAJR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 26                                             \{\par
27             string value = null;\par
28             strings.TryGetValue (key, out value);\par
29             return value;\par
30         \}\par
}
}
{\xe \v GetTextForNode\:Yarn::Program}
{\xe \v Yarn::Program\:GetTextForNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string Yarn.Program.GetTextForNode (string {\i nodeName})}}
\par
{\bkmkstart AAAAAAAAJS}
{\bkmkend AAAAAAAAJS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 84                                                       \{\par
85             return this.GetString (nodes [nodeName].sourceTextStringID);\par
86         \}\par
}
}
{\xe \v Include\:Yarn::Program}
{\xe \v Yarn::Program\:Include}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Yarn.Program.Include ({\b Program} {\i otherProgram})}}
\par
{\bkmkstart AAAAAAAAJT}
{\bkmkend AAAAAAAAJT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 89         \{\par
90             foreach (var otherNodeName in otherProgram.nodes) \{\par
91 \par
92                 if (nodes.ContainsKey(otherNodeName.Key)) \{\par
93                     throw new InvalidOperationException (string.Format ("This program already contains a node named \{0\}", otherNodeName.Key));\par
94                 \}\par
95 \par
96                 nodes [otherNodeName.Key] = otherNodeName.Value;\par
97             \}\par
98 \par
99             foreach (var otherString in otherProgram.strings) \{\par
100 \par
101                 if (nodes.ContainsKey(otherString.Key)) \{\par
102                     throw new InvalidOperationException (string.Format ("This program already contains a string with key \{0\}", otherString.Key));\par
103                 \}\par
104 \par
105                 strings [otherString.Key] = otherString.Value;\par
106             \}\par
107         \}\par
}
}
{\xe \v RegisterString\:Yarn::Program}
{\xe \v Yarn::Program\:RegisterString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string Yarn.Program.RegisterString (string {\i theString}, string {\i forNode})}}
\par
{\bkmkstart AAAAAAAAJU}
{\bkmkend AAAAAAAAJU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 16                                                                        \{\par
17 \par
18             var key = string.Format ("\{0\}-\{1\}", forNode, stringCount++);\par
19 \par
20             // It's not in the list; append it\par
21             strings.Add(key, theString);\par
22 \par
23             return key;\par
24         \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v nodes\:Yarn::Program}
{\xe \v Yarn::Program\:nodes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Dictionary<string, {\b Node}> Yarn.Program.nodes = new Dictionary<string, {\b Node}> ()}}
\par
{\bkmkstart AAAAAAAAJV}
{\bkmkend AAAAAAAAJV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v stringCount\:Yarn::Program}
{\xe \v Yarn::Program\:stringCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Yarn.Program.stringCount = 0{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAJW}
{\bkmkend AAAAAAAAJW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v strings\:Yarn::Program}
{\xe \v Yarn::Program\:strings}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Dictionary<string,string> Yarn.Program.strings = new Dictionary<string, string> ()}}
\par
{\bkmkstart AAAAAAAAJX}
{\bkmkend AAAAAAAAJX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
YarnSpinner/{\b Compiler.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
YarnSpinner.Tests.Program Class Reference\par \pard\plain 
{\tc\tcl2 \v YarnSpinner.Tests.Program}
{\xe \v YarnSpinner.Tests.Program}
{\bkmkstart AAAAAAABET}
{\bkmkend AAAAAAABET}
Collaboration diagram for YarnSpinner.Tests.Program:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d2/d3e/a00366.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b Main} (string[] args)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Main\:YarnSpinner::Tests::Program}
{\xe \v YarnSpinner::Tests::Program\:Main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void YarnSpinner.Tests.Program.Main (string[] {\i args}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAABEU}
{\bkmkend AAAAAAABEU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 10         \{\par
11             \par
12             new AutoRun().Execute(args);\par
13         \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
YarnSpinnerTests/{\b Program.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Yarn.Dialogue.RunnerResult Class Reference\par \pard\plain 
{\tc\tcl2 \v Yarn.Dialogue.RunnerResult}
{\xe \v Yarn.Dialogue.RunnerResult}
{\bkmkstart AAAAAAAANC}
{\bkmkend AAAAAAAANC}
Inheritance diagram for Yarn.Dialogue.RunnerResult:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d5/ddf/a00224.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for Yarn.Dialogue.RunnerResult:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dc/d98/a00225.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
YarnSpinner/{\b Dialogue.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Yarn.Parser.ShortcutOption Class Reference\par \pard\plain 
{\tc\tcl2 \v Yarn.Parser.ShortcutOption}
{\xe \v Yarn.Parser.ShortcutOption}
{\bkmkstart AAAAAAAAUF}
{\bkmkend AAAAAAAAUF}
Inheritance diagram for Yarn.Parser.ShortcutOption:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d4/d66/a00289.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for Yarn.Parser.ShortcutOption:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "de/d25/a00290.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b ToString} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Package Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ShortcutOption} (int optionIndex, {\b ParseNode} {\b parent}, {\b Parser} p)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b PrintTree} (int indentLevel)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Node} {\b NodeParent} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b label}{\f2  [get, set]}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Expression} {\b condition}{\f2  [get, set]}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Node} {\b optionNode}{\f2  [get, set]}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v ShortcutOption\:Yarn::Parser::ShortcutOption}
{\xe \v Yarn::Parser::ShortcutOption\:ShortcutOption}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Yarn.Parser.ShortcutOption.ShortcutOption (int {\i optionIndex}, {\b ParseNode} {\i parent}, {\b Parser} {\i p}){\f2 [package]}}}
\par
{\bkmkstart AAAAAAAAUG}
{\bkmkend AAAAAAAAUG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 373                                                                                  : base(parent, p) \{\par
374                 p.ExpectSymbol(TokenType.ShortcutOption);\par
375                 label = p.ExpectSymbol(TokenType.Text).value as string;\par
376 \par
377                 // Parse the conditional ("<<if $foo>>") if it's there\par
378                 if (p.NextSymbolsAre(TokenType.BeginCommand, TokenType.If)) \{\par
379                     p.ExpectSymbol(TokenType.BeginCommand);\par
380                     p.ExpectSymbol(TokenType.If);\par
381                     condition = Expression.Parse(this, p);\par
382                     p.ExpectSymbol(TokenType.EndCommand);\par
383                 \}\par
384 \par
385                 // Parse the statements belonging to this option if it has any\par
386                 if (p.NextSymbolIs(TokenType.Indent)) \{\par
387                     p.ExpectSymbol(TokenType.Indent);\par
388                     optionNode = new Node(NodeParent().name + "." + optionIndex, this, p);\par
389                     p.ExpectSymbol(TokenType.Dedent);\par
390                 \}\par
391 \par
392             \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v NodeParent\:Yarn::Parser::ShortcutOption}
{\xe \v Yarn::Parser::ShortcutOption\:NodeParent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Node} Yarn.Parser.ParseNode.NodeParent (){\f2 [package]}, {\f2 [inherited]}}}
\par
{\bkmkstart AAAAAAAARA}
{\bkmkend AAAAAAAARA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 116                                        \{\par
117                 var node = this;\par
118 \par
119                 do \{\par
120                     if (node is Node) \{\par
121                         return node as Node;\par
122                     \}\par
123                     node = node.parent;\par
124                 \} while (node \par
125                     != null);                   \par
126 \par
127                 return null;\par
128             \}\par
}
}
{\xe \v PrintTree\:Yarn::Parser::ShortcutOption}
{\xe \v Yarn::Parser::ShortcutOption\:PrintTree}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string Yarn.Parser.ShortcutOption.PrintTree (int {\i indentLevel}){\f2 [package]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAUB}
{\bkmkend AAAAAAAAUB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Yarn.Parser.ParseNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAARC \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 395             \{\par
396                 var sb = new StringBuilder ();\par
397                 sb.Append (Tab (indentLevel, "Option \\"" +label + "\\""));\par
398 \par
399                 if (condition != null) \{\par
400                     sb.Append (Tab (indentLevel + 1, "(when:"));\par
401                     sb.Append (condition.PrintTree(indentLevel+2));\par
402                     sb.Append (Tab (indentLevel + 1, "),"));\par
403                 \}\par
404 \par
405                 if (optionNode != null) \{\par
406                     sb.Append (Tab (indentLevel, "\{"));\par
407                     sb.Append (optionNode.PrintTree (indentLevel + 1));\par
408                     sb.Append (Tab (indentLevel, "\}"));\par
409                 \}\par
410 \par
411                 return sb.ToString ();\par
412             \}\par
}
}
{\xe \v ToString\:Yarn::Parser::ShortcutOption}
{\xe \v Yarn::Parser::ShortcutOption\:ToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string Yarn.Parser.ParseNode.ToString (){\f2 [inherited]}}}
\par
{\bkmkstart AAAAAAAARD}
{\bkmkend AAAAAAAARD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 111             \{\par
112                 return this.GetType ().Name;\par
113             \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v condition\:Yarn::Parser::ShortcutOption}
{\xe \v Yarn::Parser::ShortcutOption\:condition}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Expression} Yarn.Parser.ShortcutOption.condition{\f2 [get]}, {\f2 [set]}, {\f2 [package]}}}
\par
{\bkmkstart AAAAAAAAUH}
{\bkmkend AAAAAAAAUH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v label\:Yarn::Parser::ShortcutOption}
{\xe \v Yarn::Parser::ShortcutOption\:label}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string Yarn.Parser.ShortcutOption.label{\f2 [get]}, {\f2 [set]}, {\f2 [package]}}}
\par
{\bkmkstart AAAAAAAAUI}
{\bkmkend AAAAAAAAUI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v optionNode\:Yarn::Parser::ShortcutOption}
{\xe \v Yarn::Parser::ShortcutOption\:optionNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Node} Yarn.Parser.ShortcutOption.optionNode{\f2 [get]}, {\f2 [set]}, {\f2 [package]}}}
\par
{\bkmkstart AAAAAAAAUJ}
{\bkmkend AAAAAAAAUJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
YarnSpinner/{\b Parser.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Yarn.Parser.ShortcutOptionGroup Class Reference\par \pard\plain 
{\tc\tcl2 \v Yarn.Parser.ShortcutOptionGroup}
{\xe \v Yarn.Parser.ShortcutOptionGroup}
{\bkmkstart AAAAAAAAUK}
{\bkmkend AAAAAAAAUK}
Inheritance diagram for Yarn.Parser.ShortcutOptionGroup:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d8/d0a/a00292.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for Yarn.Parser.ShortcutOptionGroup:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/d82/a00293.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b ToString} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Package Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ShortcutOptionGroup} ({\b ParseNode} {\b parent}, {\b Parser} p)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b PrintTree} (int indentLevel)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Node} {\b NodeParent} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Package Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b CanParse} ({\b Parser} p)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IEnumerable< {\b ShortcutOption} > {\b options}{\f2  [get]}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
List< {\b ShortcutOption} > {\b _options} = new List<{\b ShortcutOption}>()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v ShortcutOptionGroup\:Yarn::Parser::ShortcutOptionGroup}
{\xe \v Yarn::Parser::ShortcutOptionGroup\:ShortcutOptionGroup}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Yarn.Parser.ShortcutOptionGroup.ShortcutOptionGroup ({\b ParseNode} {\i parent}, {\b Parser} {\i p}){\f2 [package]}}}
\par
{\bkmkstart AAAAAAAAUL}
{\bkmkend AAAAAAAAUL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 339                                                                      : base(parent, p) \{\par
340 \par
341                 // keep parsing options until we can't, but expect at least one (otherwise it's\par
342                 // not actually a list of options)\par
343                 int shortcutIndex = 1; // give each option a number so it can name itself\par
344                 do \{                        \par
345                     _options.Add(new ShortcutOption(shortcutIndex++, this, p));\par
346                 \} while (p.NextSymbolIs(TokenType.ShortcutOption));\par
347 \par
348             \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v CanParse\:Yarn::Parser::ShortcutOptionGroup}
{\xe \v Yarn::Parser::ShortcutOptionGroup\:CanParse}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static bool Yarn.Parser.ShortcutOptionGroup.CanParse ({\b Parser} {\i p}){\f2 [static]}, {\f2 [package]}}}
\par
{\bkmkstart AAAAAAAAUM}
{\bkmkend AAAAAAAAUM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 330             \{\par
331                 return p.NextSymbolIs (TokenType.ShortcutOption);\par
332             \}\par
}
}
{\xe \v NodeParent\:Yarn::Parser::ShortcutOptionGroup}
{\xe \v Yarn::Parser::ShortcutOptionGroup\:NodeParent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Node} Yarn.Parser.ParseNode.NodeParent (){\f2 [package]}, {\f2 [inherited]}}}
\par
{\bkmkstart AAAAAAAARA}
{\bkmkend AAAAAAAARA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 116                                        \{\par
117                 var node = this;\par
118 \par
119                 do \{\par
120                     if (node is Node) \{\par
121                         return node as Node;\par
122                     \}\par
123                     node = node.parent;\par
124                 \} while (node \par
125                     != null);                   \par
126 \par
127                 return null;\par
128             \}\par
}
}
{\xe \v PrintTree\:Yarn::Parser::ShortcutOptionGroup}
{\xe \v Yarn::Parser::ShortcutOptionGroup\:PrintTree}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string Yarn.Parser.ShortcutOptionGroup.PrintTree (int {\i indentLevel}){\f2 [package]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAUC}
{\bkmkend AAAAAAAAUC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Yarn.Parser.ParseNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAARC \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 351             \{\par
352                 var sb = new StringBuilder ();\par
353                 sb.Append (Tab (indentLevel, "Shortcut option group \{"));\par
354 \par
355                 foreach (var option in options) \{\par
356                     sb.Append (option.PrintTree (indentLevel + 1));\par
357                 \}\par
358                 sb.Append (Tab (indentLevel, "\}"));\par
359 \par
360                 return sb.ToString ();\par
361             \}\par
}
}
{\xe \v ToString\:Yarn::Parser::ShortcutOptionGroup}
{\xe \v Yarn::Parser::ShortcutOptionGroup\:ToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string Yarn.Parser.ParseNode.ToString (){\f2 [inherited]}}}
\par
{\bkmkstart AAAAAAAARD}
{\bkmkend AAAAAAAARD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 111             \{\par
112                 return this.GetType ().Name;\par
113             \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v _options\:Yarn::Parser::ShortcutOptionGroup}
{\xe \v Yarn::Parser::ShortcutOptionGroup\:_options}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
List<{\b ShortcutOption}> Yarn.Parser.ShortcutOptionGroup._options = new List<{\b ShortcutOption}>(){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAUN}
{\bkmkend AAAAAAAAUN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v options\:Yarn::Parser::ShortcutOptionGroup}
{\xe \v Yarn::Parser::ShortcutOptionGroup\:options}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IEnumerable<{\b ShortcutOption}> Yarn.Parser.ShortcutOptionGroup.options{\f2 [get]}, {\f2 [package]}}}
\par
{\bkmkstart AAAAAAAAUO}
{\bkmkend AAAAAAAAUO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
YarnSpinner/{\b Parser.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Yarn.Unity.Example.SpriteSwitcher Class Reference\par \pard\plain 
{\tc\tcl2 \v Yarn.Unity.Example.SpriteSwitcher}
{\xe \v Yarn.Unity.Example.SpriteSwitcher}
{\bkmkstart AAAAAAABEO}
{\bkmkend AAAAAAABEO}
Inheritance diagram for Yarn.Unity.Example.SpriteSwitcher:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d9/d9b/a00363.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for Yarn.Unity.Example.SpriteSwitcher:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dc/d59/a00364.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b SpriteInfo}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b UseSprite} (string spriteName)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SpriteInfo}[] {\b sprites}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Class Documentation\par
\pard\plain 
{\xe \v Yarn::Unity::Example::SpriteSwitcher::SpriteInfo}
{\bkmkstart AAAAAAAABC}
{\bkmkend AAAAAAAABC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
struct Yarn::Unity::Example::SpriteSwitcher::SpriteInfo\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
Collaboration diagram for Yarn.Unity.Example.SpriteSwitcher.SpriteInfo:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d5/dcb/a00170.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Class Members:\par}
\pard\plain \s60\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr string{\bkmkstart AAAAAAAABD}
{\bkmkend AAAAAAAABD}
\cell }{name\cell }{\cell }{\row }
{\qr Sprite{\bkmkstart AAAAAAAABE}
{\bkmkend AAAAAAAABE}
\cell }{sprite\cell }{\cell }{\row }
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v UseSprite\:Yarn::Unity::Example::SpriteSwitcher}
{\xe \v Yarn::Unity::Example::SpriteSwitcher\:UseSprite}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Yarn.Unity.Example.SpriteSwitcher.UseSprite (string {\i spriteName})}}
\par
{\bkmkstart AAAAAAABEP}
{\bkmkend AAAAAAABEP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 44                                                  \{\par
45 \par
46             Sprite s = null;\par
47             foreach(var info in sprites) \{\par
48                 if (info.name == spriteName) \{\par
49                     s = info.sprite;\par
50                     break;\par
51                 \}\par
52             \}\par
53             if (s == null) \{\par
54                 Debug.LogErrorFormat("Can't find sprite named \{0\}!", spriteName);\par
55                 return;\par
56             \}\par
57 \par
58             GetComponent<SpriteRenderer>().sprite = s;\par
59         \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v sprites\:Yarn::Unity::Example::SpriteSwitcher}
{\xe \v Yarn::Unity::Example::SpriteSwitcher\:sprites}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SpriteInfo} [] Yarn.Unity.Example.SpriteSwitcher.sprites}}
\par
{\bkmkstart AAAAAAABEQ}
{\bkmkend AAAAAAABEQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Unity/Assets/Yarn Spinner/Examples/Demo Scripts/{\b SpriteSwitcher.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Yarn.Dialogue.StandardLibrary Class Reference\par \pard\plain 
{\tc\tcl2 \v Yarn.Dialogue.StandardLibrary}
{\xe \v Yarn.Dialogue.StandardLibrary}
{\bkmkstart AAAAAAAAND}
{\bkmkend AAAAAAAAND}
Inheritance diagram for Yarn.Dialogue.StandardLibrary:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d9/d01/a00227.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for Yarn.Dialogue.StandardLibrary:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "de/dc2/a00228.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b StandardLibrary} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FunctionInfo} {\b GetFunction} (string name)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ImportLibrary} ({\b Library} otherLibrary)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b RegisterFunction} ({\b FunctionInfo} function)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b RegisterFunction} (string name, int parameterCount, {\b ReturningFunction} implementation)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b RegisterFunction} (string name, int parameterCount, {\b Function} implementation)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b FunctionExists} (string name)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b DeregisterFunction} (string name)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v StandardLibrary\:Yarn::Dialogue::StandardLibrary}
{\xe \v Yarn::Dialogue::StandardLibrary\:StandardLibrary}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Yarn.Dialogue.StandardLibrary.StandardLibrary ()}}
\par
{\bkmkstart AAAAAAAANE}
{\bkmkend AAAAAAAANE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 363                                      \{\par
364 \par
365                 #region Operators\par
366 \par
367                 this.RegisterFunction(TokenType.Add.ToString(), 2, delegate(Value[] parameters) \{\par
368                     return parameters[0] + parameters[1];\par
369                 \});\par
370 \par
371                 this.RegisterFunction(TokenType.Minus.ToString(), 2, delegate(Value[] parameters) \{\par
372                     return parameters[0] - parameters[1];\par
373                 \});\par
374 \par
375                 this.RegisterFunction(TokenType.UnaryMinus.ToString(), 1, delegate(Value[] parameters) \{\par
376                     return -parameters[0];\par
377                 \});\par
378 \par
379                 this.RegisterFunction(TokenType.Divide.ToString(), 2, delegate(Value[] parameters) \{\par
380                     return parameters[0] / parameters[1];\par
381                 \});\par
382 \par
383                 this.RegisterFunction(TokenType.Multiply.ToString(), 2, delegate(Value[] parameters) \{\par
384                     return parameters[0] * parameters[1];\par
385                 \});\par
386 \par
387                 this.RegisterFunction(TokenType.EqualTo.ToString(), 2, delegate(Value[] parameters) \{\par
388                     return parameters[0].Equals( parameters[1] );\par
389                 \});\par
390 \par
391                 this.RegisterFunction(TokenType.NotEqualTo.ToString(), 2, delegate(Value[] parameters) \{\par
392 \par
393                     // Return the logical negative of the == operator's result\par
394                     var equalTo = this.GetFunction(TokenType.EqualTo.ToString());\par
395 \par
396                     return !equalTo.Invoke(parameters).AsBool;\par
397                 \});\par
398 \par
399                 this.RegisterFunction(TokenType.GreaterThan.ToString(), 2, delegate(Value[] parameters) \{\par
400                     return parameters[0] > parameters[1];\par
401                 \});\par
402 \par
403                 this.RegisterFunction(TokenType.GreaterThanOrEqualTo.ToString(), 2, delegate(Value[] parameters) \{\par
404                     return parameters[0] >= parameters[1];\par
405                 \});\par
406 \par
407                 this.RegisterFunction(TokenType.LessThan.ToString(), 2, delegate(Value[] parameters) \{\par
408                     return parameters[0] < parameters[1];\par
409                 \});\par
410 \par
411                 this.RegisterFunction(TokenType.LessThanOrEqualTo.ToString(), 2, delegate(Value[] parameters) \{\par
412                     return parameters[0] <= parameters[1];\par
413                 \});\par
414 \par
415                 this.RegisterFunction(TokenType.And.ToString(), 2, delegate(Value[] parameters) \{\par
416                     return parameters[0].AsBool && parameters[1].AsBool;\par
417                 \});\par
418 \par
419                 this.RegisterFunction(TokenType.Or.ToString(), 2, delegate(Value[] parameters) \{\par
420                     return parameters[0].AsBool || parameters[1].AsBool;\par
421                 \});\par
422 \par
423                 this.RegisterFunction(TokenType.Xor.ToString(), 2, delegate(Value[] parameters) \{\par
424                     return parameters[0].AsBool ^ parameters[1].AsBool;\par
425                 \});\par
426 \par
427                 this.RegisterFunction(TokenType.Not.ToString(), 1, delegate(Value[] parameters) \{\par
428                     return !parameters[0].AsBool;\par
429                 \});\par
430 \par
431                 #endregion Operators\par
432             \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v DeregisterFunction\:Yarn::Dialogue::StandardLibrary}
{\xe \v Yarn::Dialogue::StandardLibrary\:DeregisterFunction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Yarn.Library.DeregisterFunction (string {\i name}){\f2 [inherited]}}}
\par
{\bkmkstart AAAAAAAANF}
{\bkmkend AAAAAAAANF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 125                                                     \{\par
126             if (functions.ContainsKey(name))\par
127                 functions.Remove (name);\par
128         \}\par
}
}
{\xe \v FunctionExists\:Yarn::Dialogue::StandardLibrary}
{\xe \v Yarn::Dialogue::StandardLibrary\:FunctionExists}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Yarn.Library.FunctionExists (string {\i name}){\f2 [inherited]}}}
\par
{\bkmkstart AAAAAAAANG}
{\bkmkend AAAAAAAANG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 121                                                 \{\par
122             return functions.ContainsKey (name);\par
123         \}\par
}
}
{\xe \v GetFunction\:Yarn::Dialogue::StandardLibrary}
{\xe \v Yarn::Dialogue::StandardLibrary\:GetFunction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FunctionInfo} Yarn.Library.GetFunction (string {\i name}){\f2 [inherited]}}}
\par
{\bkmkstart AAAAAAAANH}
{\bkmkend AAAAAAAANH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 90                                                      \{\par
91             try \{\par
92                 return functions [name];\par
93             \} catch (KeyNotFoundException) \{\par
94                 throw new InvalidOperationException (name + " is not a valid function");\par
95             \}\par
96         \}\par
}
}
{\xe \v ImportLibrary\:Yarn::Dialogue::StandardLibrary}
{\xe \v Yarn::Dialogue::StandardLibrary\:ImportLibrary}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Yarn.Library.ImportLibrary ({\b Library} {\i otherLibrary}){\f2 [inherited]}}}
\par
{\bkmkstart AAAAAAAANI}
{\bkmkend AAAAAAAANI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 101                                                         \{\par
102             foreach (var entry in otherLibrary.functions) \{\par
103                 functions [entry.Key] = entry.Value;\par
104             \}\par
105         \}\par
}
}
{\xe \v RegisterFunction\:Yarn::Dialogue::StandardLibrary}
{\xe \v Yarn::Dialogue::StandardLibrary\:RegisterFunction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Yarn.Library.RegisterFunction ({\b FunctionInfo} {\i function}){\f2 [inherited]}}}
\par
{\bkmkstart AAAAAAAANJ}
{\bkmkend AAAAAAAANJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 107                                                             \{\par
108             functions [function.name] = function;\par
109         \}\par
}
}
{\xe \v RegisterFunction\:Yarn::Dialogue::StandardLibrary}
{\xe \v Yarn::Dialogue::StandardLibrary\:RegisterFunction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Yarn.Library.RegisterFunction (string {\i name}, int {\i parameterCount}, {\b ReturningFunction} {\i implementation}){\f2 [inherited]}}}
\par
{\bkmkstart AAAAAAAANK}
{\bkmkend AAAAAAAANK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 111                                                                                                         \{\par
112             var info = new FunctionInfo (name, parameterCount, implementation);\par
113             RegisterFunction (info);\par
114         \}\par
}
}
{\xe \v RegisterFunction\:Yarn::Dialogue::StandardLibrary}
{\xe \v Yarn::Dialogue::StandardLibrary\:RegisterFunction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Yarn.Library.RegisterFunction (string {\i name}, int {\i parameterCount}, {\b Function} {\i implementation}){\f2 [inherited]}}}
\par
{\bkmkstart AAAAAAAANL}
{\bkmkend AAAAAAAANL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 116                                                                                                \{\par
117             var info = new FunctionInfo (name, parameterCount, implementation);\par
118             RegisterFunction (info);\par
119         \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
YarnSpinner/{\b Dialogue.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Yarn.VirtualMachine.State Class Reference\par \pard\plain 
{\tc\tcl2 \v Yarn.VirtualMachine.State}
{\xe \v Yarn.VirtualMachine.State}
{\bkmkstart AAAAAAAAYL}
{\bkmkend AAAAAAAAYL}
Collaboration diagram for Yarn.VirtualMachine.State:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d1/d5d/a00311.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b PushValue} (object o)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Value} {\b PopValue} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Value} {\b PeekValue} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ClearStack} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b currentNodeName}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b programCounter} = 0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
List< KeyValuePair< string, \par
string > > {\b currentOptions} = new List<KeyValuePair<string, string>>()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Stack< {\b Value} > {\b stack} = new Stack<{\b Value}>()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v ClearStack\:Yarn::VirtualMachine::State}
{\xe \v Yarn::VirtualMachine::State\:ClearStack}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Yarn.VirtualMachine.State.ClearStack ()}}
\par
{\bkmkstart AAAAAAAAYM}
{\bkmkend AAAAAAAAYM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 42                                      \{\par
43                 stack.Clear ();\par
44             \}\par
}
}
{\xe \v PeekValue\:Yarn::VirtualMachine::State}
{\xe \v Yarn::VirtualMachine::State\:PeekValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Value} Yarn.VirtualMachine.State.PeekValue ()}}
\par
{\bkmkstart AAAAAAAAYN}
{\bkmkend AAAAAAAAYN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 38                                      \{\par
39                 return stack.Peek ();\par
40             \}\par
}
}
{\xe \v PopValue\:Yarn::VirtualMachine::State}
{\xe \v Yarn::VirtualMachine::State\:PopValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Value} Yarn.VirtualMachine.State.PopValue ()}}
\par
{\bkmkstart AAAAAAAAYO}
{\bkmkend AAAAAAAAYO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 34                                     \{\par
35                 return stack.Pop ();\par
36             \}\par
}
}
{\xe \v PushValue\:Yarn::VirtualMachine::State}
{\xe \v Yarn::VirtualMachine::State\:PushValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Yarn.VirtualMachine.State.PushValue (object {\i o})}}
\par
{\bkmkstart AAAAAAAAYP}
{\bkmkend AAAAAAAAYP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 26                                             \{\par
27                 if( o is Value ) \{\par
28                     stack.Push(o as Value);\par
29                 \} else \{\par
30                     stack.Push (new Value(o));\par
31                 \}\par
32             \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v currentNodeName\:Yarn::VirtualMachine::State}
{\xe \v Yarn::VirtualMachine::State\:currentNodeName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string Yarn.VirtualMachine.State.currentNodeName}}
\par
{\bkmkstart AAAAAAAAYQ}
{\bkmkend AAAAAAAAYQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v currentOptions\:Yarn::VirtualMachine::State}
{\xe \v Yarn::VirtualMachine::State\:currentOptions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
List<KeyValuePair<string,string> > Yarn.VirtualMachine.State.currentOptions = new List<KeyValuePair<string, string>>()}}
\par
{\bkmkstart AAAAAAAAYR}
{\bkmkend AAAAAAAAYR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v programCounter\:Yarn::VirtualMachine::State}
{\xe \v Yarn::VirtualMachine::State\:programCounter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Yarn.VirtualMachine.State.programCounter = 0}}
\par
{\bkmkstart AAAAAAAAYS}
{\bkmkend AAAAAAAAYS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v stack\:Yarn::VirtualMachine::State}
{\xe \v Yarn::VirtualMachine::State\:stack}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Stack<{\b Value}> Yarn.VirtualMachine.State.stack = new Stack<{\b Value}>(){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAYT}
{\bkmkend AAAAAAAAYT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
YarnSpinner/{\b VirtualMachine.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Yarn.Parser.Statement Class Reference\par \pard\plain 
{\tc\tcl2 \v Yarn.Parser.Statement}
{\xe \v Yarn.Parser.Statement}
{\bkmkstart AAAAAAAAUP}
{\bkmkend AAAAAAAAUP}
Inheritance diagram for Yarn.Parser.Statement:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d9/d5e/a00295.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for Yarn.Parser.Statement:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "db/d7b/a00296.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b ToString} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Package Types\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Type} \{ {\b Type.CustomCommand}, 
{\b Type.ShortcutOptionGroup}, 
{\b Type.Block}, 
{\b Type.IfStatement}, 
{\b Type.OptionStatement}, 
{\b Type.AssignmentStatement}, 
{\b Type.Line}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Package Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Statement} ({\b ParseNode} {\b parent}, {\b Parser} p)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b PrintTree} (int indentLevel)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Node} {\b NodeParent} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Statement.Type} {\b type}{\f2  [get, set]}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Block} {\b block}{\f2  [get, set]}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b IfStatement} {\b ifStatement}{\f2  [get, set]}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b OptionStatement} {\b optionStatement}{\f2  [get, set]}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b AssignmentStatement} {\b assignmentStatement}{\f2  [get, set]}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CustomCommand} {\b customCommand}{\f2  [get, set]}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b line}{\f2  [get, set]}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ShortcutOptionGroup} {\b shortcutOptionGroup}{\f2  [get, set]}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Enumeration Documentation\par
\pard\plain 
{\xe \v Type\:Yarn::Parser::Statement}
{\xe \v Yarn::Parser::Statement\:Type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b Yarn.Parser.Statement.Type}{\f2 [package]}}}
\par
{\bkmkstart AAAAAAAAUQ}
{\bkmkend AAAAAAAAUQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v CustomCommand\:Yarn::Parser::Statement}
{\xe \v Yarn::Parser::Statement\:CustomCommand}
{\b {\i CustomCommand{\bkmkstart AAAAAAAAUR}
{\bkmkend AAAAAAAAUR}
}}  \par
{\xe \v ShortcutOptionGroup\:Yarn::Parser::Statement}
{\xe \v Yarn::Parser::Statement\:ShortcutOptionGroup}
{\b {\i ShortcutOptionGroup{\bkmkstart AAAAAAAAUS}
{\bkmkend AAAAAAAAUS}
}}  \par
{\xe \v Block\:Yarn::Parser::Statement}
{\xe \v Yarn::Parser::Statement\:Block}
{\b {\i Block{\bkmkstart AAAAAAAAUT}
{\bkmkend AAAAAAAAUT}
}}  \par
{\xe \v IfStatement\:Yarn::Parser::Statement}
{\xe \v Yarn::Parser::Statement\:IfStatement}
{\b {\i IfStatement{\bkmkstart AAAAAAAAUU}
{\bkmkend AAAAAAAAUU}
}}  \par
{\xe \v OptionStatement\:Yarn::Parser::Statement}
{\xe \v Yarn::Parser::Statement\:OptionStatement}
{\b {\i OptionStatement{\bkmkstart AAAAAAAAUV}
{\bkmkend AAAAAAAAUV}
}}  \par
{\xe \v AssignmentStatement\:Yarn::Parser::Statement}
{\xe \v Yarn::Parser::Statement\:AssignmentStatement}
{\b {\i AssignmentStatement{\bkmkstart AAAAAAAAUW}
{\bkmkend AAAAAAAAUW}
}}  \par
{\xe \v Line\:Yarn::Parser::Statement}
{\xe \v Yarn::Parser::Statement\:Line}
{\b {\i Line{\bkmkstart AAAAAAAAUX}
{\bkmkend AAAAAAAAUX}
}}  \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 178                                \{\par
179                 CustomCommand,\par
180                 ShortcutOptionGroup,\par
181                 Block,\par
182                 IfStatement,\par
183                 OptionStatement,\par
184                 AssignmentStatement,\par
185                 Line\par
186             \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Statement\:Yarn::Parser::Statement}
{\xe \v Yarn::Parser::Statement\:Statement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Yarn.Parser.Statement.Statement ({\b ParseNode} {\i parent}, {\b Parser} {\i p}){\f2 [package]}}}
\par
{\bkmkstart AAAAAAAAUY}
{\bkmkend AAAAAAAAUY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 200                                                            : base(parent, p) \{\par
201 \par
202                 if (Block.CanParse(p)) \{\par
203                     type = Type.Block;\par
204                     block = new Block(this, p);\par
205                     return;\par
206                 \} else if (IfStatement.CanParse(p)) \{\par
207                     type = Type.IfStatement;\par
208                     ifStatement = new IfStatement(this, p);\par
209                     return;\par
210                 \} else if (OptionStatement.CanParse(p)) \{\par
211                     type = Type.OptionStatement;\par
212                     optionStatement = new OptionStatement(this, p);\par
213                     return;\par
214                 \} else if (AssignmentStatement.CanParse(p)) \{\par
215                     type = Type.AssignmentStatement;\par
216                     assignmentStatement = new AssignmentStatement(this, p);\par
217                     return;\par
218                 \} else if (ShortcutOptionGroup.CanParse(p)) \{\par
219                     type = Type.ShortcutOptionGroup;\par
220                     shortcutOptionGroup = new ShortcutOptionGroup(this, p);\par
221                     return;\par
222                 \} else if (CustomCommand.CanParse(p)) \{\par
223                     type = Type.CustomCommand;\par
224                     customCommand = new CustomCommand(this, p);\par
225                     return;\par
226                 \} else if (p.NextSymbolIs(TokenType.Text)) \{\par
227                     line = p.ExpectSymbol(TokenType.Text).value as string;\par
228                     type = Type.Line;\par
229                 \} else \{\par
230                     throw ParseException.Make(p.tokens.Peek(), "Expected a statement here but got " + p.tokens.Peek().ToString() +" instead (was there an unbalanced if statement earlier?)");\par
231                 \}\par
232             \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v NodeParent\:Yarn::Parser::Statement}
{\xe \v Yarn::Parser::Statement\:NodeParent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Node} Yarn.Parser.ParseNode.NodeParent (){\f2 [package]}, {\f2 [inherited]}}}
\par
{\bkmkstart AAAAAAAARA}
{\bkmkend AAAAAAAARA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 116                                        \{\par
117                 var node = this;\par
118 \par
119                 do \{\par
120                     if (node is Node) \{\par
121                         return node as Node;\par
122                     \}\par
123                     node = node.parent;\par
124                 \} while (node \par
125                     != null);                   \par
126 \par
127                 return null;\par
128             \}\par
}
}
{\xe \v PrintTree\:Yarn::Parser::Statement}
{\xe \v Yarn::Parser::Statement\:PrintTree}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string Yarn.Parser.Statement.PrintTree (int {\i indentLevel}){\f2 [package]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAUD}
{\bkmkend AAAAAAAAUD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Yarn.Parser.ParseNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAARC \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 235             \{\par
236                 switch (type) \{\par
237                 case Type.Block:\par
238                     return block.PrintTree (indentLevel);\par
239                 case Type.IfStatement:\par
240                     return ifStatement.PrintTree (indentLevel);\par
241                 case Type.OptionStatement:\par
242                     return optionStatement.PrintTree (indentLevel);\par
243                 case Type.AssignmentStatement:\par
244                     return assignmentStatement.PrintTree (indentLevel);\par
245                 case Type.ShortcutOptionGroup:\par
246                     return shortcutOptionGroup.PrintTree (indentLevel);\par
247                 case Type.CustomCommand:\par
248                     return customCommand.PrintTree (indentLevel);\par
249                 case Type.Line:\par
250                     return Tab (indentLevel, "Line: "+ line);\par
251                 \}\par
252 \par
253                 throw new ArgumentNullException ();\par
254             \}\par
}
}
{\xe \v ToString\:Yarn::Parser::Statement}
{\xe \v Yarn::Parser::Statement\:ToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string Yarn.Parser.ParseNode.ToString (){\f2 [inherited]}}}
\par
{\bkmkstart AAAAAAAARD}
{\bkmkend AAAAAAAARD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 111             \{\par
112                 return this.GetType ().Name;\par
113             \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v assignmentStatement\:Yarn::Parser::Statement}
{\xe \v Yarn::Parser::Statement\:assignmentStatement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b AssignmentStatement} Yarn.Parser.Statement.assignmentStatement{\f2 [get]}, {\f2 [set]}, {\f2 [package]}}}
\par
{\bkmkstart AAAAAAAAUZ}
{\bkmkend AAAAAAAAUZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v block\:Yarn::Parser::Statement}
{\xe \v Yarn::Parser::Statement\:block}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Block} Yarn.Parser.Statement.block{\f2 [get]}, {\f2 [set]}, {\f2 [package]}}}
\par
{\bkmkstart AAAAAAAAVA}
{\bkmkend AAAAAAAAVA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v customCommand\:Yarn::Parser::Statement}
{\xe \v Yarn::Parser::Statement\:customCommand}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CustomCommand} Yarn.Parser.Statement.customCommand{\f2 [get]}, {\f2 [set]}, {\f2 [package]}}}
\par
{\bkmkstart AAAAAAAAVB}
{\bkmkend AAAAAAAAVB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ifStatement\:Yarn::Parser::Statement}
{\xe \v Yarn::Parser::Statement\:ifStatement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b IfStatement} Yarn.Parser.Statement.ifStatement{\f2 [get]}, {\f2 [set]}, {\f2 [package]}}}
\par
{\bkmkstart AAAAAAAAVC}
{\bkmkend AAAAAAAAVC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v line\:Yarn::Parser::Statement}
{\xe \v Yarn::Parser::Statement\:line}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string Yarn.Parser.Statement.line{\f2 [get]}, {\f2 [set]}, {\f2 [package]}}}
\par
{\bkmkstart AAAAAAAAVD}
{\bkmkend AAAAAAAAVD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v optionStatement\:Yarn::Parser::Statement}
{\xe \v Yarn::Parser::Statement\:optionStatement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b OptionStatement} Yarn.Parser.Statement.optionStatement{\f2 [get]}, {\f2 [set]}, {\f2 [package]}}}
\par
{\bkmkstart AAAAAAAAVE}
{\bkmkend AAAAAAAAVE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v shortcutOptionGroup\:Yarn::Parser::Statement}
{\xe \v Yarn::Parser::Statement\:shortcutOptionGroup}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ShortcutOptionGroup} Yarn.Parser.Statement.shortcutOptionGroup{\f2 [get]}, {\f2 [set]}, {\f2 [package]}}}
\par
{\bkmkstart AAAAAAAAVF}
{\bkmkend AAAAAAAAVF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v type\:Yarn::Parser::Statement}
{\xe \v Yarn::Parser::Statement\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Statement.Type} Yarn.Parser.Statement.type{\f2 [get]}, {\f2 [set]}, {\f2 [package]}}}
\par
{\bkmkstart AAAAAAAAVG}
{\bkmkend AAAAAAAAVG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
YarnSpinner/{\b Parser.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
YarnSpinner.Tests.Test Class Reference\par \pard\plain 
{\tc\tcl2 \v YarnSpinner.Tests.Test}
{\xe \v YarnSpinner.Tests.Test}
{\bkmkstart AAAAAAABEV}
{\bkmkend AAAAAAABEV}
Collaboration diagram for YarnSpinner.Tests.Test:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d8/d21/a00368.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Init} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b TestNodeExists} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b TestIndentation} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b TestVariableStorage} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b TestOptions} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b TestParsingSmileys} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b TestDumpingCode} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b TestExampleScript} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b TestCommands} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b TestMissingNode} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b TestTypes} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b TestMergingNodes} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b TestGettingCurrentNodeName} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b TestSaveAndLoad} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b TestGettingRawSource} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b TestEndOfNotesWithOptionsNotAdded} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b TestAnalysis} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b RunStandardTestcase} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b HandleResult} ({\b Yarn.Dialogue.RunnerResult} result)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b nextExpectedLine} = null\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b nextExpectedOptionCount} = -1\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b nextOptionToSelect} = -1\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b nextExpectedCommand} = null\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b VariableStorage} {\b storage} = new {\b MemoryVariableStore}()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Dialogue} {\b dialogue}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b errorsCauseFailures} = true\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v HandleResult\:YarnSpinner::Tests::Test}
{\xe \v YarnSpinner::Tests::Test\:HandleResult}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void YarnSpinner.Tests.Test.HandleResult ({\b Yarn.Dialogue.RunnerResult} {\i result}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABEW}
{\bkmkend AAAAAAABEW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 302                                                                      \{\par
303 \par
304             Console.WriteLine (result);\par
305 \par
306             if (result is Yarn.Dialogue.LineResult) \{\par
307                 var text = (result as Yarn.Dialogue.LineResult).line.text;\par
308 \par
309                 if (nextExpectedLine != null) \{\par
310                     Assert.AreEqual (text, nextExpectedLine);\par
311                 \}\par
312             \} else if (result is Yarn.Dialogue.OptionSetResult) \{\par
313                 var optionCount = (result as Yarn.Dialogue.OptionSetResult).options.options.Count;\par
314                 var resultDelegate = (result as Yarn.Dialogue.OptionSetResult).setSelectedOptionDelegate;\par
315 \par
316                 if (nextExpectedOptionCount != -1) \{\par
317                     Assert.AreEqual (nextExpectedOptionCount, optionCount);\par
318                 \}\par
319 \par
320                 if (nextOptionToSelect != -1) \{\par
321                     resultDelegate (nextOptionToSelect);\par
322                 \}\par
323             \} else if (result is Yarn.Dialogue.CommandResult) \{\par
324                 var commandText = (result as Yarn.Dialogue.CommandResult).command.text;\par
325 \par
326                 if (nextExpectedCommand != null) \{\par
327                     Assert.AreEqual (nextExpectedCommand, commandText);\par
328                 \}\par
329             \}\par
330 \par
331             Console.WriteLine (result.ToString ());\par
332 \par
333             nextExpectedLine = null;\par
334             nextExpectedCommand = null;\par
335             nextExpectedOptionCount = -1;\par
336             nextOptionToSelect = -1;\par
337 \par
338         \}\par
}
}
{\xe \v Init\:YarnSpinner::Tests::Test}
{\xe \v YarnSpinner::Tests::Test\:Init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void YarnSpinner.Tests.Test.Init ()}}
\par
{\bkmkstart AAAAAAABEX}
{\bkmkend AAAAAAABEX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 27         \{\par
28 \par
29             if (System.IO.Path.GetFileName(Environment.CurrentDirectory) != "Tests") \{\par
30                 if (TestContext.CurrentContext.TestDirectory == Environment.CurrentDirectory) \{\par
31                     // Hop up to the folder that contains the Tests folder\par
32                     var topLevelPath = System.IO.Path.Combine(Environment.CurrentDirectory, "..", "..", "..");\par
33                     Environment.CurrentDirectory = topLevelPath;\par
34                 \}\par
35 \par
36                 var newWorkingDir = \par
37                     System.IO.Path.Combine (Environment.CurrentDirectory, "Tests");\par
38                 Environment.CurrentDirectory = newWorkingDir;\par
39             \}\par
40 \par
41 \par
42             dialogue = new Yarn.Dialogue (storage);\par
43 \par
44             dialogue.LogDebugMessage = delegate(string message) \{\par
45                 \par
46                 Console.WriteLine (message);\par
47 \par
48             \};\par
49 \par
50             dialogue.LogErrorMessage = delegate(string message) \{\par
51                 Console.ForegroundColor = ConsoleColor.Red;\par
52                 Console.WriteLine ("ERROR: " + message);\par
53                 Console.ResetColor ();\par
54 \par
55                 if (errorsCauseFailures == true)\par
56                     Assert.Fail();\par
57             \};\par
58 \par
59             dialogue.library.RegisterFunction ("assert", -1, delegate(Yarn.Value[] parameters) \{\par
60                 if (parameters[0].AsBool == false) \{\par
61                     if( parameters.Length > 1 && parameters[1].AsBool ) \{\par
62                         Assert.Fail ("Assertion failed: " + parameters[1].AsString);\par
63                     \} else \{\par
64                         Assert.Fail ("Assertion failed");\par
65                     \}\par
66                 \}\par
67             \});\par
68 \par
69             dialogue.library.RegisterFunction ("prepare_for_options", 2, delegate(Yarn.Value[] parameters) \{\par
70                 nextExpectedOptionCount = (int)parameters[0].AsNumber;\par
71                 nextOptionToSelect = (int)parameters[1].AsNumber;\par
72             \});\par
73 \par
74             dialogue.library.RegisterFunction ("expect_line", -1, delegate(Yarn.Value[] parameters) \{\par
75                 nextExpectedLine = parameters[0].AsString;\par
76             \});\par
77 \par
78             dialogue.library.RegisterFunction ("expect_command", -1, delegate(Yarn.Value[] parameters) \{\par
79                 nextExpectedCommand = parameters[0].AsString;\par
80             \});\par
81         \}\par
}
}
{\xe \v RunStandardTestcase\:YarnSpinner::Tests::Test}
{\xe \v YarnSpinner::Tests::Test\:RunStandardTestcase}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void YarnSpinner.Tests.Test.RunStandardTestcase (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABEY}
{\bkmkend AAAAAAABEY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 296                                            \{\par
297             foreach (var result in dialogue.Run()) \{\par
298                 HandleResult (result);\par
299             \}\par
300         \}\par
}
}
{\xe \v TestAnalysis\:YarnSpinner::Tests::Test}
{\xe \v YarnSpinner::Tests::Test\:TestAnalysis}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void YarnSpinner.Tests.Test.TestAnalysis ()}}
\par
{\bkmkstart AAAAAAABEZ}
{\bkmkend AAAAAAABEZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 262                                    \{\par
263 \par
264             ICollection<Yarn.Analysis.Diagnosis> diagnoses;\par
265             Yarn.Analysis.Context context;\par
266 \par
267 \par
268             // this script has the following variables:\par
269             // $foo is read from and written to\par
270             // $bar is written to but never read\par
271             // $bas is read from but never written to\par
272             // this means that there should be two diagnosis results\par
273             var script = "// testing\\n<<set $foo to 1>><<set $bar to $foo>><<set $bar to $bas>>";\par
274 \par
275             context = new Yarn.Analysis.Context ();\par
276             dialogue.LoadString (script);\par
277             dialogue.Analyse (context);\par
278             diagnoses = new List<Yarn.Analysis.Diagnosis>(context.FinishAnalysis ());\par
279 \par
280             Assert.IsTrue (diagnoses.Count == 2);\par
281 \par
282             dialogue.UnloadAll ();\par
283 \par
284             context = new Yarn.Analysis.Context ();\par
285             dialogue.LoadFile ("../Unity/Assets/Yarn Spinner/Examples/Demo Assets/Space/Ship.json");\par
286             dialogue.LoadFile ("../Unity/Assets/Yarn Spinner/Examples/Demo Assets/Space/Sally.json");\par
287             dialogue.Analyse (context);\par
288             diagnoses = new List<Yarn.Analysis.Diagnosis>(context.FinishAnalysis ());\par
289 \par
290             // This script should contain no unused variables\par
291             Assert.IsEmpty (diagnoses);\par
292 \par
293 \par
294         \}\par
}
}
{\xe \v TestCommands\:YarnSpinner::Tests::Test}
{\xe \v YarnSpinner::Tests::Test\:TestCommands}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void YarnSpinner.Tests.Test.TestCommands ()}}
\par
{\bkmkstart AAAAAAABFA}
{\bkmkend AAAAAAABFA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 160         \{\par
161             var path = System.IO.Path.Combine ("TestCases", "Commands.node");\par
162             dialogue.LoadFile (path);\par
163             RunStandardTestcase ();\par
164         \}\par
}
}
{\xe \v TestDumpingCode\:YarnSpinner::Tests::Test}
{\xe \v YarnSpinner::Tests::Test\:TestDumpingCode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void YarnSpinner.Tests.Test.TestDumpingCode ()}}
\par
{\bkmkstart AAAAAAABFB}
{\bkmkend AAAAAAABFB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 139         \{\par
140             var path = "Example.json";\par
141             dialogue.LoadFile (path);\par
142 \par
143             var byteCode = dialogue.GetByteCode ();\par
144             Assert.NotNull (byteCode);\par
145 \par
146         \}\par
}
}
{\xe \v TestEndOfNotesWithOptionsNotAdded\:YarnSpinner::Tests::Test}
{\xe \v YarnSpinner::Tests::Test\:TestEndOfNotesWithOptionsNotAdded}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void YarnSpinner.Tests.Test.TestEndOfNotesWithOptionsNotAdded ()}}
\par
{\bkmkstart AAAAAAABFC}
{\bkmkend AAAAAAABFC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 252                                                         \{\par
253             dialogue.LoadFile ("SkippedOptions.node");\par
254 \par
255             foreach (var result in dialogue.Run()) \{\par
256                 Assert.IsNotInstanceOf<Yarn.Dialogue.OptionSetResult> (result);\par
257             \}\par
258 \par
259         \}\par
}
}
{\xe \v TestExampleScript\:YarnSpinner::Tests::Test}
{\xe \v YarnSpinner::Tests::Test\:TestExampleScript}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void YarnSpinner.Tests.Test.TestExampleScript ()}}
\par
{\bkmkstart AAAAAAABFD}
{\bkmkend AAAAAAABFD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 150         \{\par
151 \par
152             errorsCauseFailures = false;\par
153             var path = "Example.json";\par
154             dialogue.LoadFile (path);\par
155             RunStandardTestcase ();\par
156         \}\par
}
}
{\xe \v TestGettingCurrentNodeName\:YarnSpinner::Tests::Test}
{\xe \v YarnSpinner::Tests::Test\:TestGettingCurrentNodeName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void YarnSpinner.Tests.Test.TestGettingCurrentNodeName ()}}
\par
{\bkmkstart AAAAAAABFE}
{\bkmkend AAAAAAABFE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 202                                                   \{\par
203             dialogue.LoadFile ("../Unity/Assets/Yarn Spinner/Examples/Demo Assets/Space/Sally.json");\par
204 \par
205             // dialogue should not be running yet\par
206             Assert.IsNull (dialogue.currentNode);\par
207 \par
208             foreach (var result in dialogue.Run("Sally")) \{\par
209                 // Should now be in the node we requested\par
210                 Assert.AreEqual (dialogue.currentNode, "Sally");\par
211                 // Stop immediately\par
212                 dialogue.Stop ();\par
213             \}\par
214 \par
215             // Current node should now be null\par
216             Assert.IsNull (dialogue.currentNode);\par
217         \}\par
}
}
{\xe \v TestGettingRawSource\:YarnSpinner::Tests::Test}
{\xe \v YarnSpinner::Tests::Test\:TestGettingRawSource}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void YarnSpinner.Tests.Test.TestGettingRawSource ()}}
\par
{\bkmkstart AAAAAAABFF}
{\bkmkend AAAAAAABFF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 241                                            \{\par
242             dialogue.LoadFile ("Example.json");\par
243 \par
244             var source = dialogue.GetTextForNode ("LearnMore");\par
245 \par
246             Assert.IsNotNull (source);\par
247 \par
248             Assert.AreEqual (source, "A: HAHAHA");\par
249         \}\par
}
}
{\xe \v TestIndentation\:YarnSpinner::Tests::Test}
{\xe \v YarnSpinner::Tests::Test\:TestIndentation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void YarnSpinner.Tests.Test.TestIndentation ()}}
\par
{\bkmkstart AAAAAAABFG}
{\bkmkend AAAAAAABFG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 105         \{\par
106             var path = System.IO.Path.Combine ("TestCases", "Indentation.node");\par
107             dialogue.LoadFile (path);\par
108             RunStandardTestcase ();\par
109         \}\par
}
}
{\xe \v TestMergingNodes\:YarnSpinner::Tests::Test}
{\xe \v YarnSpinner::Tests::Test\:TestMergingNodes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void YarnSpinner.Tests.Test.TestMergingNodes ()}}
\par
{\bkmkstart AAAAAAABFH}
{\bkmkend AAAAAAABFH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 189         \{\par
190             dialogue.LoadFile ("../Unity/Assets/Yarn Spinner/Examples/Demo Assets/Space/Sally.json");\par
191 \par
192             dialogue.LoadFile ("Example.json");\par
193 \par
194             // Loading code with the same contents should throw\par
195             Assert.Throws <InvalidOperationException> (delegate () \{\par
196                 dialogue.LoadFile ("Example.json");\par
197                 return;\par
198             \});\par
199         \}\par
}
}
{\xe \v TestMissingNode\:YarnSpinner::Tests::Test}
{\xe \v YarnSpinner::Tests::Test\:TestMissingNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void YarnSpinner.Tests.Test.TestMissingNode ()}}
\par
{\bkmkstart AAAAAAABFI}
{\bkmkend AAAAAAABFI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 168         \{\par
169             var path = System.IO.Path.Combine ("TestCases", "Smileys.node");\par
170             dialogue.LoadFile (path);\par
171 \par
172             errorsCauseFailures = false;\par
173 \par
174             foreach (var result in dialogue.Run("THIS NODE DOES NOT EXIST")) \{\par
175                 \par
176             \}\par
177         \}\par
}
}
{\xe \v TestNodeExists\:YarnSpinner::Tests::Test}
{\xe \v YarnSpinner::Tests::Test\:TestNodeExists}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void YarnSpinner.Tests.Test.TestNodeExists ()}}
\par
{\bkmkstart AAAAAAABFJ}
{\bkmkend AAAAAAABFJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 85         \{\par
86         \par
87 \par
88             dialogue.LoadFile ("../Unity/Assets/Yarn Spinner/Examples/Demo Assets/Space/Sally.json");\par
89 \par
90             Assert.True (dialogue.NodeExists ("Sally"));\par
91 \par
92             // Test clearing everything\par
93             dialogue.UnloadAll ();\par
94 \par
95             // Load an empty node\par
96             dialogue.LoadString("// Test, this is empty");\par
97 \par
98             Assert.False (dialogue.NodeExists ("Sally"));\par
99 \par
100 \par
101         \}\par
}
}
{\xe \v TestOptions\:YarnSpinner::Tests::Test}
{\xe \v YarnSpinner::Tests::Test\:TestOptions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void YarnSpinner.Tests.Test.TestOptions ()}}
\par
{\bkmkstart AAAAAAABFK}
{\bkmkend AAAAAAABFK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 123         \{\par
124             var path = System.IO.Path.Combine ("TestCases", "Options.node");\par
125             dialogue.LoadFile (path);\par
126             RunStandardTestcase ();\par
127         \}\par
}
}
{\xe \v TestParsingSmileys\:YarnSpinner::Tests::Test}
{\xe \v YarnSpinner::Tests::Test\:TestParsingSmileys}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void YarnSpinner.Tests.Test.TestParsingSmileys ()}}
\par
{\bkmkstart AAAAAAABFL}
{\bkmkend AAAAAAABFL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 131         \{\par
132             var path = System.IO.Path.Combine ("TestCases", "Smileys.node");\par
133             dialogue.LoadFile (path);\par
134             RunStandardTestcase ();\par
135         \}\par
}
}
{\xe \v TestSaveAndLoad\:YarnSpinner::Tests::Test}
{\xe \v YarnSpinner::Tests::Test\:TestSaveAndLoad}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void YarnSpinner.Tests.Test.TestSaveAndLoad ()}}
\par
{\bkmkstart AAAAAAABFM}
{\bkmkend AAAAAAABFM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 221         \{\par
222             Console.WriteLine("entering");\par
223             var path = System.IO.Path.Combine("TestCases", "SaveTest.json");\par
224             dialogue.LoadFile(path);\par
225             var runner = dialogue.Run().GetEnumerator();\par
226             runner.MoveNext();\par
227             Assert.AreEqual((runner.Current as Yarn.Dialogue.LineResult).line.text, "This is the first line.");\par
228             string saveState = dialogue.SerializeVM();//save\par
229             runner.MoveNext();\par
230             Assert.AreEqual((runner.Current as Yarn.Dialogue.LineResult).line.text, "This is the second line.");\par
231             runner.MoveNext();\par
232             Assert.AreEqual((runner.Current as Yarn.Dialogue.LineResult).line.text, "This is the third line.");//make sure leftover Current does not create a false positive\par
233             dialogue.DeserializeVM(saveState);//load\par
234             runner.MoveNext();\par
235             Assert.AreEqual((runner.Current as Yarn.Dialogue.LineResult).line.text, "This is the second line.");\par
236             \par
237         \}\par
}
}
{\xe \v TestTypes\:YarnSpinner::Tests::Test}
{\xe \v YarnSpinner::Tests::Test\:TestTypes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void YarnSpinner.Tests.Test.TestTypes ()}}
\par
{\bkmkstart AAAAAAABFN}
{\bkmkend AAAAAAABFN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 181         \{\par
182             var path = System.IO.Path.Combine ("TestCases", "Types.node");\par
183             dialogue.LoadFile (path);\par
184             RunStandardTestcase ();\par
185         \}\par
}
}
{\xe \v TestVariableStorage\:YarnSpinner::Tests::Test}
{\xe \v YarnSpinner::Tests::Test\:TestVariableStorage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void YarnSpinner.Tests.Test.TestVariableStorage ()}}
\par
{\bkmkstart AAAAAAABFO}
{\bkmkend AAAAAAABFO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 113         \{\par
114             storage.Clear ();\par
115 \par
116             var path = System.IO.Path.Combine ("TestCases", "VariableStorage.node");\par
117             dialogue.LoadFile (path);\par
118             RunStandardTestcase ();\par
119         \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v dialogue\:YarnSpinner::Tests::Test}
{\xe \v YarnSpinner::Tests::Test\:dialogue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Dialogue} YarnSpinner.Tests.Test.dialogue{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABFP}
{\bkmkend AAAAAAABFP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v errorsCauseFailures\:YarnSpinner::Tests::Test}
{\xe \v YarnSpinner::Tests::Test\:errorsCauseFailures}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool YarnSpinner.Tests.Test.errorsCauseFailures = true{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABFQ}
{\bkmkend AAAAAAABFQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v nextExpectedCommand\:YarnSpinner::Tests::Test}
{\xe \v YarnSpinner::Tests::Test\:nextExpectedCommand}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string YarnSpinner.Tests.Test.nextExpectedCommand = null{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABFR}
{\bkmkend AAAAAAABFR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v nextExpectedLine\:YarnSpinner::Tests::Test}
{\xe \v YarnSpinner::Tests::Test\:nextExpectedLine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string YarnSpinner.Tests.Test.nextExpectedLine = null{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABFS}
{\bkmkend AAAAAAABFS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v nextExpectedOptionCount\:YarnSpinner::Tests::Test}
{\xe \v YarnSpinner::Tests::Test\:nextExpectedOptionCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int YarnSpinner.Tests.Test.nextExpectedOptionCount = -1{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABFT}
{\bkmkend AAAAAAABFT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v nextOptionToSelect\:YarnSpinner::Tests::Test}
{\xe \v YarnSpinner::Tests::Test\:nextOptionToSelect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int YarnSpinner.Tests.Test.nextOptionToSelect = -1{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABFU}
{\bkmkend AAAAAAABFU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v storage\:YarnSpinner::Tests::Test}
{\xe \v YarnSpinner::Tests::Test\:storage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b VariableStorage} YarnSpinner.Tests.Test.storage = new {\b MemoryVariableStore}(){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABFV}
{\bkmkend AAAAAAABFV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
YarnSpinnerTests/{\b Test.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
TestDialogueUIBehaviour Class Reference\par \pard\plain 
{\tc\tcl2 \v TestDialogueUIBehaviour}
{\xe \v TestDialogueUIBehaviour}
{\bkmkstart AAAAAAAADH}
{\bkmkend AAAAAAAADH}
Inheritance diagram for TestDialogueUIBehaviour:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d2/d94/a00184.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for TestDialogueUIBehaviour:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "de/df3/a00185.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ExpectLine} (string line)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SelectOption} (string option)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
delegate void {\b LineHandler} ({\b Yarn.Line} line)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
delegate void {\b OptionsHandler} ({\b Yarn.Options} optionsCollection, {\b Yarn.OptionChooser} optionChooser)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
delegate void {\b CommandHandler} ({\b Yarn.Command} command)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override \par
System.Collections.IEnumerator {\b RunLine} ({\b Yarn.Line} line)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override \par
System.Collections.IEnumerator {\b RunOptions} ({\b Yarn.Options} optionsCollection, {\b Yarn.OptionChooser} optionChooser)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override \par
System.Collections.IEnumerator {\b RunCommand} ({\b Yarn.Command} command)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual IEnumerator {\b DialogueStarted} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
abstract IEnumerator {\b RunLine} ({\b Yarn.Line} line)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
abstract IEnumerator {\b RunOptions} ({\b Yarn.Options} optionsCollection, {\b Yarn.OptionChooser} optionChooser)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
abstract IEnumerator {\b RunCommand} ({\b Yarn.Command} command)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual IEnumerator {\b NodeComplete} (string nextNode)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual IEnumerator {\b DialogueComplete} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LineHandler} {\b lineHandler}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b OptionsHandler} {\b optionsHandler}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CommandHandler} {\b commandHandler}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Queue< string > {\b expectedLines} = new Queue<string>()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Queue< string > {\b expectedOptions} = new Queue<string>()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v CommandHandler\:TestDialogueUIBehaviour}
{\xe \v TestDialogueUIBehaviour\:CommandHandler}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
delegate void TestDialogueUIBehaviour.CommandHandler ({\b Yarn.Command} {\i command})}}
\par
{\bkmkstart AAAAAAAADI}
{\bkmkend AAAAAAAADI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DialogueComplete\:TestDialogueUIBehaviour}
{\xe \v TestDialogueUIBehaviour\:DialogueComplete}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual IEnumerator Yarn.Unity.DialogueUIBehaviour.DialogueComplete (){\f2 [virtual]}, {\f2 [inherited]}}}
\par
{\bkmkstart AAAAAAAADJ}
{\bkmkend AAAAAAAADJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented in {\b Yarn.Unity.Example.ExampleDialogueUI} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAADK \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 359                                                        \{\par
360             // Default implementation does nothing.\par
361             yield break;\par
362         \}\par
}
}
{\xe \v DialogueStarted\:TestDialogueUIBehaviour}
{\xe \v TestDialogueUIBehaviour\:DialogueStarted}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual IEnumerator Yarn.Unity.DialogueUIBehaviour.DialogueStarted (){\f2 [virtual]}, {\f2 [inherited]}}}
\par
{\bkmkstart AAAAAAAADL}
{\bkmkend AAAAAAAADL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Reimplemented in {\b Yarn.Unity.Example.ExampleDialogueUI} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAADM \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 337                                                      \{\par
338             // Default implementation does nothing.\par
339             yield break;\par
340         \}\par
}
}
{\xe \v ExpectLine\:TestDialogueUIBehaviour}
{\xe \v TestDialogueUIBehaviour\:ExpectLine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void TestDialogueUIBehaviour.ExpectLine (string {\i line})}}
\par
{\bkmkstart AAAAAAAADN}
{\bkmkend AAAAAAAADN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 9                                         \{\par
10         expectedLines.Enqueue(line);\par
11     \}\par
}
}
{\xe \v LineHandler\:TestDialogueUIBehaviour}
{\xe \v TestDialogueUIBehaviour\:LineHandler}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
delegate void TestDialogueUIBehaviour.LineHandler ({\b Yarn.Line} {\i line})}}
\par
{\bkmkstart AAAAAAAADO}
{\bkmkend AAAAAAAADO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v NodeComplete\:TestDialogueUIBehaviour}
{\xe \v TestDialogueUIBehaviour\:NodeComplete}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual IEnumerator Yarn.Unity.DialogueUIBehaviour.NodeComplete (string {\i nextNode}){\f2 [virtual]}, {\f2 [inherited]}}}
\par
{\bkmkstart AAAAAAAADP}
{\bkmkend AAAAAAAADP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 353                                                                  \{\par
354             // Default implementation does nothing.\par
355             yield break;\par
356         \}\par
}
}
{\xe \v OptionsHandler\:TestDialogueUIBehaviour}
{\xe \v TestDialogueUIBehaviour\:OptionsHandler}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
delegate void TestDialogueUIBehaviour.OptionsHandler ({\b Yarn.Options} {\i optionsCollection}, {\b Yarn.OptionChooser} {\i optionChooser})}}
\par
{\bkmkstart AAAAAAAADQ}
{\bkmkend AAAAAAAADQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v RunCommand\:TestDialogueUIBehaviour}
{\xe \v TestDialogueUIBehaviour\:RunCommand}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override System.Collections.IEnumerator TestDialogueUIBehaviour.RunCommand ({\b Yarn.Command} {\i command})}}
\par
{\bkmkstart AAAAAAAADR}
{\bkmkend AAAAAAAADR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 59     \{\par
60         if (commandHandler != null)\par
61             commandHandler(command);\par
62         yield break;\par
63     \}\par
}
}
{\xe \v RunCommand\:TestDialogueUIBehaviour}
{\xe \v TestDialogueUIBehaviour\:RunCommand}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
abstract IEnumerator Yarn.Unity.DialogueUIBehaviour.RunCommand ({\b Yarn.Command} {\i command}){\f2 [pure virtual]}, {\f2 [inherited]}}}
\par
{\bkmkstart AAAAAAAADS}
{\bkmkend AAAAAAAADS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b Yarn.Unity.Example.ExampleDialogueUI} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAADT \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v RunLine\:TestDialogueUIBehaviour}
{\xe \v TestDialogueUIBehaviour\:RunLine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override System.Collections.IEnumerator TestDialogueUIBehaviour.RunLine ({\b Yarn.Line} {\i line})}}
\par
{\bkmkstart AAAAAAAADU}
{\bkmkend AAAAAAAADU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 30     \{\par
31         if (lineHandler != null)\par
32             lineHandler(line);\par
33         \par
34         if (expectedLines.Count > 0) \{\par
35             Assert.AreEqual(expectedLines.Dequeue(), line.text);\par
36         \}\par
37 \par
38         yield break;\par
39     \}\par
}
}
{\xe \v RunLine\:TestDialogueUIBehaviour}
{\xe \v TestDialogueUIBehaviour\:RunLine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
abstract IEnumerator Yarn.Unity.DialogueUIBehaviour.RunLine ({\b Yarn.Line} {\i line}){\f2 [pure virtual]}, {\f2 [inherited]}}}
\par
{\bkmkstart AAAAAAAADV}
{\bkmkend AAAAAAAADV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b Yarn.Unity.Example.ExampleDialogueUI} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAADW \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v RunOptions\:TestDialogueUIBehaviour}
{\xe \v TestDialogueUIBehaviour\:RunOptions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override System.Collections.IEnumerator TestDialogueUIBehaviour.RunOptions ({\b Yarn.Options} {\i optionsCollection}, {\b Yarn.OptionChooser} {\i optionChooser})}}
\par
{\bkmkstart AAAAAAAADX}
{\bkmkend AAAAAAAADX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 41     \{\par
42         if (optionsHandler != null)\par
43             optionsHandler(optionsCollection, optionChooser);\par
44 \par
45         if (expectedOptions.Count > 0) \{\par
46             var selection = expectedOptions.Dequeue();\par
47 \par
48             var index = optionsCollection.options.IndexOf(selection);\par
49 \par
50             Assert.AreNotEqual(index, -1, "Failed to find option \\"\{0\}\\"", selection);\par
51 \par
52             Assert.Less(index, optionsCollection.options.Count);\par
53             optionChooser(index);\par
54         \}\par
55 \par
56         yield break;\par
57     \}\par
}
}
{\xe \v RunOptions\:TestDialogueUIBehaviour}
{\xe \v TestDialogueUIBehaviour\:RunOptions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
abstract IEnumerator Yarn.Unity.DialogueUIBehaviour.RunOptions ({\b Yarn.Options} {\i optionsCollection}, {\b Yarn.OptionChooser} {\i optionChooser}){\f2 [pure virtual]}, {\f2 [inherited]}}}
\par
{\bkmkstart AAAAAAAADY}
{\bkmkend AAAAAAAADY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b Yarn.Unity.Example.ExampleDialogueUI} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAADZ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v SelectOption\:TestDialogueUIBehaviour}
{\xe \v TestDialogueUIBehaviour\:SelectOption}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void TestDialogueUIBehaviour.SelectOption (string {\i option})}}
\par
{\bkmkstart AAAAAAAAEA}
{\bkmkend AAAAAAAAEA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 14                                             \{\par
15         expectedOptions.Enqueue(option);\par
16     \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v commandHandler\:TestDialogueUIBehaviour}
{\xe \v TestDialogueUIBehaviour\:commandHandler}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CommandHandler} TestDialogueUIBehaviour.commandHandler}}
\par
{\bkmkstart AAAAAAAAEB}
{\bkmkend AAAAAAAAEB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v expectedLines\:TestDialogueUIBehaviour}
{\xe \v TestDialogueUIBehaviour\:expectedLines}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Queue<string> TestDialogueUIBehaviour.expectedLines = new Queue<string>(){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAEC}
{\bkmkend AAAAAAAAEC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v expectedOptions\:TestDialogueUIBehaviour}
{\xe \v TestDialogueUIBehaviour\:expectedOptions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Queue<string> TestDialogueUIBehaviour.expectedOptions = new Queue<string>(){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAED}
{\bkmkend AAAAAAAAED}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v lineHandler\:TestDialogueUIBehaviour}
{\xe \v TestDialogueUIBehaviour\:lineHandler}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LineHandler} TestDialogueUIBehaviour.lineHandler}}
\par
{\bkmkstart AAAAAAAAEE}
{\bkmkend AAAAAAAAEE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v optionsHandler\:TestDialogueUIBehaviour}
{\xe \v TestDialogueUIBehaviour\:optionsHandler}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b OptionsHandler} TestDialogueUIBehaviour.optionsHandler}}
\par
{\bkmkstart AAAAAAAAEF}
{\bkmkend AAAAAAAAEF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Unity/Assets/Yarn Spinner/Code/Editor/{\b YarnSpinnerTests.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Yarn.Token Class Reference\par \pard\plain 
{\tc\tcl2 \v Yarn.Token}
{\xe \v Yarn.Token}
{\bkmkstart AAAAAAAANU}
{\bkmkend AAAAAAAANU}
Collaboration diagram for Yarn.Token:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d7/d40/a00236.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Token} ({\b TokenType} {\b type}, int {\b lineNumber}=-1, int {\b columnNumber}=-1, string {\b value}=null)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b ToString} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TokenType} {\b type}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b value}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b lineNumber}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b columnNumber}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b context}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b delimitsText} = false\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b parameterCount}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Token\:Yarn::Token}
{\xe \v Yarn::Token\:Token}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Yarn.Token.Token ({\b TokenType} {\i type}, int {\i lineNumber} = {\f2 -1}, int {\i columnNumber} = {\f2 -1}, string {\i value} = {\f2 null})}}
\par
{\bkmkstart AAAAAAAANV}
{\bkmkend AAAAAAAANV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 189                                                                                                     \{\par
190             this.type = type;\par
191             this.value = value;\par
192             this.lineNumber = lineNumber;\par
193             this.columnNumber = columnNumber;           \par
194         \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v ToString\:Yarn::Token}
{\xe \v Yarn::Token\:ToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string Yarn.Token.ToString ()}}
\par
{\bkmkstart AAAAAAAANW}
{\bkmkend AAAAAAAANW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 196                                           \{\par
197             if (this.value != null) \{\par
198                 return string.Format("\{0\} (\{1\}) at \{2\}:\{3\}", type.ToString(), value.ToString(), lineNumber, columnNumber);\par
199             \} else \{\par
200                 return string.Format ("\{0\} at \{1\}:\{2\}", type, lineNumber, columnNumber);\par
201             \}\par
202         \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v columnNumber\:Yarn::Token}
{\xe \v Yarn::Token\:columnNumber}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Yarn.Token.columnNumber}}
\par
{\bkmkstart AAAAAAAANX}
{\bkmkend AAAAAAAANX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v context\:Yarn::Token}
{\xe \v Yarn::Token\:context}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string Yarn.Token.context}}
\par
{\bkmkstart AAAAAAAANY}
{\bkmkend AAAAAAAANY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v delimitsText\:Yarn::Token}
{\xe \v Yarn::Token\:delimitsText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Yarn.Token.delimitsText = false}}
\par
{\bkmkstart AAAAAAAANZ}
{\bkmkend AAAAAAAANZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v lineNumber\:Yarn::Token}
{\xe \v Yarn::Token\:lineNumber}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Yarn.Token.lineNumber}}
\par
{\bkmkstart AAAAAAAAOA}
{\bkmkend AAAAAAAAOA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v parameterCount\:Yarn::Token}
{\xe \v Yarn::Token\:parameterCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Yarn.Token.parameterCount}}
\par
{\bkmkstart AAAAAAAAOB}
{\bkmkend AAAAAAAAOB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v type\:Yarn::Token}
{\xe \v Yarn::Token\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TokenType} Yarn.Token.type}}
\par
{\bkmkstart AAAAAAAAOC}
{\bkmkend AAAAAAAAOC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v value\:Yarn::Token}
{\xe \v Yarn::Token\:value}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string Yarn.Token.value}}
\par
{\bkmkstart AAAAAAAAOD}
{\bkmkend AAAAAAAAOD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
YarnSpinner/{\b Lexer.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Yarn.TokeniserException Class Reference\par \pard\plain 
{\tc\tcl2 \v Yarn.TokeniserException}
{\xe \v Yarn.TokeniserException}
{\bkmkstart AAAAAAAANM}
{\bkmkend AAAAAAAANM}
Inheritance diagram for Yarn.TokeniserException:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d1/da8/a00230.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for Yarn.TokeniserException:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/d17/a00231.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TokeniserException} (string message)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TokeniserException} (int {\b lineNumber}, int {\b columnNumber}, string message)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b TokeniserException} {\b ExpectedTokensFromState} (int {\b lineNumber}, int {\b columnNumber}, {\b Lexer.LexerState} state)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b lineNumber}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b columnNumber}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v TokeniserException\:Yarn::TokeniserException}
{\xe \v Yarn::TokeniserException\:TokeniserException}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Yarn.TokeniserException.TokeniserException (string {\i message})}}
\par
{\bkmkstart AAAAAAAANN}
{\bkmkend AAAAAAAANN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 38 : base (message) \{\}\par
}
}
{\xe \v TokeniserException\:Yarn::TokeniserException}
{\xe \v Yarn::TokeniserException\:TokeniserException}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Yarn.TokeniserException.TokeniserException (int {\i lineNumber}, int {\i columnNumber}, string {\i message})}}
\par
{\bkmkstart AAAAAAAANO}
{\bkmkend AAAAAAAANO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 40             : base(string.Format ("\{0\}:\{1\}: \{2\}", lineNumber, columnNumber, message))\par
41         \{\par
42             this.lineNumber = lineNumber;\par
43             this.columnNumber = columnNumber;\par
44         \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v ExpectedTokensFromState\:Yarn::TokeniserException}
{\xe \v Yarn::TokeniserException\:ExpectedTokensFromState}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b TokeniserException} Yarn.TokeniserException.ExpectedTokensFromState (int {\i lineNumber}, int {\i columnNumber}, {\b Lexer.LexerState} {\i state}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAANP}
{\bkmkend AAAAAAAANP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 47                                                                                                                             \{\par
48 \par
49             var names = new List<string> ();\par
50             foreach (var tokenRule in state.tokenRules) \{\par
51                 names.Add (tokenRule.type.ToString ());\par
52             \}\par
53 \par
54             string nameList;\par
55             if (names.Count > 1) \{\par
56                 nameList = String.Join (", ", names.ToArray (), 0, names.Count - 1);\par
57                 nameList += ", or " + names [names.Count - 1];\par
58             \} else \{\par
59                 nameList = names [0];\par
60             \}\par
61 \par
62             var message = string.Format ("Expected " + nameList);\par
63             \par
64             return new TokeniserException (lineNumber, columnNumber, message);\par
65         \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v columnNumber\:Yarn::TokeniserException}
{\xe \v Yarn::TokeniserException\:columnNumber}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Yarn.TokeniserException.columnNumber}}
\par
{\bkmkstart AAAAAAAANQ}
{\bkmkend AAAAAAAANQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v lineNumber\:Yarn::TokeniserException}
{\xe \v Yarn::TokeniserException\:lineNumber}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Yarn.TokeniserException.lineNumber}}
\par
{\bkmkstart AAAAAAAANR}
{\bkmkend AAAAAAAANR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
YarnSpinner/{\b Lexer.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Yarn.TokenList Class Reference\par \pard\plain 
{\tc\tcl2 \v Yarn.TokenList}
{\xe \v Yarn.TokenList}
{\bkmkstart AAAAAAAANS}
{\bkmkend AAAAAAAANS}
Inheritance diagram for Yarn.TokenList:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/de1/a00233.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for Yarn.TokenList:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "da/d31/a00234.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TokenList} (params {\b Token}[] tokens)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v TokenList\:Yarn::TokenList}
{\xe \v Yarn::TokenList\:TokenList}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Yarn.TokenList.TokenList (params {\b Token}[] {\i tokens})}}
\par
{\bkmkstart AAAAAAAANT}
{\bkmkend AAAAAAAANT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 72                                                  : base()\par
73         \{\par
74             AddRange(tokens);\par
75         \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
YarnSpinner/{\b Lexer.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Yarn.Lexer.TokenRule Class Reference\par \pard\plain 
{\tc\tcl2 \v Yarn.Lexer.TokenRule}
{\xe \v Yarn.Lexer.TokenRule}
{\bkmkstart AAAAAAAAOZ}
{\bkmkend AAAAAAAAOZ}
Collaboration diagram for Yarn.Lexer.TokenRule:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d2/dc8/a00242.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TokenRule} ({\b TokenType} {\b type}, Regex {\b regex}, string {\b entersState}=null, bool {\b delimitsText}=false)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b ToString} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Regex {\b regex} = null\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b entersState}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TokenType} {\b type}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b isTextRule} = false\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b delimitsText} = false\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v TokenRule\:Yarn::Lexer::TokenRule}
{\xe \v Yarn::Lexer::TokenRule\:TokenRule}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Yarn.Lexer.TokenRule.TokenRule ({\b TokenType} {\i type}, Regex {\i regex}, string {\i entersState} = {\f2 null}, bool {\i delimitsText} = {\f2 false})}}
\par
{\bkmkstart AAAAAAAAPA}
{\bkmkend AAAAAAAAPA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 283             \{\par
284                 this.regex = regex;\par
285                 this.entersState = entersState;\par
286                 this.type = type;\par
287                 this.delimitsText = delimitsText;\par
288             \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v ToString\:Yarn::Lexer::TokenRule}
{\xe \v Yarn::Lexer::TokenRule\:ToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string Yarn.Lexer.TokenRule.ToString ()}}
\par
{\bkmkstart AAAAAAAAPB}
{\bkmkend AAAAAAAAPB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 291             \{\par
292                 return string.Format (string.Format ("[TokenRule: \{0\} - \{1\}]", type, this.regex));\par
293             \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v delimitsText\:Yarn::Lexer::TokenRule}
{\xe \v Yarn::Lexer::TokenRule\:delimitsText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Yarn.Lexer.TokenRule.delimitsText = false}}
\par
{\bkmkstart AAAAAAAAPC}
{\bkmkend AAAAAAAAPC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v entersState\:Yarn::Lexer::TokenRule}
{\xe \v Yarn::Lexer::TokenRule\:entersState}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string Yarn.Lexer.TokenRule.entersState}}
\par
{\bkmkstart AAAAAAAAPD}
{\bkmkend AAAAAAAAPD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v isTextRule\:Yarn::Lexer::TokenRule}
{\xe \v Yarn::Lexer::TokenRule\:isTextRule}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Yarn.Lexer.TokenRule.isTextRule = false}}
\par
{\bkmkstart AAAAAAAAPE}
{\bkmkend AAAAAAAAPE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v regex\:Yarn::Lexer::TokenRule}
{\xe \v Yarn::Lexer::TokenRule\:regex}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Regex Yarn.Lexer.TokenRule.regex = null}}
\par
{\bkmkstart AAAAAAAAPF}
{\bkmkend AAAAAAAAPF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v type\:Yarn::Lexer::TokenRule}
{\xe \v Yarn::Lexer::TokenRule\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TokenType} Yarn.Lexer.TokenRule.type}}
\par
{\bkmkstart AAAAAAAAPG}
{\bkmkend AAAAAAAAPG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
YarnSpinner/{\b Lexer.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Yarn.TreeRunner Class Reference\par \pard\plain 
{\tc\tcl2 \v Yarn.TreeRunner}
{\xe \v Yarn.TreeRunner}
{\bkmkstart AAAAAAAAVM}
{\bkmkend AAAAAAAAVM}
Collaboration diagram for Yarn.TreeRunner:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "da/d50/a00301.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Package Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TreeRunner} ({\b Dialogue} {\b dialogue})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IEnumerable\par
< {\b Dialogue.RunnerResult} > {\b RunNode} ({\b Yarn.Parser.Node} node)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IEnumerable\par
< {\b Dialogue.RunnerResult} > {\b RunStatements} (IEnumerable< {\b Parser.Statement} > statements)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IEnumerable\par
< {\b Dialogue.RunnerResult} > {\b RunStatement} ({\b Parser.Statement} statement)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Yarn.Value} {\b EvaluateExpression} ({\b Parser.Expression} expression)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Yarn.Value} {\b EvaluateValue} ({\b Value} value)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b RunAssignmentStatement} ({\b Parser.AssignmentStatement} assignment)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IEnumerable\par
< {\b Dialogue.RunnerResult} > {\b RunShortcutOptionGroup} ({\b Parser.ShortcutOptionGroup} shortcutOptionGroup)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
List< {\b Parser.OptionStatement} > {\b currentOptions}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Dialogue} {\b dialogue}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v TreeRunner\:Yarn::TreeRunner}
{\xe \v Yarn::TreeRunner\:TreeRunner}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Yarn.TreeRunner.TreeRunner ({\b Dialogue} {\i dialogue}){\f2 [package]}}}
\par
{\bkmkstart AAAAAAAAVN}
{\bkmkend AAAAAAAAVN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 44                                                \{\par
45             this.dialogue = dialogue;\par
46         \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v EvaluateExpression\:Yarn::TreeRunner}
{\xe \v Yarn::TreeRunner\:EvaluateExpression}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Yarn.Value} Yarn.TreeRunner.EvaluateExpression ({\b Parser.Expression} {\i expression}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAVO}
{\bkmkend AAAAAAAAVO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 190                                                                             \{\par
191 \par
192             if (expression == null)\par
193                 return Yarn.Value.NULL;\par
194             \par
195             switch (expression.type) \{\par
196             case Parser.Expression.Type.Value:\par
197                 // just a regular value? return it\par
198                 return EvaluateValue (expression.value.value);\par
199 \par
200             case Parser.Expression.Type.FunctionCall:\par
201                 // get the function\par
202                 var func = expression.function;\par
203 \par
204                 // evaluate all parameters\par
205                 var evaluatedParameters = new List<Value> ();\par
206 \par
207                 foreach (var param in expression.parameters) \{\par
208                     var expr = EvaluateExpression (param);\par
209                     evaluatedParameters.Add (expr);\par
210                 \}\par
211 \par
212                 var result = func.InvokeWithArray (evaluatedParameters.ToArray ());\par
213 \par
214                 return result;\par
215 \par
216             \}\par
217 \par
218             throw new NotImplementedException ("Unimplemented expression type " + expression.type.ToString ());\par
219 \par
220         \}\par
}
}
{\xe \v EvaluateValue\:Yarn::TreeRunner}
{\xe \v Yarn::TreeRunner\:EvaluateValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Yarn.Value} Yarn.TreeRunner.EvaluateValue ({\b Value} {\i value}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAVP}
{\bkmkend AAAAAAAAVP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 223                                                       \{\par
224             switch (value.type) \{\par
225             case Value.Type.Variable:\par
226                 dialogue.LogDebugMessage ("Checking value " + value.variableName);\par
227                 return dialogue.continuity.GetValue (value.variableName);\par
228             default:\par
229                 return value;\par
230             \}\par
231         \}\par
}
}
{\xe \v RunAssignmentStatement\:Yarn::TreeRunner}
{\xe \v Yarn::TreeRunner\:RunAssignmentStatement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Yarn.TreeRunner.RunAssignmentStatement ({\b Parser.AssignmentStatement} {\i assignment}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAVQ}
{\bkmkend AAAAAAAAVQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 234                                                                                    \{\par
235 \par
236             // The place where we're stickin' this value.\par
237             var variableName = assignment.destinationVariableName;\par
238 \par
239             // The value that's going into this variable.\par
240             var computedValue = EvaluateExpression (assignment.valueExpression);\par
241 \par
242             // The current value of this variable.\par
243             Value originalValue = dialogue.continuity.GetValue (variableName);\par
244 \par
245             // What shall we do with it?\par
246 \par
247             Value finalValue = Value.NULL;\par
248             switch (assignment.operation) \{\par
249             case TokenType.EqualToOrAssign:\par
250                 finalValue = computedValue;\par
251                 break;\par
252             case TokenType.AddAssign:\par
253                 finalValue = originalValue + computedValue;\par
254                 break;\par
255             case TokenType.MinusAssign:\par
256                 finalValue = originalValue - computedValue;\par
257                 break;\par
258             case TokenType.MultiplyAssign:\par
259                 finalValue = originalValue * computedValue;\par
260                 break;\par
261             case TokenType.DivideAssign:\par
262                 finalValue = originalValue / computedValue;\par
263                 break;\par
264             \}\par
265 \par
266             dialogue.LogDebugMessage(string.Format("Set \{0\} to \{1\}", variableName, finalValue));\par
267             dialogue.continuity.SetValue (variableName, finalValue);\par
268         \}\par
}
}
{\xe \v RunNode\:Yarn::TreeRunner}
{\xe \v Yarn::TreeRunner\:RunNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IEnumerable<{\b Dialogue.RunnerResult}> Yarn.TreeRunner.RunNode ({\b Yarn.Parser.Node} {\i node}){\f2 [package]}}}
\par
{\bkmkstart AAAAAAAAVR}
{\bkmkend AAAAAAAAVR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 51         \{\par
52 \par
53             // Clear the list of options when we start a new node\par
54             currentOptions = new List<Parser.OptionStatement> ();\par
55 \par
56             // Run all of the statements in this node\par
57             foreach (var command in RunStatements (node.statements)) \{\par
58                 yield return command;\par
59             \}\par
60 \par
61             // If we have no options, we're all done\par
62             if (currentOptions.Count == 0) \{\par
63                 yield return new Dialogue.NodeCompleteResult (null);\par
64                 yield break;\par
65             \} else \{\par
66                 // We have options!\par
67 \par
68                 // If we have precisely one option and it's got no label, jump to it\par
69                 if (currentOptions.Count == 1 &&\par
70                     currentOptions[0].label == null) \{\par
71                     yield return new Dialogue.NodeCompleteResult (currentOptions [0].destination);\par
72                     yield break;\par
73                 \}\par
74 \par
75                 // Otherwise, ask which option to pick...\par
76                 var optionStrings = new List<string> ();\par
77                 foreach (var option in currentOptions) \{\par
78                     var label = option.label ?? option.destination;\par
79                     optionStrings.Add (label);\par
80                 \}\par
81 \par
82                 Parser.OptionStatement selectedOption = null;\par
83 \par
84                 yield return new Dialogue.OptionSetResult (optionStrings, delegate(int selectedOptionIndex) \{\par
85                     selectedOption = currentOptions[selectedOptionIndex];\par
86                 \});\par
87 \par
88                 if (selectedOption == null) \{\par
89                     dialogue.LogErrorMessage ("Option chooser was never called!");\par
90                     yield break;\par
91                 \}\par
92 \par
93                 // And jump to its destination!\par
94                 yield return new Dialogue.NodeCompleteResult(selectedOption.destination);\par
95             \}\par
96             yield break;\par
97 \par
98         \}\par
}
}
{\xe \v RunShortcutOptionGroup\:Yarn::TreeRunner}
{\xe \v Yarn::TreeRunner\:RunShortcutOptionGroup}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IEnumerable<{\b Dialogue.RunnerResult}> Yarn.TreeRunner.RunShortcutOptionGroup ({\b Parser.ShortcutOptionGroup} {\i shortcutOptionGroup}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAVS}
{\bkmkend AAAAAAAAVS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 271         \{\par
272             var optionsToDisplay = new List<Parser.ShortcutOption> ();\par
273 \par
274             // Determine which options to present\par
275             foreach (var option in shortcutOptionGroup.options) \{\par
276                 var include = true;\par
277                 if (option.condition != null) \{\par
278                     include = EvaluateExpression(option.condition).AsBool != false;\par
279                 \}\par
280                 if (include) \{\par
281                     optionsToDisplay.Add(option);\par
282                 \}\par
283             \}\par
284 \par
285             if (optionsToDisplay.Count > 0) \{\par
286                 // Give this list to our client\par
287                 var optionStrings = new List<string> ();\par
288 \par
289                 foreach (var option in optionsToDisplay) \{\par
290                     optionStrings.Add(option.label);\par
291                 \}\par
292 \par
293                 Parser.ShortcutOption selectedOption = null;\par
294 \par
295                 yield return new Dialogue.OptionSetResult (optionStrings, delegate(int selectedOptionIndex) \{\par
296                     selectedOption = optionsToDisplay[selectedOptionIndex];\par
297                 \});\par
298 \par
299                 if (selectedOption == null) \{\par
300                     dialogue.LogErrorMessage ("The OptionChooser I provided was not called before the " +\par
301                         "next line was run! Stopping dialogue.");\par
302                     yield break;\par
303                 \}\par
304 \par
305                 if (selectedOption.optionNode != null) \{\par
306                     foreach (var command in RunStatements(selectedOption.optionNode.statements)) \{\par
307                         yield return command;\par
308                     \}\par
309                 \}\par
310                     \par
311             \}\par
312 \par
313         \}\par
}
}
{\xe \v RunStatement\:Yarn::TreeRunner}
{\xe \v Yarn::TreeRunner\:RunStatement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IEnumerable<{\b Dialogue.RunnerResult}> Yarn.TreeRunner.RunStatement ({\b Parser.Statement} {\i statement}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAVT}
{\bkmkend AAAAAAAAVT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 116                                                                                              \{\par
117 \par
118 \par
119             switch (statement.type) \{\par
120 \par
121             case Parser.Statement.Type.Block:\par
122                 // Blocks just contain statements, so run them!\par
123                 foreach (var command in RunStatements (statement.block.statements)) \{\par
124                     yield return command;\par
125                 \}\par
126                 break;\par
127 \par
128             case Parser.Statement.Type.Line:\par
129                 // Lines get forwarded to the client for display\par
130                 yield return new Dialogue.LineResult(statement.line);\par
131                 break;\par
132 \par
133             case Parser.Statement.Type.IfStatement:\par
134 \par
135                 // Evaluate each clause in the statement, and run its statements if appropriate\par
136                 foreach (var clause in statement.ifStatement.clauses) \{\par
137                     // if this clause's expression doesn't evaluate to 0, run it; alternatively,\par
138                     // if this clause has no expression (ie it's the 'else' clause) then also run it\par
139                     if (clause.expression == null || EvaluateExpression(clause.expression).AsBool != false) \{\par
140                         foreach (var command in  RunStatements (clause.statements)) \{\par
141                             yield return command;\par
142                         \}\par
143                         // don't continue on to the other clauses\par
144                         break;\par
145                     \}\par
146                 \}\par
147                 break;\par
148 \par
149             case Parser.Statement.Type.OptionStatement:\par
150                 // If we encounter an option, record it so that we can present it later\par
151                 currentOptions.Add (statement.optionStatement);\par
152                 break;\par
153 \par
154             case Parser.Statement.Type.AssignmentStatement:\par
155                 // Evaluate the expression and assign it to a variable\par
156                 RunAssignmentStatement (statement.assignmentStatement);\par
157                 break;\par
158 \par
159             case Parser.Statement.Type.ShortcutOptionGroup:\par
160                 // Evaluate and present the options, then run the stuff that came after the options\par
161                 foreach (var command in RunShortcutOptionGroup (statement.shortcutOptionGroup)) \{\par
162                     yield return command;\par
163                 \}\par
164                 break;\par
165 \par
166             case Parser.Statement.Type.CustomCommand:\par
167                 // Deal with a custom command - it's either an expression or a client command\par
168                 // If it's an expression, evaluate it\par
169                 // If it's a client command, yield it to the client\par
170 \par
171                 switch (statement.customCommand.type) \{\par
172                 case Parser.CustomCommand.Type.Expression:\par
173                     EvaluateExpression (statement.customCommand.expression);\par
174                     break;\par
175                 case Parser.CustomCommand.Type.ClientCommand:\par
176                     yield return new Dialogue.CommandResult (statement.customCommand.clientCommand);\par
177                     break;\par
178                 \}\par
179 \par
180                 break;\par
181 \par
182             default:\par
183                 // Just in case we added a new type of statement and didn't implement it here\par
184                 throw new NotImplementedException ("YarnRunner: Unimplemented statement type " + statement.type);\par
185             \}\par
186         \par
187 \par
188         \}\par
}
}
{\xe \v RunStatements\:Yarn::TreeRunner}
{\xe \v Yarn::TreeRunner\:RunStatements}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IEnumerable<{\b Dialogue.RunnerResult}> Yarn.TreeRunner.RunStatements (IEnumerable< {\b Parser.Statement} > {\i statements}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAVU}
{\bkmkend AAAAAAAAVU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 101                                                                                                            \{\par
102             \par
103             if (statements == null) \{\par
104                 yield break;\par
105             \}\par
106 \par
107             foreach (var statement in statements) \{\par
108                 foreach (var command in RunStatement (statement)) \{\par
109                     yield return command;\par
110                 \}\par
111 \par
112             \}\par
113         \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v currentOptions\:Yarn::TreeRunner}
{\xe \v Yarn::TreeRunner\:currentOptions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
List<{\b Parser.OptionStatement}> Yarn.TreeRunner.currentOptions{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAVV}
{\bkmkend AAAAAAAAVV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v dialogue\:Yarn::TreeRunner}
{\xe \v Yarn::TreeRunner\:dialogue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Dialogue} Yarn.TreeRunner.dialogue{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAVW}
{\bkmkend AAAAAAAAVW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
YarnSpinner/{\b TreeRunner.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Yarn.Analysis.UnusedVariableChecker Class Reference\par \pard\plain 
{\tc\tcl2 \v Yarn.Analysis.UnusedVariableChecker}
{\xe \v Yarn.Analysis.UnusedVariableChecker}
{\bkmkstart AAAAAAABAN}
{\bkmkend AAAAAAABAN}
Inheritance diagram for Yarn.Analysis.UnusedVariableChecker:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d8/dfc/a00327.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for Yarn.Analysis.UnusedVariableChecker:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d4/db5/a00328.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override void {\b Diagnose} ({\b Program} program)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override IEnumerable< {\b Diagnosis} > {\b GatherDiagnoses} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
abstract void {\b Diagnose} ({\b Yarn.Program} program)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HashSet< string > {\b readVariables} = new HashSet<string> ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
HashSet< string > {\b writtenVariables} = new HashSet<string> ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Diagnose\:Yarn::Analysis::UnusedVariableChecker}
{\xe \v Yarn::Analysis::UnusedVariableChecker\:Diagnose}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
abstract void Yarn.Analysis.CompiledProgramAnalyser.Diagnose ({\b Yarn.Program} {\i program}){\f2 [pure virtual]}, {\f2 [inherited]}}}
\par
{\bkmkstart AAAAAAABAK}
{\bkmkend AAAAAAABAK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Diagnose\:Yarn::Analysis::UnusedVariableChecker}
{\xe \v Yarn::Analysis::UnusedVariableChecker\:Diagnose}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override void Yarn.Analysis.UnusedVariableChecker.Diagnose ({\b Program} {\i program})}}
\par
{\bkmkstart AAAAAAABAO}
{\bkmkend AAAAAAABAO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 154         \{\par
155             \par
156             // In each node, find all reads and writes to variables\par
157             foreach (var nodeInfo in program.nodes) \{\par
158 \par
159                 var nodeName = nodeInfo.Key;\par
160                 var theNode = nodeInfo.Value;\par
161 \par
162                 foreach (var instruction in theNode.instructions) \{\par
163 \par
164                     switch (instruction.operation) \{\par
165                     case ByteCode.PushVariable:\par
166                         readVariables.Add ((string)instruction.operandA);\par
167                         break;\par
168                     case ByteCode.StoreVariable:\par
169                         writtenVariables.Add ((string)instruction.operandA);\par
170                         break;\par
171                     \}\par
172                 \}\par
173             \}\par
174 \par
175 \par
176         \}\par
}
}
{\xe \v GatherDiagnoses\:Yarn::Analysis::UnusedVariableChecker}
{\xe \v Yarn::Analysis::UnusedVariableChecker\:GatherDiagnoses}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override IEnumerable<{\b Diagnosis}> Yarn.Analysis.UnusedVariableChecker.GatherDiagnoses (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAABAM}
{\bkmkend AAAAAAABAM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Yarn.Analysis.CompiledProgramAnalyser} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAABAL \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 179         \{\par
180 \par
181             // Exclude read variables that are also written\par
182             var readOnlyVariables = new HashSet<string> (readVariables);\par
183             readOnlyVariables.ExceptWith (writtenVariables);\par
184 \par
185             // Exclude written variables that are also read\par
186             var writeOnlyVariables = new HashSet<string> (writtenVariables);\par
187             writeOnlyVariables.ExceptWith (readVariables);\par
188 \par
189             // Generate diagnoses\par
190             var diagnoses = new List<Diagnosis>();\par
191 \par
192             foreach (var readOnlyVariable in readOnlyVariables) \{\par
193                 var message = string.Format ("Variable \{0\} is read from, but never assigned", readOnlyVariable);\par
194                 diagnoses.Add(new Diagnosis (message, Diagnosis.Severity.Warning));\par
195             \}\par
196 \par
197             foreach (var writeOnlyVariable in writeOnlyVariables) \{\par
198                 var message = string.Format ("Variable \{0\} is assigned, but never read from", writeOnlyVariable);\par
199                 diagnoses.Add(new Diagnosis (message, Diagnosis.Severity.Warning));\par
200             \}\par
201 \par
202             return diagnoses;\par
203         \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v readVariables\:Yarn::Analysis::UnusedVariableChecker}
{\xe \v Yarn::Analysis::UnusedVariableChecker\:readVariables}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
HashSet<string> Yarn.Analysis.UnusedVariableChecker.readVariables = new HashSet<string> (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABAP}
{\bkmkend AAAAAAABAP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v writtenVariables\:Yarn::Analysis::UnusedVariableChecker}
{\xe \v Yarn::Analysis::UnusedVariableChecker\:writtenVariables}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
HashSet<string> Yarn.Analysis.UnusedVariableChecker.writtenVariables = new HashSet<string> (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABAQ}
{\bkmkend AAAAAAABAQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
YarnSpinner/{\b Analyser.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Yarn.Value Class Reference\par \pard\plain 
{\tc\tcl2 \v Yarn.Value}
{\xe \v Yarn.Value}
{\bkmkstart AAAAAAAAVZ}
{\bkmkend AAAAAAAAVZ}
Inheritance diagram for Yarn.Value:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d1/de3/a00306.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for Yarn.Value:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d0/da2/a00307.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Types\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Type} \{ {\b Type.Number}, 
{\b Type.String}, 
{\b Type.Bool}, 
{\b Type.Variable}, 
{\b Type.Null}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Value} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Value} (object value)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual int {\b CompareTo} (object obj)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual int {\b CompareTo} ({\b Value} other)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override bool {\b Equals} (object obj)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override int {\b GetHashCode} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b ToString} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b Value} {\b operator+} ({\b Value} a, {\b Value} b)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b Value} {\b operator-} ({\b Value} a, {\b Value} b)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b Value} {\b operator*} ({\b Value} a, {\b Value} b)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b Value} {\b operator/} ({\b Value} a, {\b Value} b)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b Value} {\b operator-} ({\b Value} a)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b operator>} ({\b Value} operand1, {\b Value} operand2)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b operator<} ({\b Value} operand1, {\b Value} operand2)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b operator>=} ({\b Value} operand1, {\b Value} operand2)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b operator<=} ({\b Value} operand1, {\b Value} operand2)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static readonly {\b Value} {\b NULL} = new {\b Value}()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Value.Type} {\b type}{\f2  [get, set]}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b numberValue}{\f2  [get, set]}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b variableName}{\f2  [get, set]}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b stringValue}{\f2  [get, set]}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b boolValue}{\f2  [get, set]}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
object {\b backingValue}{\f2  [get]}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b AsNumber}{\f2  [get]}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b AsBool}{\f2  [get]}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b AsString}{\f2  [get]}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Enumeration Documentation\par
\pard\plain 
{\xe \v Type\:Yarn::Value}
{\xe \v Yarn::Value\:Type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b Yarn.Value.Type}}}
\par
{\bkmkstart AAAAAAAAWA}
{\bkmkend AAAAAAAAWA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v Number\:Yarn::Value}
{\xe \v Yarn::Value\:Number}
{\b {\i Number{\bkmkstart AAAAAAAAWB}
{\bkmkend AAAAAAAAWB}
}}  \par
{\xe \v String\:Yarn::Value}
{\xe \v Yarn::Value\:String}
{\b {\i String{\bkmkstart AAAAAAAAWC}
{\bkmkend AAAAAAAAWC}
}}  \par
{\xe \v Bool\:Yarn::Value}
{\xe \v Yarn::Value\:Bool}
{\b {\i Bool{\bkmkstart AAAAAAAAWD}
{\bkmkend AAAAAAAAWD}
}}  \par
{\xe \v Variable\:Yarn::Value}
{\xe \v Yarn::Value\:Variable}
{\b {\i Variable{\bkmkstart AAAAAAAAWE}
{\bkmkend AAAAAAAAWE}
}}  \par
{\xe \v Null\:Yarn::Value}
{\xe \v Yarn::Value\:Null}
{\b {\i Null{\bkmkstart AAAAAAAAWF}
{\bkmkend AAAAAAAAWF}
}}  \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 10                          \{\par
11             Number,  // a constant number\par
12             String,  // a string\par
13             Bool,    // a boolean value\par
14             Variable, // the name of a variable; will be expanded at runtime\par
15             Null,    // the null value\par
16         \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Value\:Yarn::Value}
{\xe \v Yarn::Value\:Value}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Yarn.Value.Value ()}}
\par
{\bkmkstart AAAAAAAAWG}
{\bkmkend AAAAAAAAWG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 99 : this(null) \{ \}\par
}
}
{\xe \v Value\:Yarn::Value}
{\xe \v Yarn::Value\:Value}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Yarn.Value.Value (object {\i value})}}
\par
{\bkmkstart AAAAAAAAWH}
{\bkmkend AAAAAAAAWH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 103         \{\par
104             // Copy an existing value\par
105             if (typeof(Value).IsInstanceOfType(value)) \{\par
106                 var otherValue = value as Value;\par
107                 type = otherValue.type;\par
108                 switch (type) \{\par
109                 case Type.Number:\par
110                     numberValue = otherValue.numberValue;\par
111                     break;\par
112                 case Type.String:\par
113                     stringValue = otherValue.stringValue;\par
114                     break;\par
115                 case Type.Bool:\par
116                     boolValue = otherValue.boolValue;\par
117                     break;\par
118                 case Type.Variable:\par
119                     variableName = otherValue.variableName;\par
120                     break;\par
121                 case Type.Null:\par
122                     break;\par
123                 default:\par
124                     throw new ArgumentOutOfRangeException ();\par
125                 \}\par
126                 return;\par
127             \}\par
128             if (value == null) \{\par
129                 type = Type.Null;\par
130                 return;\par
131             \}\par
132             if (value.GetType() == typeof(string) ) \{\par
133                 type = Type.String;\par
134                 stringValue = (string)value;\par
135                 return;\par
136             \}\par
137             if (value.GetType() == typeof(int) ||\par
138                 value.GetType() == typeof(float) ||\par
139                 value.GetType() == typeof(double)) \{\par
140                 type = Type.Number;\par
141                 numberValue = (float)value;\par
142                 return;\par
143             \}\par
144             if (value.GetType() == typeof(bool) ) \{\par
145                 type = Type.Bool;\par
146                 boolValue = (bool)value;\par
147                 return;\par
148             \}\par
149             var error = string.Format("Attempted to create a Value using a \{0\}; currently, " +\par
150                 "Values can only be numbers, strings, bools or null.", value.GetType().Name);\par
151             throw new YarnException(error);\par
152         \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v CompareTo\:Yarn::Value}
{\xe \v Yarn::Value\:CompareTo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual int Yarn.Value.CompareTo (object {\i obj}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAWI}
{\bkmkend AAAAAAAAWI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 154                                                  \{\par
155             if (obj == null) return 1;\par
156 \par
157             // soft, fast coercion\par
158             var other = obj as Value;\par
159 \par
160             // not a value\par
161             if( other == null ) throw new ArgumentException("Object is not a Value");\par
162 \par
163             // it is a value!\par
164             return this.CompareTo(other);\par
165         \}\par
}
}
{\xe \v CompareTo\:Yarn::Value}
{\xe \v Yarn::Value\:CompareTo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual int Yarn.Value.CompareTo ({\b Value} {\i other}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAWJ}
{\bkmkend AAAAAAAAWJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 167                                                   \{\par
168             if (other == null) \{\par
169                 return 1;\par
170             \}\par
171 \par
172             if (other.type == this.type) \{\par
173                 switch (this.type) \{\par
174                 case Type.Null:\par
175                     return 0;\par
176                 case Type.String:\par
177                     return this.stringValue.CompareTo (other.stringValue);\par
178                 case Type.Number:\par
179                     return this.numberValue.CompareTo (other.numberValue);\par
180                 case Type.Bool:\par
181                     return this.boolValue.CompareTo (other.boolValue);\par
182                 \}\par
183             \}\par
184 \par
185             // try to do a string test at that point!\par
186             return this.AsString.CompareTo(other.AsString);\par
187         \}\par
}
}
{\xe \v Equals\:Yarn::Value}
{\xe \v Yarn::Value\:Equals}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override bool Yarn.Value.Equals (object {\i obj})}}
\par
{\bkmkstart AAAAAAAAWK}
{\bkmkend AAAAAAAAWK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 190         \{\par
191             if (obj == null || GetType() != obj.GetType()) \{\par
192                 return false;\par
193             \}\par
194 \par
195             var other = (Value)obj;\par
196 \par
197             switch (this.type) \{\par
198             case Type.Number:\par
199                 return this.AsNumber == other.AsNumber;\par
200             case Type.String:\par
201                 return this.AsString == other.AsString;\par
202             case Type.Bool:\par
203                 return this.AsBool == other.AsBool;\par
204             case Type.Null:\par
205                 return other.type == Type.Null || other.AsNumber == 0 || other.AsBool == false;\par
206             default:\par
207                 throw new ArgumentOutOfRangeException ();\par
208             \}\par
209 \par
210         \}\par
}
}
{\xe \v GetHashCode\:Yarn::Value}
{\xe \v Yarn::Value\:GetHashCode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override int Yarn.Value.GetHashCode ()}}
\par
{\bkmkstart AAAAAAAAWL}
{\bkmkend AAAAAAAAWL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 214         \{\par
215             var backing = this.backingValue;\par
216 \par
217             // TODO: yeah hay maybe fix this\par
218             if( backing != null ) \{\par
219                 return backing.GetHashCode();\par
220             \}\par
221 \par
222             return 0;\par
223         \}\par
}
}
{\xe \v operator*\:Yarn::Value}
{\xe \v Yarn::Value\:operator*}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b Value} Yarn.Value.operator* ({\b Value} {\i a}, {\b Value} {\i b}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAWM}
{\bkmkend AAAAAAAAWM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 272                                                          \{\par
273             if (a.type == Type.Number && (b.type == Type.Number || b.type == Type.Null) ||\par
274                 b.type == Type.Number && (a.type == Type.Number || a.type == Type.Null)\par
275             ) \{\par
276                 return new Value( a.AsNumber * b.AsNumber );\par
277             \}\par
278 \par
279             throw new System.ArgumentException(\par
280                 string.Format("Cannot multiply types \{0\} and \{1\}.", a.type, b.type )\par
281             );\par
282         \}\par
}
}
{\xe \v operator+\:Yarn::Value}
{\xe \v Yarn::Value\:operator+}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b Value} Yarn.Value.operator+ ({\b Value} {\i a}, {\b Value} {\i b}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAWN}
{\bkmkend AAAAAAAAWN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 230                                                          \{\par
231             // catches:\par
232             // undefined + string\par
233             // number + string\par
234             // string + string\par
235             // bool + string\par
236             // null + string\par
237             if (a.type == Type.String || b.type == Type.String ) \{\par
238                 // we're headed for string town!\par
239                 return new Value( a.AsString + b.AsString );\par
240             \}\par
241 \par
242             // catches:\par
243             // number + number\par
244             // bool (=> 0 or 1) + number\par
245             // null (=> 0) + number\par
246             // bool (=> 0 or 1) + bool (=> 0 or 1)\par
247             // null (=> 0) + null (=> 0)\par
248             if ((a.type == Type.Number || b.type == Type.Number) ||\par
249                 (a.type == Type.Bool && b.type == Type.Bool) ||\par
250                 (a.type == Type.Null && b.type == Type.Null)\par
251             ) \{\par
252                 return new Value( a.AsNumber + b.AsNumber );\par
253             \}\par
254 \par
255             throw new System.ArgumentException(\par
256                 string.Format("Cannot add types \{0\} and \{1\}.", a.type, b.type )\par
257             );\par
258         \}\par
}
}
{\xe \v operator-\:Yarn::Value}
{\xe \v Yarn::Value\:operator-}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b Value} Yarn.Value.operator- ({\b Value} {\i a}, {\b Value} {\i b}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAWO}
{\bkmkend AAAAAAAAWO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 260                                                          \{\par
261             if (a.type == Type.Number && (b.type == Type.Number || b.type == Type.Null) ||\par
262                 b.type == Type.Number && (a.type == Type.Number || a.type == Type.Null)\par
263             ) \{\par
264                 return new Value( a.AsNumber - b.AsNumber );\par
265             \}\par
266 \par
267             throw new System.ArgumentException(\par
268                 string.Format("Cannot subtract types \{0\} and \{1\}.", a.type, b.type )\par
269             );\par
270         \}\par
}
}
{\xe \v operator-\:Yarn::Value}
{\xe \v Yarn::Value\:operator-}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b Value} Yarn.Value.operator- ({\b Value} {\i a}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAWP}
{\bkmkend AAAAAAAAWP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 296                                                 \{\par
297             if( a.type == Type.Number ) \{\par
298                 return new Value( -a.AsNumber );\par
299             \}\par
300             if (a.type == Type.Null &&\par
301                 a.type == Type.String &&\par
302                (a.AsString == null || a.AsString.Trim() == "")\par
303             ) \{\par
304                 return new Value( -0 );\par
305             \}\par
306             return new Value( float.NaN );\par
307         \}\par
}
}
{\xe \v operator/\:Yarn::Value}
{\xe \v Yarn::Value\:operator/}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b Value} Yarn.Value.operator/ ({\b Value} {\i a}, {\b Value} {\i b}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAWQ}
{\bkmkend AAAAAAAAWQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 284                                                          \{\par
285             if (a.type == Type.Number && (b.type == Type.Number || b.type == Type.Null) ||\par
286                 b.type == Type.Number && (a.type == Type.Number || a.type == Type.Null)\par
287             ) \{\par
288                 return new Value( a.AsNumber / b.AsNumber );\par
289             \}\par
290 \par
291             throw new System.ArgumentException(\par
292                 string.Format("Cannot divide types \{0\} and \{1\}.", a.type, b.type )\par
293             );\par
294         \}\par
}
}
{\xe \v operator<\:Yarn::Value}
{\xe \v Yarn::Value\:operator<}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static bool Yarn.Value.operator< ({\b Value} {\i operand1}, {\b Value} {\i operand2}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAWR}
{\bkmkend AAAAAAAAWR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 317         \{\par
318             return operand1.CompareTo(operand2) == -1;\par
319         \}\par
}
}
{\xe \v operator<=\:Yarn::Value}
{\xe \v Yarn::Value\:operator<=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static bool Yarn.Value.operator<= ({\b Value} {\i operand1}, {\b Value} {\i operand2}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAWS}
{\bkmkend AAAAAAAAWS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 329         \{\par
330             return operand1.CompareTo(operand2) <= 0;\par
331         \}\par
}
}
{\xe \v operator>\:Yarn::Value}
{\xe \v Yarn::Value\:operator>}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static bool Yarn.Value.operator> ({\b Value} {\i operand1}, {\b Value} {\i operand2}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAWT}
{\bkmkend AAAAAAAAWT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 311         \{\par
312             return operand1.CompareTo(operand2) == 1;\par
313         \}\par
}
}
{\xe \v operator>=\:Yarn::Value}
{\xe \v Yarn::Value\:operator>=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static bool Yarn.Value.operator>= ({\b Value} {\i operand1}, {\b Value} {\i operand2}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAWU}
{\bkmkend AAAAAAAAWU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 323         \{\par
324             return operand1.CompareTo(operand2) >= 0;\par
325         \}\par
}
}
{\xe \v ToString\:Yarn::Value}
{\xe \v Yarn::Value\:ToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string Yarn.Value.ToString ()}}
\par
{\bkmkstart AAAAAAAAWV}
{\bkmkend AAAAAAAAWV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 226         \{\par
227             return string.Format ("[Value: type=\{0\}, AsNumber=\{1\}, AsBool=\{2\}, AsString=\{3\}]", type, AsNumber, AsBool, AsString);\par
228         \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v NULL\:Yarn::Value}
{\xe \v Yarn::Value\:NULL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
readonly {\b Value} Yarn.Value.NULL = new {\b Value}(){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAWW}
{\bkmkend AAAAAAAAWW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v AsBool\:Yarn::Value}
{\xe \v Yarn::Value\:AsBool}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Yarn.Value.AsBool{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAWX}
{\bkmkend AAAAAAAAWX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v AsNumber\:Yarn::Value}
{\xe \v Yarn::Value\:AsNumber}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float Yarn.Value.AsNumber{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAWY}
{\bkmkend AAAAAAAAWY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v AsString\:Yarn::Value}
{\xe \v Yarn::Value\:AsString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string Yarn.Value.AsString{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAWZ}
{\bkmkend AAAAAAAAWZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v backingValue\:Yarn::Value}
{\xe \v Yarn::Value\:backingValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
object Yarn.Value.backingValue{\f2 [get]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAXA}
{\bkmkend AAAAAAAAXA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v boolValue\:Yarn::Value}
{\xe \v Yarn::Value\:boolValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Yarn.Value.boolValue{\f2 [get]}, {\f2 [set]}, {\f2 [package]}}}
\par
{\bkmkstart AAAAAAAAXB}
{\bkmkend AAAAAAAAXB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v numberValue\:Yarn::Value}
{\xe \v Yarn::Value\:numberValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float Yarn.Value.numberValue{\f2 [get]}, {\f2 [set]}, {\f2 [package]}}}
\par
{\bkmkstart AAAAAAAAXC}
{\bkmkend AAAAAAAAXC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v stringValue\:Yarn::Value}
{\xe \v Yarn::Value\:stringValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string Yarn.Value.stringValue{\f2 [get]}, {\f2 [set]}, {\f2 [package]}}}
\par
{\bkmkstart AAAAAAAAXD}
{\bkmkend AAAAAAAAXD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v type\:Yarn::Value}
{\xe \v Yarn::Value\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Value.Type} Yarn.Value.type{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAXE}
{\bkmkend AAAAAAAAXE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v variableName\:Yarn::Value}
{\xe \v Yarn::Value\:variableName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string Yarn.Value.variableName{\f2 [get]}, {\f2 [set]}, {\f2 [package]}}}
\par
{\bkmkstart AAAAAAAAXF}
{\bkmkend AAAAAAAAXF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
YarnSpinner/{\b Value.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Yarn.Parser.ValueNode Class Reference\par \pard\plain 
{\tc\tcl2 \v Yarn.Parser.ValueNode}
{\xe \v Yarn.Parser.ValueNode}
{\bkmkstart AAAAAAAAVH}
{\bkmkend AAAAAAAAVH}
Inheritance diagram for Yarn.Parser.ValueNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d9/d0d/a00298.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for Yarn.Parser.ValueNode:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/d95/a00299.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b ToString} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Package Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueNode} ({\b ParseNode} {\b parent}, {\b Token} t)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValueNode} ({\b ParseNode} {\b parent}, {\b Parser} p)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
override string {\b PrintTree} (int indentLevel)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Node} {\b NodeParent} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Value} {\b value}{\f2  [get, set]}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b UseToken} ({\b Token} t)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v ValueNode\:Yarn::Parser::ValueNode}
{\xe \v Yarn::Parser::ValueNode\:ValueNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Yarn.Parser.ValueNode.ValueNode ({\b ParseNode} {\i parent}, {\b Token} {\i t}){\f2 [package]}}}
\par
{\bkmkstart AAAAAAAAVI}
{\bkmkend AAAAAAAAVI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 701                                                           : base (parent, null) \{\par
702                 UseToken(t);\par
703             \}\par
}
}
{\xe \v ValueNode\:Yarn::Parser::ValueNode}
{\xe \v Yarn::Parser::ValueNode\:ValueNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Yarn.Parser.ValueNode.ValueNode ({\b ParseNode} {\i parent}, {\b Parser} {\i p}){\f2 [package]}}}
\par
{\bkmkstart AAAAAAAAVJ}
{\bkmkend AAAAAAAAVJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 706                                                            : base(parent, p) \{\par
707 \par
708                 Token t = p.ExpectSymbol(TokenType.Number, TokenType.Variable, TokenType.String);\par
709 \par
710                 UseToken(t);\par
711             \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v NodeParent\:Yarn::Parser::ValueNode}
{\xe \v Yarn::Parser::ValueNode\:NodeParent}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Node} Yarn.Parser.ParseNode.NodeParent (){\f2 [package]}, {\f2 [inherited]}}}
\par
{\bkmkstart AAAAAAAARA}
{\bkmkend AAAAAAAARA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 116                                        \{\par
117                 var node = this;\par
118 \par
119                 do \{\par
120                     if (node is Node) \{\par
121                         return node as Node;\par
122                     \}\par
123                     node = node.parent;\par
124                 \} while (node \par
125                     != null);                   \par
126 \par
127                 return null;\par
128             \}\par
}
}
{\xe \v PrintTree\:Yarn::Parser::ValueNode}
{\xe \v Yarn::Parser::ValueNode\:PrintTree}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string Yarn.Parser.ValueNode.PrintTree (int {\i indentLevel}){\f2 [package]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAUA}
{\bkmkend AAAAAAAAUA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Yarn.Parser.ParseNode} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAARC \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 714             \{\par
715                 switch (value.type) \{\par
716                 case Value.Type.Number:\par
717                     return Tab (indentLevel, value.numberValue.ToString());\par
718                 case Value.Type.String:\par
719                     return Tab(indentLevel, String.Format("\\"\{0\}\\"", value.stringValue));\par
720                 case Value.Type.Bool:\par
721                     return Tab (indentLevel, value.boolValue.ToString());\par
722                 case Value.Type.Variable:\par
723                     return Tab (indentLevel, value.variableName);\par
724                 case Value.Type.Null:\par
725                     return Tab (indentLevel, "(null)");\par
726                 \}\par
727                 throw new ArgumentException ();\par
728             \}\par
}
}
{\xe \v ToString\:Yarn::Parser::ValueNode}
{\xe \v Yarn::Parser::ValueNode\:ToString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
override string Yarn.Parser.ParseNode.ToString (){\f2 [inherited]}}}
\par
{\bkmkstart AAAAAAAARD}
{\bkmkend AAAAAAAARD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 111             \{\par
112                 return this.GetType ().Name;\par
113             \}\par
}
}
{\xe \v UseToken\:Yarn::Parser::ValueNode}
{\xe \v Yarn::Parser::ValueNode\:UseToken}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Yarn.Parser.ValueNode.UseToken ({\b Token} {\i t}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAVK}
{\bkmkend AAAAAAAAVK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 664                                            \{\par
665                 // Store the value depending on token's type\par
666                 switch (t.type) \{\par
667                 case TokenType.Number:\par
668 \par
669                     value = new Value (float.Parse (t.value as String));\par
670 \par
671                     break;\par
672                 case TokenType.String:\par
673 \par
674                     value = new Value (t.value as String);\par
675                     break;\par
676 \par
677                 case TokenType.False:\par
678 \par
679                     value = new Value (false);\par
680 \par
681                     break;\par
682                 case TokenType.True:\par
683 \par
684                     value = new Value (true);\par
685 \par
686                     break;\par
687                 case TokenType.Variable:\par
688                     value = new Value ();\par
689                     value.type = Value.Type.Variable;\par
690                     value.variableName = t.value as String;\par
691                     break;\par
692                 case TokenType.Null:\par
693                     value = Value.NULL;\par
694                     break;\par
695                 default:\par
696                     throw ParseException.Make (t, "Invalid token type " + t.ToString ());\par
697                 \}\par
698             \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v value\:Yarn::Parser::ValueNode}
{\xe \v Yarn::Parser::ValueNode\:value}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Value} Yarn.Parser.ValueNode.value{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAVL}
{\bkmkend AAAAAAAAVL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
YarnSpinner/{\b Parser.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Yarn.VariableStorage Interface Reference\par \pard\plain 
{\tc\tcl2 \v Yarn.VariableStorage}
{\xe \v Yarn.VariableStorage}
{\bkmkstart AAAAAAAAKX}
{\bkmkend AAAAAAAAKX}
Inheritance diagram for Yarn.VariableStorage:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d5/d13/a00205.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for Yarn.VariableStorage:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d5/df1/a00206.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SetNumber} (string variableName, float number)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b GetNumber} (string variableName)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SetValue} (string variableName, {\b Value} value)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Value} {\b GetValue} (string variableName)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Clear} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Clear\:Yarn::VariableStorage}
{\xe \v Yarn::VariableStorage\:Clear}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Yarn.VariableStorage.Clear ()}}
\par
{\bkmkstart AAAAAAAAKY}
{\bkmkend AAAAAAAAKY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b Yarn.YarnSpinnerConsole.ConsoleRunnerImplementation} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKZ \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Yarn.Unity.VariableStorageBehaviour} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAACQ \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Yarn.MemoryVariableStore} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAALA \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b ExampleVariableStorage} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAACP \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b Yarn.BaseVariableStorage} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAALB \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v GetNumber\:Yarn::VariableStorage}
{\xe \v Yarn::VariableStorage\:GetNumber}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float Yarn.VariableStorage.GetNumber (string {\i variableName})}}
\par
{\bkmkstart AAAAAAAACS}
{\bkmkend AAAAAAAACS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b Yarn.YarnSpinnerConsole.ConsoleRunnerImplementation} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAALC \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Yarn.Unity.VariableStorageBehaviour} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAACR \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b Yarn.BaseVariableStorage} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAALD \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v GetValue\:Yarn::VariableStorage}
{\xe \v Yarn::VariableStorage\:GetValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Value} Yarn.VariableStorage.GetValue (string {\i variableName})}}
\par
{\bkmkstart AAAAAAAALE}
{\bkmkend AAAAAAAALE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b Yarn.YarnSpinnerConsole.ConsoleRunnerImplementation} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAALF \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Yarn.Unity.VariableStorageBehaviour} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAACU \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Yarn.MemoryVariableStore} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAALG \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b ExampleVariableStorage} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAACT \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b Yarn.BaseVariableStorage} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAALH \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v SetNumber\:Yarn::VariableStorage}
{\xe \v Yarn::VariableStorage\:SetNumber}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Yarn.VariableStorage.SetNumber (string {\i variableName}, float {\i number})}}
\par
{\bkmkstart AAAAAAAACY}
{\bkmkend AAAAAAAACY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b Yarn.YarnSpinnerConsole.ConsoleRunnerImplementation} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAALI \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Yarn.Unity.VariableStorageBehaviour} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAACX \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b Yarn.BaseVariableStorage} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAALJ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v SetValue\:Yarn::VariableStorage}
{\xe \v Yarn::VariableStorage\:SetValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Yarn.VariableStorage.SetValue (string {\i variableName}, {\b Value} {\i value})}}
\par
{\bkmkstart AAAAAAAALK}
{\bkmkend AAAAAAAALK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b Yarn.YarnSpinnerConsole.ConsoleRunnerImplementation} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAALL \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Yarn.Unity.VariableStorageBehaviour} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAADA \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b Yarn.MemoryVariableStore} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAALM \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b ExampleVariableStorage} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAACZ \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b Yarn.BaseVariableStorage} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAALN \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this interface was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
YarnSpinner/{\b Dialogue.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Yarn.Unity.VariableStorageBehaviour Class Reference\par \pard\plain 
{\tc\tcl2 \v Yarn.Unity.VariableStorageBehaviour}
{\xe \v Yarn.Unity.VariableStorageBehaviour}
{\bkmkstart AAAAAAABBU}
{\bkmkend AAAAAAABBU}
Inheritance diagram for Yarn.Unity.VariableStorageBehaviour:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d0/d01/a00339.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for Yarn.Unity.VariableStorageBehaviour:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/df1/a00340.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b SetNumber} (string variableName, float number)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b GetNumber} (string variableName)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b Value} {\b GetValue} (string variableName)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b SetValue} (string variableName, {\b Value} value)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual void {\b Clear} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
abstract void {\b ResetToDefaults} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Clear\:Yarn::Unity::VariableStorageBehaviour}
{\xe \v Yarn::Unity::VariableStorageBehaviour\:Clear}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void Yarn.Unity.VariableStorageBehaviour.Clear (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAACQ}
{\bkmkend AAAAAAAACQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Yarn.VariableStorage} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAKY \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Reimplemented in {\b ExampleVariableStorage} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAACP \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 388         \{\par
389             throw new System.NotImplementedException ();\par
390         \}\par
}
}
{\xe \v GetNumber\:Yarn::Unity::VariableStorageBehaviour}
{\xe \v Yarn::Unity::VariableStorageBehaviour\:GetNumber}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual float Yarn.Unity.VariableStorageBehaviour.GetNumber (string {\i variableName}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAACR}
{\bkmkend AAAAAAAACR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Yarn.VariableStorage} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAACS \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 375         \{\par
376             throw new System.NotImplementedException ();\par
377         \}\par
}
}
{\xe \v GetValue\:Yarn::Unity::VariableStorageBehaviour}
{\xe \v Yarn::Unity::VariableStorageBehaviour\:GetValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual {\b Value} Yarn.Unity.VariableStorageBehaviour.GetValue (string {\i variableName}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAACU}
{\bkmkend AAAAAAAACU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Yarn.VariableStorage} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAALE \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Reimplemented in {\b ExampleVariableStorage} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAACT \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 379                                                            \{\par
380             return new Yarn.Value(this.GetNumber(variableName));\par
381         \}\par
}
}
{\xe \v ResetToDefaults\:Yarn::Unity::VariableStorageBehaviour}
{\xe \v Yarn::Unity::VariableStorageBehaviour\:ResetToDefaults}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
abstract void Yarn.Unity.VariableStorageBehaviour.ResetToDefaults (){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAACW}
{\bkmkend AAAAAAAACW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implemented in {\b ExampleVariableStorage} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAACV \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v SetNumber\:Yarn::Unity::VariableStorageBehaviour}
{\xe \v Yarn::Unity::VariableStorageBehaviour\:SetNumber}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void Yarn.Unity.VariableStorageBehaviour.SetNumber (string {\i variableName}, float {\i number}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAACX}
{\bkmkend AAAAAAAACX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Yarn.VariableStorage} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAACY \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 370         \{\par
371             throw new System.NotImplementedException ();\par
372         \}\par
}
}
{\xe \v SetValue\:Yarn::Unity::VariableStorageBehaviour}
{\xe \v Yarn::Unity::VariableStorageBehaviour\:SetValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual void Yarn.Unity.VariableStorageBehaviour.SetValue (string {\i variableName}, {\b Value} {\i value}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAADA}
{\bkmkend AAAAAAAADA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implements {\b Yarn.VariableStorage} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAALK \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Reimplemented in {\b ExampleVariableStorage} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAACZ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 383                                                                        \{\par
384             this.SetNumber(variableName, value.AsNumber);\par
385         \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Unity/Assets/Yarn Spinner/Code/{\b DialogueRunner.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Yarn.VirtualMachine Class Reference\par \pard\plain 
{\tc\tcl2 \v Yarn.VirtualMachine}
{\xe \v Yarn.VirtualMachine}
{\bkmkstart AAAAAAAAXG}
{\bkmkend AAAAAAAAXG}
Collaboration diagram for Yarn.VirtualMachine:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d2/d71/a00309.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b SpecialVariables}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b State}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Types\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b ExecutionState} \{ {\b ExecutionState.Stopped}, 
{\b ExecutionState.WaitingOnOptionSelection}, 
{\b ExecutionState.Running}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
delegate void {\b LineHandler} ({\b Dialogue.LineResult} line)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
delegate void {\b OptionsHandler} ({\b Dialogue.OptionSetResult} options)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
delegate void {\b CommandHandler} ({\b Dialogue.CommandResult} command)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
delegate void {\b NodeCompleteHandler} ({\b Dialogue.NodeCompleteResult} complete)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b SetNode} (string nodeName)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Stop} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b SerializeVM} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b DeserializeVM} (string encoded)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b LineHandler} {\b lineHandler}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b OptionsHandler} {\b optionsHandler}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CommandHandler} {\b commandHandler}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b NodeCompleteHandler} {\b nodeCompleteHandler}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Package Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b VirtualMachine} ({\b Dialogue} d, {\b Program} p)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b RunNext} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b FindInstructionPointForLabel} (string labelName)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b RunInstruction} ({\b Instruction} i)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b currentNodeName}{\f2  [get]}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ExecutionState} {\b executionState}{\f2  [get, set]}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ResetState} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Dialogue} {\b dialogue}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Program} {\b program}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b State} {\b state} = new {\b State}()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Random {\b random} = new Random()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ExecutionState} {\b _executionState}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Node} {\b currentNode}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b STATE_VERSION_NUMBER} = 1\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Class Documentation\par
\pard\plain 
{\xe \v Yarn::VirtualMachine::SpecialVariables}
{\bkmkstart AAAAAAAACJ}
{\bkmkend AAAAAAAACJ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
class Yarn::VirtualMachine::SpecialVariables\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
Collaboration diagram for Yarn.VirtualMachine.SpecialVariables:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d5/de9/a00176.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Class Members:\par}
\pard\plain \s60\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr const string{\bkmkstart AAAAAAAACK}
{\bkmkend AAAAAAAACK}
\cell }{ShuffleOptions\cell }{\cell }{\row }
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Enumeration Documentation\par
\pard\plain 
{\xe \v ExecutionState\:Yarn::VirtualMachine}
{\xe \v Yarn::VirtualMachine\:ExecutionState}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b Yarn.VirtualMachine.ExecutionState}}}
\par
{\bkmkstart AAAAAAAAXH}
{\bkmkend AAAAAAAAXH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{{{\b \par
Enumerator}}\par
\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid {\xe \v Stopped\:Yarn::VirtualMachine}
{\xe \v Yarn::VirtualMachine\:Stopped}
{\b {\i Stopped{\bkmkstart AAAAAAAAXI}
{\bkmkend AAAAAAAAXI}
}}  \par
{\xe \v WaitingOnOptionSelection\:Yarn::VirtualMachine}
{\xe \v Yarn::VirtualMachine\:WaitingOnOptionSelection}
{\b {\i WaitingOnOptionSelection{\bkmkstart AAAAAAAAXJ}
{\bkmkend AAAAAAAAXJ}
}}  \par
{\xe \v Running\:Yarn::VirtualMachine}
{\xe \v Yarn::VirtualMachine\:Running}
{\b {\i Running{\bkmkstart AAAAAAAAXK}
{\bkmkend AAAAAAAAXK}
}}  \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 86                                    \{\par
87             Stopped,\par
88             WaitingOnOptionSelection,\par
89             Running\par
90         \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v VirtualMachine\:Yarn::VirtualMachine}
{\xe \v Yarn::VirtualMachine\:VirtualMachine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Yarn.VirtualMachine.VirtualMachine ({\b Dialogue} {\i d}, {\b Program} {\i p}){\f2 [package]}}}
\par
{\bkmkstart AAAAAAAAXL}
{\bkmkend AAAAAAAAXL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 52         \{\par
53             program = p;\par
54             dialogue = d;\par
55             state = new State ();\par
56         \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v CommandHandler\:Yarn::VirtualMachine}
{\xe \v Yarn::VirtualMachine\:CommandHandler}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
delegate void Yarn.VirtualMachine.CommandHandler ({\b Dialogue.CommandResult} {\i command})}}
\par
{\bkmkstart AAAAAAAAXM}
{\bkmkend AAAAAAAAXM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DeserializeVM\:Yarn::VirtualMachine}
{\xe \v Yarn::VirtualMachine\:DeserializeVM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Yarn.VirtualMachine.DeserializeVM (string {\i encoded})}}
\par
{\bkmkstart AAAAAAAAXN}
{\bkmkend AAAAAAAAXN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 143         \{\par
144             JObject jstate = JObject.Parse(encoded);\par
145             /*int version = jstate.Value<int>("version");//If this ever becomes not a Json object or doesn't have a "version" field we're fucked but it's probably fine! *flails arms*\par
146             if (version < 2) \{\par
147                 //fast-forward from version 1 to 2\par
148                 jstate["version"] = 2;\par
149             \}*///when the State format changes, creat fast-forward code here (1->2, 2->3 etc, so nobody has to figure out how to go from version 1->17 all at once). If it changes a lot, consider making a more intelligent system with a swanky delegate list that calls the appropriate functions to get to STATE_VERSION_NUMBER\par
150             state = jstate.ToObject<State>();\par
151         \}\par
}
}
{\xe \v FindInstructionPointForLabel\:Yarn::VirtualMachine}
{\xe \v Yarn::VirtualMachine\:FindInstructionPointForLabel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Yarn.VirtualMachine.FindInstructionPointForLabel (string {\i labelName}){\f2 [package]}}}
\par
{\bkmkstart AAAAAAAAXO}
{\bkmkend AAAAAAAAXO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 180                                                                     \{\par
181 \par
182             if (currentNode.labels.ContainsKey(labelName) == false) \{\par
183                 // Couldn't find the node..\par
184                 throw new IndexOutOfRangeException ("Unknown label " +\par
185                     labelName + " in node " + state.currentNodeName);\par
186             \}\par
187 \par
188             return currentNode.labels [labelName];\par
189 \par
190 \par
191         \}\par
}
}
{\xe \v LineHandler\:Yarn::VirtualMachine}
{\xe \v Yarn::VirtualMachine\:LineHandler}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
delegate void Yarn.VirtualMachine.LineHandler ({\b Dialogue.LineResult} {\i line})}}
\par
{\bkmkstart AAAAAAAAXP}
{\bkmkend AAAAAAAAXP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v NodeCompleteHandler\:Yarn::VirtualMachine}
{\xe \v Yarn::VirtualMachine\:NodeCompleteHandler}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
delegate void Yarn.VirtualMachine.NodeCompleteHandler ({\b Dialogue.NodeCompleteResult} {\i complete})}}
\par
{\bkmkstart AAAAAAAAXQ}
{\bkmkend AAAAAAAAXQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v OptionsHandler\:Yarn::VirtualMachine}
{\xe \v Yarn::VirtualMachine\:OptionsHandler}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
delegate void Yarn.VirtualMachine.OptionsHandler ({\b Dialogue.OptionSetResult} {\i options})}}
\par
{\bkmkstart AAAAAAAAXR}
{\bkmkend AAAAAAAAXR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ResetState\:Yarn::VirtualMachine}
{\xe \v Yarn::VirtualMachine\:ResetState}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Yarn.VirtualMachine.ResetState (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAXS}
{\bkmkend AAAAAAAAXS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 58                           \{\par
59             state = new State();\par
60         \}\par
}
}
{\xe \v RunInstruction\:Yarn::VirtualMachine}
{\xe \v Yarn::VirtualMachine\:RunInstruction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Yarn.VirtualMachine.RunInstruction ({\b Instruction} {\i i}){\f2 [package]}}}
\par
{\bkmkstart AAAAAAAAXT}
{\bkmkend AAAAAAAAXT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 195                                                     \{\par
196             switch (i.operation) \{\par
197             case ByteCode.Label:\par
198 \par
199                 // No-op; used as a destination for JumpTo and Jump.\par
200                 break;\par
201             case ByteCode.JumpTo:\par
202 \par
203                 // Jumps to a named label\par
204                 state.programCounter = FindInstructionPointForLabel ((string)i.operandA);\par
205 \par
206                 break;\par
207             case ByteCode.RunLine:\par
208 \par
209                 // Looks up a string from the string table and\par
210                 // passes it to the client as a line\par
211 \par
212                 var lineText = program.GetString ((string)i.operandA);\par
213 \par
214                 lineHandler (new Dialogue.LineResult (lineText));\par
215 \par
216                 break;\par
217             case ByteCode.RunCommand:\par
218 \par
219                 // Passes a string to the client as a custom command\par
220                 commandHandler (\par
221                     new Dialogue.CommandResult ((string)i.operandA)\par
222                 );\par
223 \par
224                 break;\par
225             case ByteCode.PushString:\par
226 \par
227                 // Pushes a string value onto the stack; the operand\par
228                 // is an index into the string table, so that's looked up\par
229                 // first.\par
230                 state.PushValue (program.GetString ((string)i.operandA));\par
231 \par
232                 break;\par
233             case ByteCode.PushNumber:\par
234 \par
235                 // Pushes a number onto the stack.\par
236                 state.PushValue (Convert.ToSingle(i.operandA));\par
237 \par
238                 break;\par
239             case ByteCode.PushBool:\par
240 \par
241                 // Pushes a boolean value onto the stack.\par
242                 state.PushValue (Convert.ToBoolean(i.operandA));\par
243 \par
244                 break;\par
245             case ByteCode.PushNull:\par
246 \par
247                 // Pushes a null value onto the stack.\par
248                 state.PushValue (Value.NULL);\par
249 \par
250                 break;\par
251             case ByteCode.JumpIfFalse:\par
252 \par
253                 // Jumps to a named label if the value on the top of the stack\par
254                 // evaluates to the boolean value 'false'.\par
255                 if (state.PeekValue ().AsBool == false) \{\par
256                     state.programCounter = FindInstructionPointForLabel ((string)i.operandA);\par
257                 \}\par
258                 break;\par
259 \par
260             case ByteCode.Jump:\par
261 \par
262                 // Jumps to a label whose name is on the stack.\par
263                 var jumpDestination = state.PeekValue ().AsString;\par
264                 state.programCounter = FindInstructionPointForLabel (jumpDestination);\par
265 \par
266                 break;\par
267 \par
268             case ByteCode.Pop:\par
269 \par
270                 // Pops a value from the stack.\par
271                 state.PopValue ();\par
272                 break;\par
273 \par
274             case ByteCode.CallFunc:\par
275 \par
276 \par
277                 // Call a function, whose parameters are expected to\par
278                 // be on the stack. Pushes the function's return value,\par
279                 // if it returns one.\par
280                 var functionName = (string)i.operandA;\par
281 \par
282                 var function = dialogue.library.GetFunction (functionName);\par
283                 \{\par
284 \par
285                     var paramCount = function.paramCount;\par
286 \par
287                     // If this function takes "-1" parameters, it is variadic.\par
288                     // Expect the compiler to have placed the number of parameters\par
289                     // actually passed at the top of the stack.\par
290                     if (paramCount == -1) \{\par
291                         paramCount = (int)state.PopValue ().AsNumber;\par
292                     \}\par
293 \par
294                     // Get the parameters, which were pushed in reverse\par
295                     Value[] parameters = new Value[paramCount];\par
296                     for (int param = paramCount - 1; param >= 0; param--) \{\par
297                         parameters [param] = state.PopValue ();\par
298                     \}\par
299 \par
300                     // Invoke the function\par
301                     var result = function.InvokeWithArray (parameters);\par
302 \par
303                     // If the function returns a value, push it\par
304                     if (function.returnsValue) \{\par
305                         state.PushValue (result);\par
306                     \}\par
307                 \}\par
308 \par
309                 break;\par
310             case ByteCode.PushVariable:\par
311 \par
312                 // Get the contents of a variable, push that onto the stack.\par
313                 var variableName = (string)i.operandA;\par
314                 var loadedValue = dialogue.continuity.GetValue (variableName);\par
315                 state.PushValue (loadedValue);\par
316 \par
317                 break;\par
318             case ByteCode.StoreVariable:\par
319 \par
320                 // Store the top value on the stack in a variable.\par
321                 var topValue = state.PeekValue ();\par
322                 var destinationVariableName = (string)i.operandA;\par
323                 dialogue.continuity.SetValue (destinationVariableName, topValue);\par
324 \par
325                 break;\par
326             case ByteCode.Stop:\par
327 \par
328                 // Immediately stop execution, and report that fact.\par
329                 nodeCompleteHandler (new Dialogue.NodeCompleteResult (null));\par
330                 executionState = ExecutionState.Stopped;\par
331 \par
332                 break;\par
333             case ByteCode.RunNode:\par
334 \par
335                 string nodeName;\par
336 \par
337                 if (string.IsNullOrEmpty((string) i.operandA)) \{\par
338                     // Get a string from the stack, and jump to a node with that name.\par
339                      nodeName = state.PeekValue ().AsString;\par
340                 \} else \{\par
341                     // jump straight to the node\par
342                     nodeName = (string)i.operandA;\par
343                 \}\par
344 \par
345                 nodeCompleteHandler (new Dialogue.NodeCompleteResult (nodeName));\par
346                 SetNode (nodeName);\par
347 \par
348 \par
349 \par
350                 break;\par
351             case ByteCode.AddOption:\par
352 \par
353                 // Add an option to the current state.\par
354                 state.currentOptions.Add (new KeyValuePair<string, string> ((string)i.operandA, (string)i.operandB));\par
355 \par
356 \par
357                 break;\par
358             case ByteCode.ShowOptions:\par
359 \par
360                 // If we have no options to show, immediately stop.\par
361                 if (state.currentOptions.Count == 0) \{\par
362                     executionState = ExecutionState.Stopped;\par
363                     nodeCompleteHandler (new Dialogue.NodeCompleteResult (null));\par
364                     break;\par
365                 \}\par
366 \par
367                 // If we have a single option, and it has no label, select it immediately and continue\par
368                 // execution\par
369                 if (state.currentOptions.Count == 1 && state.currentOptions[0].Key == null) \{\par
370                     var destinationNode = state.currentOptions[0].Value;\par
371                     state.PushValue(destinationNode);\par
372                     state.currentOptions.Clear();\par
373                     break;\par
374                 \}\par
375 \par
376                 if (dialogue.continuity.GetValue(SpecialVariables.ShuffleOptions).boolValue) \{\par
377                     // Shuffle the dialog options if needed\par
378                     var n = state.currentOptions.Count;\par
379                     for (int opt1 = 0; opt1 < n; opt1++) \{\par
380                         int opt2 = opt1 + (int)(random.NextDouble () * (n - opt1)); // r.Next(0, state.currentOptions.Count-1);\par
381                         var temp = state.currentOptions [opt2];\par
382                         state.currentOptions [opt2] = state.currentOptions [opt1];\par
383                         state.currentOptions [opt1] = temp;\par
384                     \}\par
385                 \}\par
386 \par
387                 // Otherwise, present the list of options to the user and let them pick\par
388                 var optionStrings = new List<string> ();\par
389 \par
390                 foreach (var option in state.currentOptions) \{\par
391                     optionStrings.Add (program.GetString (option.Key));\par
392                 \}\par
393 \par
394 \par
395 \par
396                 // We can't continue until our client tell us which option to pick\par
397                 executionState = ExecutionState.WaitingOnOptionSelection;\par
398 \par
399                 // Pass the options set to the client, as well as a delegate for them to call when the\par
400                 // user has made a selection\par
401                 optionsHandler (new Dialogue.OptionSetResult (optionStrings, delegate (int selectedOption) \{\par
402 \par
403                     // we now know what number option was selected; push the corresponding node name\par
404                     // to the stack\par
405                     var destinationNode = state.currentOptions[selectedOption].Value;\par
406                     state.PushValue(destinationNode);\par
407 \par
408                     // We no longer need the accumulated list of options; clear it so that it's\par
409                     // ready for the next one\par
410                     state.currentOptions.Clear();\par
411 \par
412                     // We can now also keep running\par
413                     executionState = ExecutionState.Running;\par
414 \par
415                 \}));\par
416 \par
417                 break;\par
418             default:\par
419 \par
420                 // Whoa, no idea what bytecode this is. Stop the program\par
421                 // and throw an exception.\par
422                 executionState = ExecutionState.Stopped;\par
423                 throw new ArgumentOutOfRangeException ();\par
424             \}\par
425         \}\par
}
}
{\xe \v RunNext\:Yarn::VirtualMachine}
{\xe \v Yarn::VirtualMachine\:RunNext}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Yarn.VirtualMachine.RunNext (){\f2 [package]}}}
\par
{\bkmkstart AAAAAAAAXU}
{\bkmkend AAAAAAAAXU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 154                                 \{\par
155 \par
156             if (executionState == ExecutionState.WaitingOnOptionSelection) \{\par
157                 dialogue.LogErrorMessage ("Cannot continue running dialogue. Still waiting on option selection.");\par
158                 executionState = ExecutionState.Stopped;\par
159                 return;\par
160             \}\par
161 \par
162             if (executionState == ExecutionState.Stopped)\par
163                 executionState = ExecutionState.Running;\par
164 \par
165             Instruction currentInstruction = currentNode.instructions [state.programCounter];\par
166 \par
167             RunInstruction (currentInstruction);\par
168 \par
169             state.programCounter++;\par
170 \par
171             if (state.programCounter >= currentNode.instructions.Count) \{\par
172                 executionState = ExecutionState.Stopped;\par
173                 nodeCompleteHandler (new Dialogue.NodeCompleteResult (null));\par
174                 dialogue.LogDebugMessage ("Run complete.");\par
175             \}\par
176 \par
177         \}\par
}
}
{\xe \v SerializeVM\:Yarn::VirtualMachine}
{\xe \v Yarn::VirtualMachine\:SerializeVM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string Yarn.VirtualMachine.SerializeVM ()}}
\par
{\bkmkstart AAAAAAAAXV}
{\bkmkend AAAAAAAAXV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 135         \{\par
136             JObject jstate = JObject.FromObject(state);\par
137             jstate.Add("version", STATE_VERSION_NUMBER);\par
138             return jstate.ToString();\par
139             //return "lol";\par
140         \}\par
}
}
{\xe \v SetNode\:Yarn::VirtualMachine}
{\xe \v Yarn::VirtualMachine\:SetNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Yarn.VirtualMachine.SetNode (string {\i nodeName})}}
\par
{\bkmkstart AAAAAAAAXW}
{\bkmkend AAAAAAAAXW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 107                                              \{\par
108             if (program.nodes.ContainsKey(nodeName) == false) \{\par
109 \par
110                 var error = "No node named " + nodeName;\par
111                 dialogue.LogErrorMessage(error);\par
112                 executionState = ExecutionState.Stopped;\par
113                 return false;\par
114             \}\par
115 \par
116             dialogue.LogDebugMessage ("Running node " + nodeName);\par
117 \par
118             // Clear the special variables\par
119             dialogue.continuity.SetValue(SpecialVariables.ShuffleOptions, new Value(false));\par
120 \par
121             currentNode = program.nodes [nodeName];\par
122             ResetState ();\par
123             state.currentNodeName = nodeName;\par
124 \par
125             return true;\par
126         \}\par
}
}
{\xe \v Stop\:Yarn::VirtualMachine}
{\xe \v Yarn::VirtualMachine\:Stop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Yarn.VirtualMachine.Stop ()}}
\par
{\bkmkstart AAAAAAAAXX}
{\bkmkend AAAAAAAAXX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 128                            \{\par
129             executionState = ExecutionState.Stopped;\par
130         \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v _executionState\:Yarn::VirtualMachine}
{\xe \v Yarn::VirtualMachine\:_executionState}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ExecutionState} Yarn.VirtualMachine._executionState{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAXY}
{\bkmkend AAAAAAAAXY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v commandHandler\:Yarn::VirtualMachine}
{\xe \v Yarn::VirtualMachine\:commandHandler}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CommandHandler} Yarn.VirtualMachine.commandHandler}}
\par
{\bkmkstart AAAAAAAAXZ}
{\bkmkend AAAAAAAAXZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v currentNode\:Yarn::VirtualMachine}
{\xe \v Yarn::VirtualMachine\:currentNode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Node} Yarn.VirtualMachine.currentNode{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAYA}
{\bkmkend AAAAAAAAYA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v dialogue\:Yarn::VirtualMachine}
{\xe \v Yarn::VirtualMachine\:dialogue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Dialogue} Yarn.VirtualMachine.dialogue{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAYB}
{\bkmkend AAAAAAAAYB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v lineHandler\:Yarn::VirtualMachine}
{\xe \v Yarn::VirtualMachine\:lineHandler}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b LineHandler} Yarn.VirtualMachine.lineHandler}}
\par
{\bkmkstart AAAAAAAAYC}
{\bkmkend AAAAAAAAYC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v nodeCompleteHandler\:Yarn::VirtualMachine}
{\xe \v Yarn::VirtualMachine\:nodeCompleteHandler}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b NodeCompleteHandler} Yarn.VirtualMachine.nodeCompleteHandler}}
\par
{\bkmkstart AAAAAAAAYD}
{\bkmkend AAAAAAAAYD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v optionsHandler\:Yarn::VirtualMachine}
{\xe \v Yarn::VirtualMachine\:optionsHandler}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b OptionsHandler} Yarn.VirtualMachine.optionsHandler}}
\par
{\bkmkstart AAAAAAAAYE}
{\bkmkend AAAAAAAAYE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v program\:Yarn::VirtualMachine}
{\xe \v Yarn::VirtualMachine\:program}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Program} Yarn.VirtualMachine.program{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAYF}
{\bkmkend AAAAAAAAYF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v random\:Yarn::VirtualMachine}
{\xe \v Yarn::VirtualMachine\:random}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Random Yarn.VirtualMachine.random = new Random(){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAYG}
{\bkmkend AAAAAAAAYG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v state\:Yarn::VirtualMachine}
{\xe \v Yarn::VirtualMachine\:state}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b State} Yarn.VirtualMachine.state = new {\b State}(){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAYH}
{\bkmkend AAAAAAAAYH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v STATE_VERSION_NUMBER\:Yarn::VirtualMachine}
{\xe \v Yarn::VirtualMachine\:STATE_VERSION_NUMBER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int Yarn.VirtualMachine.STATE_VERSION_NUMBER = 1{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAYI}
{\bkmkend AAAAAAAAYI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v currentNodeName\:Yarn::VirtualMachine}
{\xe \v Yarn::VirtualMachine\:currentNodeName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string Yarn.VirtualMachine.currentNodeName{\f2 [get]}}}
\par
{\bkmkstart AAAAAAAAYJ}
{\bkmkend AAAAAAAAYJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v executionState\:Yarn::VirtualMachine}
{\xe \v Yarn::VirtualMachine\:executionState}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ExecutionState} Yarn.VirtualMachine.executionState{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAAAYK}
{\bkmkend AAAAAAAAYK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
YarnSpinner/{\b VirtualMachine.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Yarn.Unity.YarnCommandAttribute Class Reference\par \pard\plain 
{\tc\tcl2 \v Yarn.Unity.YarnCommandAttribute}
{\xe \v Yarn.Unity.YarnCommandAttribute}
{\bkmkstart AAAAAAABBQ}
{\bkmkend AAAAAAABBQ}
Inheritance diagram for Yarn.Unity.YarnCommandAttribute:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d2/d0a/a00333.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for Yarn.Unity.YarnCommandAttribute:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "da/d75/a00334.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b YarnCommandAttribute} (string {\b commandString})\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Properties\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
string {\b commandString}{\f2  [get, set]}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v YarnCommandAttribute\:Yarn::Unity::YarnCommandAttribute}
{\xe \v Yarn::Unity::YarnCommandAttribute\:YarnCommandAttribute}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Yarn.Unity.YarnCommandAttribute.YarnCommandAttribute (string {\i commandString})}}
\par
{\bkmkstart AAAAAAABBR}
{\bkmkend AAAAAAABBR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 328                                                           \{\par
329             this.commandString = commandString;\par
330         \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Property Documentation\par
\pard\plain 
{\xe \v commandString\:Yarn::Unity::YarnCommandAttribute}
{\xe \v Yarn::Unity::YarnCommandAttribute\:commandString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
string Yarn.Unity.YarnCommandAttribute.commandString{\f2 [get]}, {\f2 [set]}}}
\par
{\bkmkstart AAAAAAABBS}
{\bkmkend AAAAAAABBS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Unity/Assets/Yarn Spinner/Code/{\b DialogueRunner.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Yarn.YarnException Class Reference\par \pard\plain 
{\tc\tcl2 \v Yarn.YarnException}
{\xe \v Yarn.YarnException}
{\bkmkstart AAAAAAAAKV}
{\bkmkend AAAAAAAAKV}
Inheritance diagram for Yarn.YarnException:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "db/d53/a00202.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for Yarn.YarnException:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "de/d79/a00203.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b YarnException} (string message)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v YarnException\:Yarn::YarnException}
{\xe \v Yarn::YarnException\:YarnException}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Yarn.YarnException.YarnException (string {\i message})}}
\par
{\bkmkstart AAAAAAAAKW}
{\bkmkend AAAAAAAAKW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 36 : base(message) \{\}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
YarnSpinner/{\b Dialogue.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Yarn.YarnSpinnerConsole Class Reference\par \pard\plain 
{\tc\tcl2 \v Yarn.YarnSpinnerConsole}
{\xe \v Yarn.YarnSpinnerConsole}
{\bkmkstart AAAAAAAAYU}
{\bkmkend AAAAAAAAYU}
Collaboration diagram for Yarn.YarnSpinnerConsole:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dd/db3/a00313.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ConsoleRunnerImplementation}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b Main} (string[] args)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Private Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b ShowHelpAndExit} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Main\:Yarn::YarnSpinnerConsole}
{\xe \v Yarn::YarnSpinnerConsole\:Main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void Yarn.YarnSpinnerConsole.Main (string[] {\i args}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAYV}
{\bkmkend AAAAAAAAYV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 62         \{\par
63 \par
64             if (args.Length == 0) \{\par
65                 ShowHelpAndExit ();\par
66             \}\par
67 \par
68             bool showTokens = false;\par
69             bool showParseTree = false;\par
70             bool waitForLines = false;\par
71             string onlyConsiderNode = null;\par
72             bool showDebugging = false;\par
73             int runTimes = 1;\par
74             bool compileToBytecodeOnly = false;\par
75             bool verifyOnly = false;\par
76             bool autoSelectFirstOption = false;\par
77             bool analyseOnly = false;\par
78             string outputFile = null;\par
79 \par
80             var inputFiles = new List<string> ();\par
81             string startNode = Dialogue.DEFAULT_START;\par
82 \par
83             string[] allowedExtensions = \{".node", ".json" \};\par
84 \par
85             var defaultVariables = new Dictionary<string,float> ();\par
86 \par
87             foreach (var arg in args) \{\par
88 \par
89                 // Handle 'start' parameter\par
90                 if (arg.IndexOf("-s=") != -1) \{\par
91                     var startArray = arg.Split (new char[]\{ '=' \});\par
92                     if (startArray.Length != 2) \{\par
93                         ShowHelpAndExit ();\par
94                     \} else \{\par
95                         startNode = startArray [1];\par
96                         continue;\par
97                     \}\par
98                 \}\par
99 \par
100                 // Handle variable input\par
101                 if (arg.IndexOf("-v") != -1) \{\par
102                     var variable = arg.Substring (2);\par
103                     var variableArray = variable.Split (new char[]\{ '=' \});\par
104                     if (variableArray.Length != 2) \{\par
105                         ShowHelpAndExit ();\par
106                     \} else \{\par
107                         var varName = "$" + variableArray [0];\par
108                         var varValue = float.Parse (variableArray [1]);\par
109                         defaultVariables [varName] = varValue;\par
110                         continue;\par
111                     \}\par
112 \par
113                 \}\par
114 \par
115                 // Handle 'only this node' parameter\par
116                 if (arg.IndexOf("-o=") != -1) \{\par
117                     var startArray = arg.Split (new char[]\{ '=' \});\par
118                     if (startArray.Length != 2) \{\par
119                         ShowHelpAndExit ();\par
120                     \} else \{\par
121                         onlyConsiderNode = startArray [1];\par
122                         continue;\par
123                     \}\par
124                 \}\par
125 \par
126                 // Handle 'run times' parameter\par
127                 if (arg.IndexOf("-r=") != -1) \{\par
128                     var argArray = arg.Split ('=');\par
129                     if (argArray.Length != 2) \{\par
130                         ShowHelpAndExit ();\par
131                     \} else \{\par
132                         runTimes = int.Parse (argArray [1]);\par
133                         continue;\par
134                     \}\par
135 \par
136                 \}\par
137 \par
138                 // Handle 'output file' parameter\par
139                 if (arg.IndexOf("-f=") != -1) \{\par
140                     var argArray = arg.Split('=');\par
141                     if (argArray.Length != 2) \{\par
142                         ShowHelpAndExit();\par
143                     \} else \{\par
144                         outputFile = argArray[1];\par
145                         continue;\par
146                     \}\par
147                 \}\par
148 \par
149                 switch (arg) \{\par
150                 case "-V":\par
151                     verifyOnly = true;\par
152                     break;\par
153                 case "-t":\par
154                     showTokens = true;\par
155                     showDebugging = true;\par
156                     break;\par
157                 case "-p":\par
158                     showParseTree = true;\par
159                     showDebugging = true;\par
160                     break;\par
161                 case "-w":\par
162                     waitForLines = true;\par
163                     break;\par
164                 case "-d":\par
165                     showDebugging = true;\par
166                     break;\par
167                 case "-c":\par
168                     compileToBytecodeOnly = true;\par
169                     break;\par
170                 case "-1":\par
171                     autoSelectFirstOption = true;\par
172                     break;\par
173                 case "-h":\par
174                     ShowHelpAndExit ();\par
175                     break;\par
176                 case "-a":\par
177                     analyseOnly = true;\par
178                     break;\par
179                 default:\par
180 \par
181                     // only allow one file\par
182                     if (inputFiles.Count > 0) \{\par
183                         Console.Error.WriteLine ("Error: Too many files specified.");\par
184                         Environment.Exit (1);\par
185                     \}\par
186 \par
187                     var extension = System.IO.Path.GetExtension (arg);\par
188                     if (Array.IndexOf(allowedExtensions, extension) != -1) \{\par
189                         inputFiles.Add (arg);\par
190                     \}\par
191                     break;\par
192                 \}\par
193             \}\par
194 \par
195             if (inputFiles.Count == 0) \{\par
196                 Console.Error.WriteLine ("Error: No files specified.");\par
197                 Environment.Exit (1);\par
198             \}\par
199 \par
200             // Create the object that handles callbacks\par
201             var impl = new ConsoleRunnerImplementation (waitForLines:waitForLines);\par
202 \par
203             // load the default variables we got on the command line\par
204             foreach (var variable in defaultVariables) \{\par
205 \par
206                 impl.SetNumber (variable.Key, variable.Value);\par
207             \}\par
208 \par
209             // Load nodes\par
210             var dialogue = new Dialogue(impl);\par
211 \par
212 \par
213             // Add some methods for testing\par
214             dialogue.library.RegisterFunction ("add_three_operands", 3, delegate(Value[] parameters) \{\par
215                 return parameters[0]+parameters[1]+parameters[2];\par
216             \});\par
217 \par
218             dialogue.library.RegisterFunction ("last_value", -1, delegate(Value[] parameters) \{\par
219                 // return the last value\par
220                 return parameters[parameters.Length-1];\par
221             \});\par
222 \par
223             dialogue.library.RegisterFunction ("is_even", 1, delegate(Value[] parameters) \{\par
224                 return (int)parameters[0].AsNumber % 2 == 0;\par
225             \});\par
226 \par
227             // Register the "assert" function, which stops execution if its parameter evaluates to false\par
228             dialogue.library.RegisterFunction ("assert", -1, delegate(Value[] parameters) \{\par
229                 if (parameters[0].AsBool == false) \{\par
230 \par
231                     // TODO: Include file, node and line number\par
232                     if( parameters.Length > 1 && parameters[1].AsBool ) \{\par
233                         dialogue.LogErrorMessage ("ASSERTION FAILED: " + parameters[1].AsString);\par
234                     \} else \{\par
235                         dialogue.LogErrorMessage ("ASSERTION FAILED");\par
236                     \}\par
237                     Environment.Exit(1);\par
238                 \}\par
239             \});\par
240 \par
241 \par
242             // Register a function to let test scripts register how many\par
243             // options they expect to send\par
244             dialogue.library.RegisterFunction ("prepare_for_options", 2, delegate(Value[] parameters) \{\par
245                 impl.numberOfExpectedOptions = (int)parameters [0].AsNumber;\par
246                 impl.autoSelectOptionNumber = (int)parameters[1].AsNumber;\par
247             \});\par
248 \par
249             dialogue.library.RegisterFunction ("expect_line", 1, delegate(Value[] parameters) \{\par
250                 impl.expectedNextLine = parameters[0].AsString;\par
251             \});\par
252 \par
253             dialogue.library.RegisterFunction ("expect_command", 1, delegate(Value[] parameters) \{\par
254                 impl.expectedNextCommand = parameters[0].AsString;\par
255             \});\par
256 \par
257             if (autoSelectFirstOption == true) \{\par
258                 impl.autoSelectFirstOption = true;\par
259             \}\par
260 \par
261             // If debugging is enabled, log debug messages; otherwise, ignore them\par
262             if (showDebugging) \{\par
263                 dialogue.LogDebugMessage = delegate(string message) \{\par
264                     Console.WriteLine ("Debug: " + message);\par
265                 \};\par
266             \} else \{\par
267                 dialogue.LogDebugMessage = delegate(string message) \{\};\par
268             \}\par
269 \par
270             dialogue.LogErrorMessage = delegate(string message) \{\par
271                 Console.WriteLine ("ERROR: " + message);\par
272             \};\par
273 \par
274             if (verifyOnly) \{\par
275                 try \{\par
276                     dialogue.LoadFile (inputFiles [0],showTokens, showParseTree, onlyConsiderNode);\par
277                 \} catch (Exception e) \{\par
278                     Console.WriteLine ("Error: " + e.Message);\par
279                 \}\par
280                 return;\par
281             \}\par
282 \par
283             dialogue.LoadFile (inputFiles [0],showTokens, showParseTree, onlyConsiderNode);\par
284 \par
285             if (outputFile != null) \{\par
286                 var result = dialogue.GetByteCode();\par
287                 System.Text.UTF8Encoding utf8 = new System.Text.UTF8Encoding();\par
288                 using (System.IO.StreamWriter file = new System.IO.StreamWriter(outputFile, false, utf8)) \{\par
289                     file.Write(result);\par
290                 \}\par
291                 return;\par
292             \}\par
293 \par
294             if (compileToBytecodeOnly) \{\par
295                 var result = dialogue.GetByteCode ();\par
296                 Console.WriteLine (result);\par
297                 return;\par
298             \}\par
299 \par
300             if (analyseOnly) \{\par
301 \par
302                 var context = new Yarn.Analysis.Context ();\par
303 \par
304                 dialogue.Analyse (context);\par
305 \par
306                 foreach (var diagnosis in context.FinishAnalysis()) \{\par
307                     Console.WriteLine (diagnosis.ToString(showSeverity:true));\par
308                 \}\par
309                 return;\par
310             \}\par
311 \par
312             // Only run the program when we're not emitting debug output of some kind\par
313             var runProgram =\par
314                 showTokens == false &&\par
315                 showParseTree == false &&\par
316                 compileToBytecodeOnly == false &&\par
317                 analyseOnly == false;\par
318 \par
319             if (runProgram) \{\par
320                 // Run the conversation\par
321 \par
322                 for (int run = 0; run < runTimes; run++) \{\par
323                     foreach (var step in dialogue.Run (startNode)) \{\par
324 \par
325                         // It can be one of three types: a line to show, options\par
326                         // to present to the user, or an internal command to run\par
327 \par
328                         if (step is Dialogue.LineResult) \{\par
329                             var lineResult = step as Dialogue.LineResult;\par
330                             impl.RunLine (lineResult.line);\par
331                         \} else if (step is Dialogue.OptionSetResult) \{\par
332                             var optionsResult = step as Dialogue.OptionSetResult;\par
333                             impl.RunOptions (optionsResult.options, optionsResult.setSelectedOptionDelegate);\par
334                         \} else if (step is Dialogue.CommandResult) \{\par
335                             var commandResult = step as Dialogue.CommandResult;\par
336                             impl.RunCommand (commandResult.command.text);\par
337                         \}\par
338                     \}\par
339                     impl.DialogueComplete ();\par
340                 \}\par
341 \par
342 \par
343             \}\par
344 \par
345         \}\par
}
}
{\xe \v ShowHelpAndExit\:Yarn::YarnSpinnerConsole}
{\xe \v Yarn::YarnSpinnerConsole\:ShowHelpAndExit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void Yarn.YarnSpinnerConsole.ShowHelpAndExit (){\f2 [static]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAYW}
{\bkmkend AAAAAAAAYW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 37                                       \{\par
38             Console.WriteLine ("YarnSpinner: Executes Yarn dialog files.");\par
39             Console.WriteLine ();\par
40             Console.WriteLine ("Usage:");\par
41             Console.WriteLine ("YarnSpinner [-t] [-p] [-h] [-w] [-o=<node>] [-r=<run times>] [-s=<start>] [-v<argname>=<value>] <inputfile>");\par
42             Console.WriteLine ();\par
43             Console.WriteLine ("\\t-t: Show the list of parsed tokens and exit.");\par
44             Console.WriteLine ("\\t-p: Show the parse tree and exit.");\par
45             Console.WriteLine ("\\t-w: After showing each line, wait for the user to press a key.");\par
46             Console.WriteLine ("\\t-s: Start at the given node, instead of the default ('" + Dialogue.DEFAULT_START + "').");\par
47             Console.WriteLine ("\\t-v: Sets the variable 'argname' to 'value'.");\par
48             Console.WriteLine ("\\t-V: Verifies the provided script");\par
49             Console.WriteLine ("\\t-o: Only consider the node named <node>.");\par
50             Console.WriteLine ("\\t-r: Run the script N times. Default is 1.");\par
51             Console.WriteLine ("\\t-d: Show debugging information.");\par
52             Console.WriteLine ("\\t-c: Show program bytecode and exit.");\par
53             Console.WriteLine ("\\t-f: Write program bytecode to file and exit.");\par
54             Console.WriteLine ("\\t-a: Show analysis of the program and exit.");\par
55             Console.WriteLine ("\\t-1: Automatically select the the first option when presented with options.");\par
56             Console.WriteLine ("\\t-h: Show this message and exit.");\par
57 \par
58             Environment.Exit (0);\par
59         \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
YarnSpinnerConsole/{\b Main.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Yarn.Unity.YarnSpinnerEditorWindow Class Reference\par \pard\plain 
{\tc\tcl2 \v Yarn.Unity.YarnSpinnerEditorWindow}
{\xe \v Yarn.Unity.YarnSpinnerEditorWindow}
{\bkmkstart AAAAAAABBV}
{\bkmkend AAAAAAABBV}
Inheritance diagram for Yarn.Unity.YarnSpinnerEditorWindow:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d2/d45/a00342.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for Yarn.Unity.YarnSpinnerEditorWindow:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d0/dc5/a00343.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CheckerResult}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Deprecation}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b ValidationMessage}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b UpdateJSONList} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OnEnable} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OnGUI} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Validate} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ValidationMessage}[] {\b ValidateFile} (TextAsset script, {\b Analysis.Context} analysisContext, out {\b CheckerResult.State} result)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IEnumerable\par
< {\b Yarn.Analysis.Diagnosis} > {\b AnalyseEnvironment} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Private Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b ShowWindow} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b DrawScriptGUI} ({\b CheckerResult} result)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
List< {\b CheckerResult} > {\b checkResults} = new List<{\b CheckerResult}>()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IEnumerable\par
< {\b Yarn.Analysis.Diagnosis} > {\b diagnoses} = new List<{\b Yarn.Analysis.Diagnosis}>()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Vector2 {\b scrollPos}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Class Documentation\par
\pard\plain 
{\xe \v Yarn::Unity::YarnSpinnerEditorWindow::ValidationMessage}
{\bkmkstart AAAAAAAAAN}
{\bkmkend AAAAAAAAAN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
struct Yarn::Unity::YarnSpinnerEditorWindow::ValidationMessage\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
Collaboration diagram for Yarn.Unity.YarnSpinnerEditorWindow.ValidationMessage:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dd/da7/a00168.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Class Members:\par}
\pard\plain \s60\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr string{\bkmkstart AAAAAAAAAO}
{\bkmkend AAAAAAAAAO}
\cell }{message\cell }{\cell }{\row }
{\qr MessageType{\bkmkstart AAAAAAAAAP}
{\bkmkend AAAAAAAAAP}
\cell }{type\cell }{\cell }{\row }
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v AnalyseEnvironment\:Yarn::Unity::YarnSpinnerEditorWindow}
{\xe \v Yarn::Unity::YarnSpinnerEditorWindow\:AnalyseEnvironment}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IEnumerable<{\b Yarn.Analysis.Diagnosis}> Yarn.Unity.YarnSpinnerEditorWindow.AnalyseEnvironment (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABBW}
{\bkmkend AAAAAAABBW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 306         \{\par
307 \par
308             var deprecations = new List<Deprecation>();\par
309 \par
310             deprecations.Add(new Deprecation(\par
311                 typeof(Yarn.Unity.VariableStorageBehaviour),\par
312                 "SetNumber",\par
313                 "This method is obsolete, and will not be called in future versions of Yarn Spinner. Use SetValue instead."\par
314             ));\par
315 \par
316             deprecations.Add(new Deprecation(\par
317                 typeof(Yarn.Unity.VariableStorageBehaviour),\par
318                 "GetNumber",\par
319                 "This method is obsolete, and will not be called in future versions of Yarn Spinner. Use GetValue instead."\par
320             ));\par
321 \par
322             var results = new List<Yarn.Analysis.Diagnosis>();\par
323 \par
324             var assemblies = System.AppDomain.CurrentDomain.GetAssemblies();\par
325 \par
326 \par
327             foreach (var assembly in assemblies) \{\par
328                 foreach (var type in assembly.GetTypes()) \{\par
329 \par
330                     foreach (var deprecation in deprecations) \{\par
331                         if (!type.IsSubclassOf (deprecation.type))\par
332                             continue;\par
333 \par
334                         foreach (var method in type.GetMethods ()) \{\par
335                             if (method.Name == deprecation.methodName && method.DeclaringType == type) \{\par
336                                 var message = "\{0\} implements the \{1\} method. \{2\}";\par
337                                 message = string.Format (message, type.Name, deprecation.methodName, deprecation.usageNotes);\par
338                                 var diagnosis = new Yarn.Analysis.Diagnosis (message, Yarn.Analysis.Diagnosis.Severity.Warning);\par
339                                 results.Add (diagnosis);\par
340                             \}\par
341                         \}\par
342 \par
343                     \}\par
344 \par
345 \par
346 \par
347                 \}\par
348             \}\par
349             return results;\par
350         \}\par
}
}
{\xe \v DrawScriptGUI\:Yarn::Unity::YarnSpinnerEditorWindow}
{\xe \v Yarn::Unity::YarnSpinnerEditorWindow\:DrawScriptGUI}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void Yarn.Unity.YarnSpinnerEditorWindow.DrawScriptGUI ({\b CheckerResult} {\i result}){\f2 [static]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAABBX}
{\bkmkend AAAAAAABBX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 155         \{\par
156             EditorGUILayout.BeginHorizontal ();\par
157 \par
158             // What icon should we use for this script?\par
159             Texture image;\par
160             switch (result.state) \{\par
161             case CheckerResult.State.NotTested:\par
162                 image = null;\par
163                 break;\par
164             case CheckerResult.State.Ignored:\par
165                 image = Icons.ignoredIcon;\par
166                 break;\par
167             case CheckerResult.State.Passed:\par
168                 image = Icons.successIcon;\par
169                 break;\par
170             case CheckerResult.State.Failed:\par
171                 image = Icons.failedIcon;\par
172                 break;\par
173             default:\par
174                 throw new System.ArgumentOutOfRangeException ();\par
175             \}\par
176 \par
177             // Draw the image and the label name\par
178             EditorGUILayout.LabelField (new GUIContent (image), GUILayout.Width (20));\par
179             EditorGUILayout.LabelField (result.script.name);\par
180 \par
181             EditorGUILayout.EndHorizontal ();\par
182 \par
183             // Draw any messages resulting from this script\par
184             if (result.messages.Length > 0) \{\par
185 \par
186                 EditorGUI.indentLevel += 2;\par
187 \par
188                 foreach (var message in result.messages) \{\par
189                     \par
190                     EditorGUILayout.HelpBox(message.message, message.type);\par
191 \par
192                 \}\par
193 \par
194                 EditorGUI.indentLevel -= 2;\par
195             \}\par
196 \par
197         \}\par
}
}
{\xe \v OnEnable\:Yarn::Unity::YarnSpinnerEditorWindow}
{\xe \v Yarn::Unity::YarnSpinnerEditorWindow\:OnEnable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Yarn.Unity.YarnSpinnerEditorWindow.OnEnable (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABBY}
{\bkmkend AAAAAAABBY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 97                         \{\par
98 \par
99             // Set the window title\par
100             this.titleContent.text = "Yarn Spinner";\par
101             this.titleContent.image = Icons.windowIcon;\par
102 \par
103             Validate();\par
104 \par
105         \}\par
}
}
{\xe \v OnGUI\:Yarn::Unity::YarnSpinnerEditorWindow}
{\xe \v Yarn::Unity::YarnSpinnerEditorWindow\:OnGUI}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Yarn.Unity.YarnSpinnerEditorWindow.OnGUI (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABBZ}
{\bkmkend AAAAAAABBZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 108                      \{\par
109 \par
110             EditorGUILayout.BeginVertical();\par
111 \par
112             EditorGUILayout.Space();\par
113 \par
114             scrollPos = EditorGUILayout.BeginScrollView(scrollPos);\par
115 \par
116             foreach (var result in checkResults) \{\par
117                 DrawScriptGUI (result);\par
118             \}\par
119 \par
120             // Draw any diagnoses that resulted\par
121             foreach (var diagnosis in diagnoses) \{\par
122 \par
123                 MessageType messageType;\par
124 \par
125                 switch (diagnosis.severity) \{\par
126                 case Yarn.Analysis.Diagnosis.Severity.Error:\par
127                     messageType = MessageType.Error;\par
128                     break;\par
129                 case Yarn.Analysis.Diagnosis.Severity.Warning:\par
130                     messageType = MessageType.Warning;\par
131                     break;\par
132                 case Yarn.Analysis.Diagnosis.Severity.Note:\par
133                     messageType = MessageType.Info;\par
134                     break;\par
135                 default:\par
136                     throw new System.ArgumentOutOfRangeException ();\par
137                 \}\par
138 \par
139                 EditorGUILayout.HelpBox(diagnosis.ToString(showSeverity:false), messageType);\par
140             \}\par
141 \par
142             // Bottom box\par
143             EditorGUILayout.EndScrollView();\par
144 \par
145             EditorGUILayout.BeginHorizontal();\par
146             if (GUILayout.Button("Refresh")) \{\par
147                 Validate();\par
148             \}\par
149             EditorGUILayout.EndHorizontal();\par
150 \par
151             EditorGUILayout.EndVertical();\par
152         \}\par
}
}
{\xe \v ShowWindow\:Yarn::Unity::YarnSpinnerEditorWindow}
{\xe \v Yarn::Unity::YarnSpinnerEditorWindow\:ShowWindow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void Yarn.Unity.YarnSpinnerEditorWindow.ShowWindow (){\f2 [static]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAABCA}
{\bkmkend AAAAAAABCA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 93                                  \{\par
94             EditorWindow.GetWindow(typeof(YarnSpinnerEditorWindow));\par
95         \}\par
}
}
{\xe \v UpdateJSONList\:Yarn::Unity::YarnSpinnerEditorWindow}
{\xe \v Yarn::Unity::YarnSpinnerEditorWindow\:UpdateJSONList}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Yarn.Unity.YarnSpinnerEditorWindow.UpdateJSONList (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABCB}
{\bkmkend AAAAAAABCB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 70                               \{\par
71             // Find all TextAssets\par
72 \par
73             var list = AssetDatabase.FindAssets("t:textasset");\par
74 \par
75             checkResults.Clear();\par
76             diagnoses = new List<Yarn.Analysis.Diagnosis>();;\par
77 \par
78             foreach (var guid in list) \{\par
79 \par
80                 var path = AssetDatabase.GUIDToAssetPath(guid);\par
81                 if (path.EndsWith(".json")) \{\par
82                     var asset = AssetDatabase.LoadAssetAtPath<TextAsset>(path);\par
83 \par
84                     var newResult = new CheckerResult(asset);\par
85 \par
86                     checkResults.Add(newResult);\par
87                 \}\par
88 \par
89             \}\par
90         \}\par
}
}
{\xe \v Validate\:Yarn::Unity::YarnSpinnerEditorWindow}
{\xe \v Yarn::Unity::YarnSpinnerEditorWindow\:Validate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Yarn.Unity.YarnSpinnerEditorWindow.Validate (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABCC}
{\bkmkend AAAAAAABCC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 201         \{\par
202             UpdateJSONList();\par
203 \par
204             var analysisContext = new Yarn.Analysis.Context();\par
205 \par
206             bool shouldPerformAnalysis = true;\par
207 \par
208             foreach (var result in checkResults) \{\par
209 \par
210                 CheckerResult.State state;\par
211 \par
212                 var messages = ValidateFile(result.script, analysisContext, out state);\par
213 \par
214                 result.state = state;\par
215                 result.messages = messages;\par
216 \par
217                 // Don't perform whole-program analysis if any file failed to compile\par
218                 if (result.state != CheckerResult.State.Passed) \{\par
219                     shouldPerformAnalysis = false;\par
220                 \}\par
221 \par
222             \}\par
223 \par
224             var results = new List<Yarn.Analysis.Diagnosis>();\par
225 \par
226 \par
227             if (shouldPerformAnalysis)\par
228                 results.AddRange(analysisContext.FinishAnalysis());\par
229 \par
230             results.AddRange(AnalyseEnvironment());\par
231 \par
232             diagnoses = results;\par
233 \par
234         \}\par
}
}
{\xe \v ValidateFile\:Yarn::Unity::YarnSpinnerEditorWindow}
{\xe \v Yarn::Unity::YarnSpinnerEditorWindow\:ValidateFile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ValidationMessage} [] Yarn.Unity.YarnSpinnerEditorWindow.ValidateFile (TextAsset {\i script}, {\b Analysis.Context} {\i analysisContext}, out {\b CheckerResult.State} {\i result}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABCD}
{\bkmkend AAAAAAABCD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 239                                                                                                                              \{\par
240 \par
241             var messageList = new List<ValidationMessage>();\par
242 \par
243             var variableStorage = new Yarn.MemoryVariableStore();\par
244 \par
245             var dialog = new Dialogue(variableStorage);\par
246 \par
247             bool failed = false;\par
248 \par
249             dialog.LogErrorMessage = delegate (string message) \{\par
250                 var msg = new ValidationMessage();\par
251                 msg.type = MessageType.Error;\par
252                 msg.message = message;\par
253                 messageList.Add(msg);\par
254 \par
255                 // any errors means this validation failed\par
256                 failed = true;\par
257             \};\par
258 \par
259             dialog.LogDebugMessage = delegate (string message) \{\par
260                 var msg = new ValidationMessage();\par
261                 msg.type = MessageType.Info;\par
262                 msg.message = message;\par
263                 messageList.Add(msg);\par
264             \};\par
265 \par
266             try \{\par
267                 dialog.LoadString(script.text,script.name);\par
268             \} catch (System.Exception e) \{\par
269                 dialog.LogErrorMessage(e.Message);\par
270             \}\par
271 \par
272             dialog.Analyse(analysisContext);\par
273 \par
274             if (failed) \{\par
275                 result = CheckerResult.State.Failed;\par
276             \} else \{\par
277                 result = CheckerResult.State.Passed;\par
278             \}\par
279 \par
280             return messageList.ToArray();\par
281 \par
282         \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v checkResults\:Yarn::Unity::YarnSpinnerEditorWindow}
{\xe \v Yarn::Unity::YarnSpinnerEditorWindow\:checkResults}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
List<{\b CheckerResult}> Yarn.Unity.YarnSpinnerEditorWindow.checkResults = new List<{\b CheckerResult}>(){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABCE}
{\bkmkend AAAAAAABCE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v diagnoses\:Yarn::Unity::YarnSpinnerEditorWindow}
{\xe \v Yarn::Unity::YarnSpinnerEditorWindow\:diagnoses}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IEnumerable<{\b Yarn.Analysis.Diagnosis}> Yarn.Unity.YarnSpinnerEditorWindow.diagnoses = new List<{\b Yarn.Analysis.Diagnosis}>(){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABCF}
{\bkmkend AAAAAAABCF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v scrollPos\:Yarn::Unity::YarnSpinnerEditorWindow}
{\xe \v Yarn::Unity::YarnSpinnerEditorWindow\:scrollPos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Vector2 Yarn.Unity.YarnSpinnerEditorWindow.scrollPos{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABCG}
{\bkmkend AAAAAAABCG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Unity/Assets/Yarn Spinner/Code/Editor/{\b YarnSpinnerEditorWindow.cs}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
YarnSpinnerTests Class Reference\par \pard\plain 
{\tc\tcl2 \v YarnSpinnerTests}
{\xe \v YarnSpinnerTests}
{\bkmkstart AAAAAAAAEG}
{\bkmkend AAAAAAAAEG}
Collaboration diagram for YarnSpinnerTests:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/daa/a00187.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SetUp} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b EditorTest} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Yarn.Unity.DialogueRunner} {\b dialogueRunner}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Yarn.Unity.VariableStorageBehaviour} {\b variableStorage}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b TestDialogueUIBehaviour} {\b dialogueUI}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v EditorTest\:YarnSpinnerTests}
{\xe \v YarnSpinnerTests\:EditorTest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void YarnSpinnerTests.EditorTest ()}}
\par
{\bkmkstart AAAAAAAAEH}
{\bkmkend AAAAAAAAEH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 95     \{\par
96         \par
97         dialogueUI.ExpectLine("Player: Hey, Sally.");\par
98         dialogueUI.ExpectLine("Sally: Oh! Hi.");\par
99         dialogueUI.ExpectLine("Sally: You snuck up on me.");\par
100         dialogueUI.ExpectLine("Sally: Don't do that.");\par
101         dialogueUI.SelectOption("Anything exciting happen on your watch?");\par
102 \par
103         dialogueRunner.StartDialogue("Sally");\par
104 \par
105         // Talking to Sally a second time should result in a different dialogue\par
106 \par
107 \par
108 \par
109 \par
110         //Act\par
111         //Try to rename the GameObject\par
112         \par
113         //Assert\par
114         //The object has a new name\par
115         //Assert.AreEqual(newGameObjectName, gameObject.name);\par
116     \}\par
}
}
{\xe \v SetUp\:YarnSpinnerTests}
{\xe \v YarnSpinnerTests\:SetUp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void YarnSpinnerTests.SetUp ()}}
\par
{\bkmkstart AAAAAAAAEI}
{\bkmkend AAAAAAAAEI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 74     \{\par
75         //Arrange\par
76 \par
77         // Create the dialogue runner\par
78         var dialogueHost = new GameObject();\par
79         dialogueRunner = dialogueHost.AddComponent<Yarn.Unity.DialogueRunner>();\par
80 \par
81         // Create the variable storage\par
82         //variableStorage = dialogueHost.AddComponent<ExampleVariableStorage>();\par
83 \par
84         // Load the test script\par
85         var text = AssetDatabase.LoadAssetAtPath<TextAsset>("Assets/Yarn Spinner/Examples/Demo Assets/Space.json");\par
86         dialogueRunner.AddScript(text);\par
87 \par
88         dialogueUI = dialogueHost.AddComponent<TestDialogueUIBehaviour>();\par
89         dialogueRunner.dialogueUI = dialogueUI;\par
90 \par
91     \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v dialogueRunner\:YarnSpinnerTests}
{\xe \v YarnSpinnerTests\:dialogueRunner}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Yarn.Unity.DialogueRunner} YarnSpinnerTests.dialogueRunner{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAEJ}
{\bkmkend AAAAAAAAEJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v dialogueUI\:YarnSpinnerTests}
{\xe \v YarnSpinnerTests\:dialogueUI}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b TestDialogueUIBehaviour} YarnSpinnerTests.dialogueUI{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAEK}
{\bkmkend AAAAAAAAEK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v variableStorage\:YarnSpinnerTests}
{\xe \v YarnSpinnerTests\:variableStorage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Yarn.Unity.VariableStorageBehaviour} YarnSpinnerTests.variableStorage{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAEL}
{\bkmkend AAAAAAAAEL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
Unity/Assets/Yarn Spinner/Code/Editor/{\b YarnSpinnerTests.cs}\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Documentation{\tc \v File Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CONTRIBUTING.md File Reference\par \pard\plain 
{\tc\tcl2 \v CONTRIBUTING.md}
{\xe \v CONTRIBUTING.md}
{\bkmkstart AAAAAAAAAA}
{\bkmkend AAAAAAAAAA}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CONTRIBUTORS.md File Reference\par \pard\plain 
{\tc\tcl2 \v CONTRIBUTORS.md}
{\xe \v CONTRIBUTORS.md}
{\bkmkstart AAAAAAAAAB}
{\bkmkend AAAAAAAAAB}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Documentation/Building.md File Reference\par \pard\plain 
{\tc\tcl2 \v Documentation/Building.md}
{\xe \v Documentation/Building.md}
{\bkmkstart AAAAAAAAAC}
{\bkmkend AAAAAAAAAC}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Documentation/Extending.md File Reference\par \pard\plain 
{\tc\tcl2 \v Documentation/Extending.md}
{\xe \v Documentation/Extending.md}
{\bkmkstart AAAAAAAAAD}
{\bkmkend AAAAAAAAAD}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Documentation/README.md File Reference\par \pard\plain 
{\tc\tcl2 \v Documentation/README.md}
{\xe \v Documentation/README.md}
{\bkmkstart AAAAAAAAAE}
{\bkmkend AAAAAAAAAE}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
README.md File Reference\par \pard\plain 
{\tc\tcl2 \v README.md}
{\xe \v README.md}
{\bkmkstart AAAAAAAAAF}
{\bkmkend AAAAAAAAAF}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Documentation/Unity.md File Reference\par \pard\plain 
{\tc\tcl2 \v Documentation/Unity.md}
{\xe \v Documentation/Unity.md}
{\bkmkstart AAAAAAAAAG}
{\bkmkend AAAAAAAAAG}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Documentation/Usage.md File Reference\par \pard\plain 
{\tc\tcl2 \v Documentation/Usage.md}
{\xe \v Documentation/Usage.md}
{\bkmkstart AAAAAAAAAH}
{\bkmkend AAAAAAAAAH}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
LICENSE.md File Reference\par \pard\plain 
{\tc\tcl2 \v LICENSE.md}
{\xe \v LICENSE.md}
{\bkmkstart AAAAAAAAAI}
{\bkmkend AAAAAAAAAI}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
packages/NUnitLite.3.0.1/content/Program.cs File Reference\par \pard\plain 
{\tc\tcl2 \v packages/NUnitLite.3.0.1/content/Program.cs}
{\xe \v packages/NUnitLite.3.0.1/content/Program.cs}
{\bkmkstart AAAAAAAAAJ}
{\bkmkend AAAAAAAAAJ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b NUnitLite.Tests.Program}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b NUnitLite.Tests}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
YarnSpinnerTests/Program.cs File Reference\par \pard\plain 
{\tc\tcl2 \v YarnSpinnerTests/Program.cs}
{\xe \v YarnSpinnerTests/Program.cs}
{\bkmkstart AAAAAAAAAK}
{\bkmkend AAAAAAAAAK}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b YarnSpinner.Tests.Program}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b YarnSpinner.Tests}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Unity/Assets/Yarn Spinner/Code/DialogueRunner.cs File Reference\par \pard\plain 
{\tc\tcl2 \v Unity/Assets/Yarn Spinner/Code/DialogueRunner.cs}
{\xe \v Unity/Assets/Yarn Spinner/Code/DialogueRunner.cs}
{\bkmkstart AAAAAAAAAL}
{\bkmkend AAAAAAAAAL}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Yarn.Unity.DialogueRunner}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Yarn.Unity.YarnCommandAttribute}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Yarn.Unity.DialogueUIBehaviour}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Yarn.Unity.VariableStorageBehaviour}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Yarn.Unity}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Unity/Assets/Yarn Spinner/Code/Editor/YarnSpinnerEditorWindow.cs File Reference\par \pard\plain 
{\tc\tcl2 \v Unity/Assets/Yarn Spinner/Code/Editor/YarnSpinnerEditorWindow.cs}
{\xe \v Unity/Assets/Yarn Spinner/Code/Editor/YarnSpinnerEditorWindow.cs}
{\bkmkstart AAAAAAAAAM}
{\bkmkend AAAAAAAAAM}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Yarn.Unity.YarnSpinnerEditorWindow}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Yarn.Unity.YarnSpinnerEditorWindow.CheckerResult}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Yarn.Unity.YarnSpinnerEditorWindow.ValidationMessage}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Yarn.Unity.YarnSpinnerEditorWindow.Deprecation}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Yarn.Unity.Icons}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Yarn.Unity}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Class Documentation\par
\pard\plain 
{\xe \v Yarn::Unity::YarnSpinnerEditorWindow::ValidationMessage}
{\bkmkstart AAAAAAAAAN}
{\bkmkend AAAAAAAAAN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
struct Yarn::Unity::YarnSpinnerEditorWindow::ValidationMessage\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
Collaboration diagram for Yarn.Unity.YarnSpinnerEditorWindow.ValidationMessage:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dd/da7/a00168.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Class Members:\par}
\pard\plain \s60\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr string{\bkmkstart AAAAAAAAAO}
{\bkmkend AAAAAAAAAO}
\cell }{message\cell }{\cell }{\row }
{\qr MessageType{\bkmkstart AAAAAAAAAP}
{\bkmkend AAAAAAAAAP}
\cell }{type\cell }{\cell }{\row }
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Unity/Assets/Yarn Spinner/Code/Editor/YarnSpinnerTests.cs File Reference\par \pard\plain 
{\tc\tcl2 \v Unity/Assets/Yarn Spinner/Code/Editor/YarnSpinnerTests.cs}
{\xe \v Unity/Assets/Yarn Spinner/Code/Editor/YarnSpinnerTests.cs}
{\bkmkstart AAAAAAAAAQ}
{\bkmkend AAAAAAAAAQ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b TestDialogueUIBehaviour}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b YarnSpinnerTests}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Unity/Assets/Yarn Spinner/Examples/Demo Scripts/CameraFollow.cs File Reference\par \pard\plain 
{\tc\tcl2 \v Unity/Assets/Yarn Spinner/Examples/Demo Scripts/CameraFollow.cs}
{\xe \v Unity/Assets/Yarn Spinner/Examples/Demo Scripts/CameraFollow.cs}
{\bkmkstart AAAAAAAAAR}
{\bkmkend AAAAAAAAAR}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Yarn.Unity.Example.CameraFollow}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Yarn.Unity.Example}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Unity/Assets/Yarn Spinner/Examples/Demo Scripts/ExampleDialogueUI.cs File Reference\par \pard\plain 
{\tc\tcl2 \v Unity/Assets/Yarn Spinner/Examples/Demo Scripts/ExampleDialogueUI.cs}
{\xe \v Unity/Assets/Yarn Spinner/Examples/Demo Scripts/ExampleDialogueUI.cs}
{\bkmkstart AAAAAAAAAS}
{\bkmkend AAAAAAAAAS}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Yarn.Unity.Example.ExampleDialogueUI}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Yarn.Unity.Example}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Unity/Assets/Yarn Spinner/Examples/Demo Scripts/ExampleVariableStorage.cs File Reference\par \pard\plain 
{\tc\tcl2 \v Unity/Assets/Yarn Spinner/Examples/Demo Scripts/ExampleVariableStorage.cs}
{\xe \v Unity/Assets/Yarn Spinner/Examples/Demo Scripts/ExampleVariableStorage.cs}
{\bkmkstart AAAAAAAAAT}
{\bkmkend AAAAAAAAAT}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ExampleVariableStorage}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ExampleVariableStorage.DefaultVariable}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Class Documentation\par
\pard\plain 
{\xe \v ExampleVariableStorage::DefaultVariable}
{\bkmkstart AAAAAAAAAU}
{\bkmkend AAAAAAAAAU}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
class ExampleVariableStorage::DefaultVariable\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
Collaboration diagram for ExampleVariableStorage.DefaultVariable:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "de/d53/a00169.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Class Members:\par}
\pard\plain \s60\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr string{\bkmkstart AAAAAAAAAV}
{\bkmkend AAAAAAAAAV}
\cell }{name\cell }{\cell }{\row }
{\qr Value{\bkmkstart AAAAAAAAAW}
{\bkmkend AAAAAAAAAW}
\cell }{type\cell }{\cell }{\row }
{\qr string{\bkmkstart AAAAAAAAAX}
{\bkmkend AAAAAAAAAX}
\cell }{value\cell }{\cell }{\row }
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Unity/Assets/Yarn Spinner/Examples/Demo Scripts/MobileOnly.cs File Reference\par \pard\plain 
{\tc\tcl2 \v Unity/Assets/Yarn Spinner/Examples/Demo Scripts/MobileOnly.cs}
{\xe \v Unity/Assets/Yarn Spinner/Examples/Demo Scripts/MobileOnly.cs}
{\bkmkstart AAAAAAAAAY}
{\bkmkend AAAAAAAAAY}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b MobileOnly}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Unity/Assets/Yarn Spinner/Examples/Demo Scripts/NPC.cs File Reference\par \pard\plain 
{\tc\tcl2 \v Unity/Assets/Yarn Spinner/Examples/Demo Scripts/NPC.cs}
{\xe \v Unity/Assets/Yarn Spinner/Examples/Demo Scripts/NPC.cs}
{\bkmkstart AAAAAAAAAZ}
{\bkmkend AAAAAAAAAZ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Yarn.Unity.Example.NPC}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Yarn.Unity.Example}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Unity/Assets/Yarn Spinner/Examples/Demo Scripts/PlayerCharacter.cs File Reference\par \pard\plain 
{\tc\tcl2 \v Unity/Assets/Yarn Spinner/Examples/Demo Scripts/PlayerCharacter.cs}
{\xe \v Unity/Assets/Yarn Spinner/Examples/Demo Scripts/PlayerCharacter.cs}
{\bkmkstart AAAAAAAABA}
{\bkmkend AAAAAAAABA}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Yarn.Unity.Example.PlayerCharacter}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Yarn.Unity.Example}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Unity/Assets/Yarn Spinner/Examples/Demo Scripts/SpriteSwitcher.cs File Reference\par \pard\plain 
{\tc\tcl2 \v Unity/Assets/Yarn Spinner/Examples/Demo Scripts/SpriteSwitcher.cs}
{\xe \v Unity/Assets/Yarn Spinner/Examples/Demo Scripts/SpriteSwitcher.cs}
{\bkmkstart AAAAAAAABB}
{\bkmkend AAAAAAAABB}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Yarn.Unity.Example.SpriteSwitcher}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Yarn.Unity.Example.SpriteSwitcher.SpriteInfo}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Yarn.Unity.Example}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Class Documentation\par
\pard\plain 
{\xe \v Yarn::Unity::Example::SpriteSwitcher::SpriteInfo}
{\bkmkstart AAAAAAAABC}
{\bkmkend AAAAAAAABC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
struct Yarn::Unity::Example::SpriteSwitcher::SpriteInfo\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
Collaboration diagram for Yarn.Unity.Example.SpriteSwitcher.SpriteInfo:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d5/dcb/a00170.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Class Members:\par}
\pard\plain \s60\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr string{\bkmkstart AAAAAAAABD}
{\bkmkend AAAAAAAABD}
\cell }{name\cell }{\cell }{\row }
{\qr Sprite{\bkmkstart AAAAAAAABE}
{\bkmkend AAAAAAAABE}
\cell }{sprite\cell }{\cell }{\row }
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
YarnSpinner/Analyser.cs File Reference\par \pard\plain 
{\tc\tcl2 \v YarnSpinner/Analyser.cs}
{\xe \v YarnSpinner/Analyser.cs}
{\bkmkstart AAAAAAAABF}
{\bkmkend AAAAAAAABF}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Yarn.Analysis.Diagnosis}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Yarn.Analysis.Context}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Yarn.Analysis.ASTAnalyser}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Yarn.Analysis.CompiledProgramAnalyser}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Yarn.Analysis.UnusedVariableChecker}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Yarn.Analysis}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
YarnSpinner/Compiler.cs File Reference\par \pard\plain 
{\tc\tcl2 \v YarnSpinner/Compiler.cs}
{\xe \v YarnSpinner/Compiler.cs}
{\bkmkstart AAAAAAAABG}
{\bkmkend AAAAAAAABG}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Yarn.Program}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Yarn.Node}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Yarn.Instruction}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Yarn.Compiler}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Yarn.Compiler.CompileFlags}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Yarn}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Yarn.ByteCode} \{ {\b Yarn.ByteCode.Label}, 
{\b Yarn.ByteCode.JumpTo}, 
{\b Yarn.ByteCode.Jump}, 
{\b Yarn.ByteCode.RunLine}, 
{\b Yarn.ByteCode.RunCommand}, 
{\b Yarn.ByteCode.AddOption}, 
{\b Yarn.ByteCode.ShowOptions}, 
{\b Yarn.ByteCode.PushString}, 
{\b Yarn.ByteCode.PushNumber}, 
{\b Yarn.ByteCode.PushBool}, 
{\b Yarn.ByteCode.PushNull}, 
{\b Yarn.ByteCode.JumpIfFalse}, 
{\b Yarn.ByteCode.Pop}, 
{\b Yarn.ByteCode.CallFunc}, 
{\b Yarn.ByteCode.PushVariable}, 
{\b Yarn.ByteCode.StoreVariable}, 
{\b Yarn.ByteCode.Stop}, 
{\b Yarn.ByteCode.RunNode}
 \}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Class Documentation\par
\pard\plain 
{\xe \v Yarn::Node}
{\bkmkstart AAAAAAAABH}
{\bkmkend AAAAAAAABH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
class Yarn::Node\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
Collaboration diagram for Yarn.Node:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d1/d0d/a00171.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Class Members:\par}
\pard\plain \s60\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr List< {\b Instruction} >{\bkmkstart AAAAAAAABI}
{\bkmkend AAAAAAAABI}
\cell }{instructions\cell }{\cell }{\row }
{\qr Dictionary< string, int >{\bkmkstart AAAAAAAABJ}
{\bkmkend AAAAAAAABJ}
\cell }{labels\cell }{\cell }{\row }
{\qr string{\bkmkstart AAAAAAAABK}
{\bkmkend AAAAAAAABK}
\cell }{name\cell }{\cell }{\row }
{\qr string{\bkmkstart AAAAAAAABL}
{\bkmkend AAAAAAAABL}
\cell }{sourceTextStringID\cell }{\cell }{\row }
}
{\xe \v Yarn::Compiler::CompileFlags}
{\bkmkstart AAAAAAAABM}
{\bkmkend AAAAAAAABM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
struct Yarn::Compiler::CompileFlags\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
Collaboration diagram for Yarn.Compiler.CompileFlags:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/dfb/a00172.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Class Members:\par}
\pard\plain \s60\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr bool{\bkmkstart AAAAAAAABN}
{\bkmkend AAAAAAAABN}
\cell }{DisableShuffleOptionsAfterNextSet\cell }{\cell }{\row }
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
YarnSpinner/Dialogue.cs File Reference\par \pard\plain 
{\tc\tcl2 \v YarnSpinner/Dialogue.cs}
{\xe \v YarnSpinner/Dialogue.cs}
{\bkmkstart AAAAAAAABO}
{\bkmkend AAAAAAAABO}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Yarn.YarnException}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Yarn.Line}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Yarn.Options}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Yarn.Command}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
interface {\b Yarn.VariableStorage}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Yarn.BaseVariableStorage}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Yarn.Dialogue}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Yarn.Dialogue.RunnerResult}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Yarn.Dialogue.LineResult}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Yarn.Dialogue.CommandResult}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Yarn.Dialogue.OptionSetResult}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Yarn.Dialogue.NodeCompleteResult}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Yarn.Dialogue.StandardLibrary}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Yarn}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
delegate void {\b Yarn.OptionChooser} (int selectedOptionIndex)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
delegate void {\b Yarn.Logger} (string message)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Class Documentation\par
\pard\plain 
{\xe \v Yarn::Line}
{\bkmkstart AAAAAAAABP}
{\bkmkend AAAAAAAABP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
struct Yarn::Line\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
Collaboration diagram for Yarn.Line:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d7/d3f/a00173.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Class Members:\par}
\pard\plain \s60\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr string{\bkmkstart AAAAAAAABQ}
{\bkmkend AAAAAAAABQ}
\cell }{text\cell }{\cell }{\row }
}
{\xe \v Yarn::Options}
{\bkmkstart AAAAAAAABR}
{\bkmkend AAAAAAAABR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
struct Yarn::Options\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
Collaboration diagram for Yarn.Options:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d8/df1/a00174.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Class Members:\par}
\pard\plain \s60\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr IList< string >{\bkmkstart AAAAAAAABS}
{\bkmkend AAAAAAAABS}
\cell }{options\cell }{\cell }{\row }
}
{\xe \v Yarn::Command}
{\bkmkstart AAAAAAAABT}
{\bkmkend AAAAAAAABT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
struct Yarn::Command\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
Collaboration diagram for Yarn.Command:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "de/d45/a00175.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Class Members:\par}
\pard\plain \s60\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr string{\bkmkstart AAAAAAAABU}
{\bkmkend AAAAAAAABU}
\cell }{text\cell }{\cell }{\row }
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
YarnSpinner/JsonParser.cs File Reference\par \pard\plain 
{\tc\tcl2 \v YarnSpinner/JsonParser.cs}
{\xe \v YarnSpinner/JsonParser.cs}
{\bkmkstart AAAAAAAABV}
{\bkmkend AAAAAAAABV}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Json.InvalidJsonException}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Exception raised when {\b JsonParser} encounters an invalid token. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Json.JsonParser}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A parser for JSON. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
See Also:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid http://json.org\par
}}}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Json}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Json.JsonToken} \{ {\b Json.JsonToken.Unknown}, 
{\b Json.JsonToken.LeftBrace}, 
{\b Json.JsonToken.RightBrace}, 
{\b Json.JsonToken.Colon}, 
{\b Json.JsonToken.Comma}, 
{\b Json.JsonToken.LeftBracket}, 
{\b Json.JsonToken.RightBracket}, 
{\b Json.JsonToken.String}, 
{\b Json.JsonToken.Number}, 
{\b Json.JsonToken.True}, 
{\b Json.JsonToken.False}, 
{\b Json.JsonToken.Null}
 \}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Possible JSON tokens in parsed input. }}}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
YarnSpinner/Lexer.cs File Reference\par \pard\plain 
{\tc\tcl2 \v YarnSpinner/Lexer.cs}
{\xe \v YarnSpinner/Lexer.cs}
{\bkmkstart AAAAAAAABW}
{\bkmkend AAAAAAAABW}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Yarn.TokeniserException}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Yarn.TokenList}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Yarn.Token}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Yarn.Lexer}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Yarn.Lexer.LexerState}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Yarn.Lexer.TokenRule}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Yarn}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b Yarn.TokenType} \{ {\b Yarn.TokenType.Whitespace}, 
{\b Yarn.TokenType.Indent}, 
{\b Yarn.TokenType.Dedent}, 
{\b Yarn.TokenType.EndOfLine}, 
{\b Yarn.TokenType.EndOfInput}, 
{\b Yarn.TokenType.Number}, 
{\b Yarn.TokenType.String}, 
{\b Yarn.TokenType.BeginCommand}, 
{\b Yarn.TokenType.EndCommand}, 
{\b Yarn.TokenType.Variable}, 
{\b Yarn.TokenType.ShortcutOption}, 
{\b Yarn.TokenType.OptionStart}, 
{\b Yarn.TokenType.OptionDelimit}, 
{\b Yarn.TokenType.OptionEnd}, 
{\b Yarn.TokenType.If}, 
{\b Yarn.TokenType.ElseIf}, 
{\b Yarn.TokenType.Else}, 
{\b Yarn.TokenType.EndIf}, 
{\b Yarn.TokenType.Set}, 
{\b Yarn.TokenType.True}, 
{\b Yarn.TokenType.False}, 
{\b Yarn.TokenType.Null}, 
{\b Yarn.TokenType.LeftParen}, 
{\b Yarn.TokenType.RightParen}, 
{\b Yarn.TokenType.Comma}, 
{\b Yarn.TokenType.EqualTo}, 
{\b Yarn.TokenType.GreaterThan}, 
{\b Yarn.TokenType.GreaterThanOrEqualTo}, 
{\b Yarn.TokenType.LessThan}, 
{\b Yarn.TokenType.LessThanOrEqualTo}, 
{\b Yarn.TokenType.NotEqualTo}, 
{\b Yarn.TokenType.Or}, 
{\b Yarn.TokenType.And}, 
{\b Yarn.TokenType.Xor}, 
{\b Yarn.TokenType.Not}, 
{\b Yarn.TokenType.EqualToOrAssign}, 
{\b Yarn.TokenType.UnaryMinus}, 
{\b Yarn.TokenType.Add}, 
{\b Yarn.TokenType.Minus}, 
{\b Yarn.TokenType.Multiply}, 
{\b Yarn.TokenType.Divide}, 
{\b Yarn.TokenType.AddAssign}, 
{\b Yarn.TokenType.MinusAssign}, 
{\b Yarn.TokenType.MultiplyAssign}, 
{\b Yarn.TokenType.DivideAssign}, 
{\b Yarn.TokenType.Comment}, 
{\b Yarn.TokenType.Identifier}, 
{\b Yarn.TokenType.Text}
 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
YarnSpinner/Library.cs File Reference\par \pard\plain 
{\tc\tcl2 \v YarnSpinner/Library.cs}
{\xe \v YarnSpinner/Library.cs}
{\bkmkstart AAAAAAAABX}
{\bkmkend AAAAAAAABX}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Yarn.FunctionInfo}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Yarn.Library}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Yarn}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
delegate Object {\b Yarn.ReturningFunction} (params Value[] parameters)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
delegate void {\b Yarn.Function} (params Value[] parameters)\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
YarnSpinner/Loader.cs File Reference\par \pard\plain 
{\tc\tcl2 \v YarnSpinner/Loader.cs}
{\xe \v YarnSpinner/Loader.cs}
{\bkmkstart AAAAAAAABY}
{\bkmkend AAAAAAAABY}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Yarn.Loader}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Yarn.Loader.NodeInfo}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Yarn}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CATCH_EXCEPTIONS}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v CATCH_EXCEPTIONS\:Loader.cs}
{\xe \v Loader.cs\:CATCH_EXCEPTIONS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CATCH_EXCEPTIONS}}
\par
{\bkmkstart AAAAAAAABZ}
{\bkmkend AAAAAAAABZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
YarnSpinner/obj/Release/.NETFramework,Version=v4.5.AssemblyAttribute.cs File Reference\par \pard\plain 
{\tc\tcl2 \v YarnSpinner/obj/Release/.NETFramework,Version=v4.5.AssemblyAttribute.cs}
{\xe \v YarnSpinner/obj/Release/.NETFramework,Version=v4.5.AssemblyAttribute.cs}
{\bkmkstart AAAAAAAACA}
{\bkmkend AAAAAAAACA}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
YarnSpinnerConsole/obj/x86/Release/.NETFramework,Version=v4.5.AssemblyAttribute.cs File Reference\par \pard\plain 
{\tc\tcl2 \v YarnSpinnerConsole/obj/x86/Release/.NETFramework,Version=v4.5.AssemblyAttribute.cs}
{\xe \v YarnSpinnerConsole/obj/x86/Release/.NETFramework,Version=v4.5.AssemblyAttribute.cs}
{\bkmkstart AAAAAAAACB}
{\bkmkend AAAAAAAACB}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
YarnSpinnerTests/obj/Release/.NETFramework,Version=v4.5.AssemblyAttribute.cs File Reference\par \pard\plain 
{\tc\tcl2 \v YarnSpinnerTests/obj/Release/.NETFramework,Version=v4.5.AssemblyAttribute.cs}
{\xe \v YarnSpinnerTests/obj/Release/.NETFramework,Version=v4.5.AssemblyAttribute.cs}
{\bkmkstart AAAAAAAACC}
{\bkmkend AAAAAAAACC}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
YarnSpinner/Parser.cs File Reference\par \pard\plain 
{\tc\tcl2 \v YarnSpinner/Parser.cs}
{\xe \v YarnSpinner/Parser.cs}
{\bkmkstart AAAAAAAACD}
{\bkmkend AAAAAAAACD}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Yarn.ParseException}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Yarn.Parser}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Yarn.Parser.ParseNode}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Yarn.Parser.Node}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Yarn.Parser.Statement}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Yarn.Parser.CustomCommand}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Yarn.Parser.ShortcutOptionGroup}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Yarn.Parser.ShortcutOption}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Yarn.Parser.Block}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Yarn.Parser.OptionStatement}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Yarn.Parser.IfStatement}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Yarn.Parser.IfStatement.Clause}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Yarn.Parser.ValueNode}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Yarn.Parser.Expression}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Yarn.Parser.AssignmentStatement}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Yarn.Parser.Operator}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Yarn.Parser.Operator.OperatorInfo}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Yarn}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
YarnSpinner/Properties/AssemblyInfo.cs File Reference\par \pard\plain 
{\tc\tcl2 \v YarnSpinner/Properties/AssemblyInfo.cs}
{\xe \v YarnSpinner/Properties/AssemblyInfo.cs}
{\bkmkstart AAAAAAAACE}
{\bkmkend AAAAAAAACE}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
YarnSpinnerConsole/Properties/AssemblyInfo.cs File Reference\par \pard\plain 
{\tc\tcl2 \v YarnSpinnerConsole/Properties/AssemblyInfo.cs}
{\xe \v YarnSpinnerConsole/Properties/AssemblyInfo.cs}
{\bkmkstart AAAAAAAACF}
{\bkmkend AAAAAAAACF}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
YarnSpinner/TreeRunner.cs File Reference\par \pard\plain 
{\tc\tcl2 \v YarnSpinner/TreeRunner.cs}
{\xe \v YarnSpinner/TreeRunner.cs}
{\bkmkstart AAAAAAAACG}
{\bkmkend AAAAAAAACG}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Yarn.TreeRunner}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Yarn.MemoryVariableStore}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Yarn}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
YarnSpinner/Value.cs File Reference\par \pard\plain 
{\tc\tcl2 \v YarnSpinner/Value.cs}
{\xe \v YarnSpinner/Value.cs}
{\bkmkstart AAAAAAAACH}
{\bkmkend AAAAAAAACH}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Yarn.Value}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Yarn}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
YarnSpinner/VirtualMachine.cs File Reference\par \pard\plain 
{\tc\tcl2 \v YarnSpinner/VirtualMachine.cs}
{\xe \v YarnSpinner/VirtualMachine.cs}
{\bkmkstart AAAAAAAACI}
{\bkmkend AAAAAAAACI}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Yarn.VirtualMachine}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Yarn.VirtualMachine.State}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Yarn.VirtualMachine.SpecialVariables}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Yarn}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Class Documentation\par
\pard\plain 
{\xe \v Yarn::VirtualMachine::SpecialVariables}
{\bkmkstart AAAAAAAACJ}
{\bkmkend AAAAAAAACJ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
class Yarn::VirtualMachine::SpecialVariables\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid }
Collaboration diagram for Yarn.VirtualMachine.SpecialVariables:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d5/de9/a00176.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Class Members:\par}
\pard\plain \s60\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr const string{\bkmkstart AAAAAAAACK}
{\bkmkend AAAAAAAACK}
\cell }{ShuffleOptions\cell }{\cell }{\row }
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
YarnSpinnerConsole/Main.cs File Reference\par \pard\plain 
{\tc\tcl2 \v YarnSpinnerConsole/Main.cs}
{\xe \v YarnSpinnerConsole/Main.cs}
{\bkmkstart AAAAAAAACL}
{\bkmkend AAAAAAAACL}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Yarn.YarnSpinnerConsole}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Yarn.YarnSpinnerConsole.ConsoleRunnerImplementation}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b Yarn}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
YarnSpinnerTests/Test.cs File Reference\par \pard\plain 
{\tc\tcl2 \v YarnSpinnerTests/Test.cs}
{\xe \v YarnSpinnerTests/Test.cs}
{\bkmkstart AAAAAAAACM}
{\bkmkend AAAAAAAACM}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b YarnSpinner.Tests.Test}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
package {\b YarnSpinner.Tests}\par
}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Index\par 
\pard\plain 
{\tc \v Index}
{\field\fldedit {\*\fldinst INDEX \\c2 \\*MERGEFORMAT}{\fldrslt INDEX}}
}