<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="a00199" kind="file">
    <compoundname>antlr-notes-and-discussion.md</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#<sp/>Lets<sp/>talk<sp/>about<sp/>the<sp/>WIP<sp/>ANTLR<sp/>YarnSpinner<sp/>parser</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal">So<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>is<sp/>a<sp/>WIP<sp/>parser/lexer<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>YarnSpinner<sp/>written<sp/>in<sp/>ANTLR<sp/>with<sp/>that<sp/>plan<sp/>being<sp/>that<sp/>it<sp/>will<sp/>eventually<sp/>replace<sp/>the<sp/>hand<sp/>made<sp/>one<sp/>currently<sp/>in<sp/>use.</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal">**THIS<sp/>IS<sp/>ALL<sp/>STILL<sp/>WORK<sp/>IN<sp/>PROGRESS<sp/>AND<sp/>OPEN<sp/>TO<sp/>CHANGE**</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal">For<sp/>discussion<sp/>on<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>jump<sp/>into<sp/>the<sp/>#yarnspinner<sp/>channel<sp/>on<sp/>the<sp/>[Narrative<sp/>Game<sp/>Development](https:</highlight><highlight class="comment">//narrativegamedev.slack.com/)<sp/>slack.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal">I<sp/>thought<sp/>it<sp/>might<sp/>be<sp/>worth<sp/>documenting<sp/>what<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>WIP<sp/>version<sp/>does/doesn</highlight><highlight class="stringliteral">&apos;t<sp/>do<sp/>and<sp/>why<sp/>it<sp/>is<sp/>that<sp/>way,<sp/>should<sp/>make<sp/>moving<sp/>forward<sp/>a<sp/>bit<sp/>simpler.</highlight></codeline>
<codeline lineno="10"><highlight class="stringliteral">Additionally<sp/>because<sp/>we<sp/>are<sp/>doing<sp/>this<sp/>I<sp/>think<sp/>it<sp/>is<sp/>a<sp/>good<sp/>time<sp/>to<sp/>open<sp/>up<sp/>discussion<sp/>about<sp/>the<sp/>syntax<sp/>design<sp/>of<sp/>YarnSpinner.</highlight></codeline>
<codeline lineno="11"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="12"><highlight class="stringliteral">I<sp/>am<sp/>of<sp/>the<sp/>opinion<sp/>that<sp/>the<sp/>syntax<sp/>should<sp/>be<sp/>changed<sp/>as<sp/>it<sp/>currently<sp/>grew<sp/>organically<sp/>rather<sp/>than<sp/>by<sp/>design.</highlight></codeline>
<codeline lineno="13"><highlight class="stringliteral">That<sp/>doesn&apos;</highlight><highlight class="normal">t<sp/>mean<sp/>what<sp/>it<sp/>currently<sp/>is<sp/>is<sp/>garbage<sp/>or<sp/>that<sp/>is<sp/>worth<sp/>throwing<sp/>out<sp/>the<sp/>design<sp/>already<sp/>done<sp/>as<sp/>there<sp/>is<sp/>a<sp/>LOT<sp/>of<sp/>great<sp/>stuff<sp/>in<sp/>there.</highlight></codeline>
<codeline lineno="14"><highlight class="normal">This<sp/>is<sp/>also<sp/>NOT<sp/>me<sp/>saying<sp/>how<sp/>it<sp/>should<sp/>be<sp/>done,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>is<sp/>just<sp/>how<sp/>I<sp/>am<sp/>doing<sp/>it<sp/>and<sp/>ideally<sp/>forms<sp/>the<sp/>beginning<sp/>of<sp/>a<sp/>discussion<sp/>around<sp/>the<sp/>future<sp/>of<sp/>YarnSpinner<sp/>syntax<sp/>and<sp/>features.</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal">##<sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>the<sp/>ANTRL<sp/>compiler</highlight></codeline>
<codeline lineno="17"><highlight class="normal">This<sp/>is<sp/>now<sp/>partially<sp/>built<sp/>into<sp/>YarnSpinner.<sp/>`Dialogue`<sp/>objects<sp/>have<sp/>an<sp/>`experimentalMode`<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>flag<sp/>that<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>set<sp/>to<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>they<sp/>will<sp/>use<sp/>the<sp/>ANTLR<sp/>compiler.</highlight></codeline>
<codeline lineno="18"><highlight class="normal">This<sp/>can<sp/>only<sp/>be<sp/>done<sp/>on<sp/>objects<sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>the<sp/>yarn.txt<sp/>format,<sp/>all<sp/>others<sp/>will<sp/>fail<sp/>to<sp/>parse.</highlight></codeline>
<codeline lineno="19"><highlight class="normal">To<sp/>use<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>you<sp/>will<sp/>need<sp/>to<sp/>install<sp/>ANTLR<sp/>on<sp/>your<sp/>system<sp/>and<sp/>run<sp/>it<sp/>across<sp/>the<sp/>grammar<sp/>files.</highlight></codeline>
<codeline lineno="20"><highlight class="normal">At<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>point<sp/>in<sp/>time<sp/>the<sp/><ref refid="a00348_1a3da6d48778c7b08a040bf24377f67792" kindref="member">output</ref><sp/>of<sp/>ANTLR<sp/>is<sp/>not<sp/>stored<sp/>in<sp/>source<sp/>control<sp/>(and<sp/>probably<sp/>never<sp/>should<sp/>be).</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal">Assuming<sp/>you<sp/>have<sp/>an<sp/>alias<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>antlr<sp/>already<sp/>set<sp/>up,<sp/>to<sp/>generate<sp/>the<sp/>files<sp/>you<sp/>will<sp/>need<sp/>the<sp/>command<sp/>is<sp/>as<sp/>follows:</highlight></codeline>
<codeline lineno="23"><highlight class="normal">```</highlight></codeline>
<codeline lineno="24"><highlight class="normal">antlr<sp/>-Dlanguage=CSharp<sp/>-visitor<sp/>*.g4</highlight></codeline>
<codeline lineno="25"><highlight class="normal">```</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal">Then<sp/>copy<sp/>these<sp/>into<sp/>the<sp/>YarnSpinner<sp/>project.</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal">##<sp/>`=`<sp/>is<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>assignment<sp/>and<sp/>assignment<sp/>alone</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal">In<sp/>a<sp/>language<sp/>that<sp/>doesn</highlight><highlight class="stringliteral">&apos;t<sp/>have<sp/>operator<sp/>overloading,<sp/>and<sp/>pretty<sp/>much<sp/>always<sp/>defines<sp/>a<sp/>new<sp/>keyword<sp/>for<sp/>new<sp/>functionality,<sp/>we<sp/>have<sp/>this<sp/>single<sp/>case<sp/>where<sp/>`=`<sp/>can<sp/>be<sp/>used<sp/>for<sp/>comparison<sp/>and<sp/>equality.</highlight></codeline>
<codeline lineno="32"><highlight class="stringliteral">This<sp/>is<sp/>a<sp/>peeve<sp/>of<sp/>mine<sp/>because<sp/>it<sp/>complicates<sp/>design<sp/>and<sp/>implementation<sp/>for,<sp/>what<sp/>is<sp/>in<sp/>my<sp/>mind,<sp/>a<sp/>tiny<sp/>feature,<sp/>so<sp/>I<sp/>just<sp/>took<sp/>that<sp/>feature<sp/>out.</highlight></codeline>
<codeline lineno="33"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="34"><highlight class="stringliteral">###<sp/>Reasons<sp/>to<sp/>keep<sp/>old<sp/>style</highlight></codeline>
<codeline lineno="35"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="36"><highlight class="stringliteral">-<sp/>Backwards<sp/>compatibility</highlight></codeline>
<codeline lineno="37"><highlight class="stringliteral">-<sp/>Initially<sp/>makes<sp/>more<sp/>sense<sp/>than<sp/>`==`<sp/>(subjective)</highlight></codeline>
<codeline lineno="38"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="39"><highlight class="stringliteral">###<sp/>Reasons<sp/>to<sp/>change</highlight></codeline>
<codeline lineno="40"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="41"><highlight class="stringliteral">-<sp/>easy<sp/>enough<sp/>to<sp/>explain<sp/>to<sp/>people<sp/>where<sp/>to<sp/>use<sp/>`==`<sp/>vs.<sp/>`=`</highlight></codeline>
<codeline lineno="42"><highlight class="stringliteral">-<sp/>limit<sp/>confusion<sp/>for<sp/>users<sp/>if<sp/>they<sp/>see<sp/>dialogue<sp/>using<sp/>`==`<sp/>and<sp/>`=`</highlight></codeline>
<codeline lineno="43"><highlight class="stringliteral">-<sp/>avoid<sp/>arguments<sp/>around<sp/>&quot;well<sp/>we<sp/>already<sp/>have<sp/>overloading<sp/>on<sp/>=&quot;<sp/>for<sp/>future<sp/>syntax</highlight></codeline>
<codeline lineno="44"><highlight class="stringliteral">-<sp/>closer<sp/>to<sp/>existing<sp/>programming<sp/>languages</highlight></codeline>
<codeline lineno="45"><highlight class="stringliteral">-<sp/>already<sp/>have<sp/>`is`<sp/>keyword<sp/>if<sp/>people<sp/>really<sp/>don&apos;</highlight><highlight class="normal">t<sp/>like<sp/>`==`</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">##<sp/>The<sp/>`-&gt;`<sp/><sp/>shortcut<sp/>syntax</highlight></codeline>
<codeline lineno="48"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal">Shortcuts<sp/>are<sp/>now<sp/>implemented<sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>a<sp/>two<sp/>stage<sp/>approach,<sp/>where<sp/>the<sp/>Yarn<sp/>files<sp/>are<sp/>run<sp/>through<sp/>a<sp/>preprocessor<sp/>(the<sp/>reference<sp/>preprocesser<sp/>and<sp/>one<sp/>used<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>tests<sp/>is<sp/>currently<sp/>written<sp/>in<sp/>Python,<sp/>the<sp/>one<sp/>inside<sp/>the<sp/>project<sp/>is<sp/>written<sp/>in<sp/>C#)<sp/>to<sp/>add<sp/>in<sp/><ref refid="a00348_1a00fba9ee9674b2513dbe28eab795b734" kindref="member">indents</ref><sp/>and<sp/>dedents<sp/>to<sp/>build<sp/>up<sp/>the<sp/>blocks<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>shortcuts.</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal">Due<sp/>to<sp/>the<sp/>nature<sp/>of<sp/>ANTLR<sp/>and<sp/>YarnSpinners<sp/>rather<sp/>unusual<sp/>approach<sp/>to<sp/>whitespace<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>was<sp/>found<sp/>to<sp/>be<sp/>the<sp/>simplest<sp/>approach<sp/>as<sp/>it<sp/>means<sp/>there<sp/>is<sp/>no<sp/>code<sp/>in<sp/>the<sp/>grammar<sp/>file<sp/>itself.</highlight></codeline>
<codeline lineno="52"><highlight class="normal">There<sp/>is<sp/>now<sp/>however<sp/>an<sp/>extra<sp/>step<sp/>and<sp/>the<sp/>preprocessor<sp/>will<sp/>need<sp/>to<sp/>be<sp/>ported<sp/>to<sp/>each<sp/>language.</highlight></codeline>
<codeline lineno="53"><highlight class="normal">It<sp/>was<sp/>done<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>way<sp/>as<sp/>the<sp/>preprocessor<sp/>itself<sp/>is<sp/>quite<sp/>straightforward<sp/>compared<sp/>to<sp/>what<sp/>the<sp/>extra<sp/>code<sp/>in<sp/>the<sp/>grammar<sp/>would<sp/>be.</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal">A<sp/>side-effect<sp/>of<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>is<sp/>that<sp/>a<sp/>symbol<sp/>had<sp/>to<sp/>be<sp/>chosen<sp/>to<sp/>represent<sp/>the<sp/><ref refid="a00348_1a00fba9ee9674b2513dbe28eab795b734" kindref="member">indents</ref>/dedents.</highlight></codeline>
<codeline lineno="56"><highlight class="normal">I<sp/>went<sp/>with<sp/>the<sp/>`\a`<sp/>or<sp/>bell<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><ref refid="a00348_1a00fba9ee9674b2513dbe28eab795b734" kindref="member">indents</ref><sp/>(playing<sp/>the<sp/>role<sp/>`{`<sp/>normally<sp/>does)<sp/>and<sp/>`\v`<sp/>or<sp/>vertical<sp/>tab<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>dedent<sp/>(`}`<sp/>equivalent).</highlight></codeline>
<codeline lineno="57"><highlight class="normal">Both<sp/>of<sp/>these<sp/>were<sp/>chosen<sp/>as<sp/>they<sp/>are<sp/>invisible<sp/>(somewhat)<sp/>and<sp/>unlikely<sp/>(especially<sp/>in<sp/>the<sp/>case<sp/>of<sp/>bell)<sp/>to<sp/>be<sp/>used<sp/>in<sp/>existing<sp/>Yarn<sp/>files,<sp/>additionally<sp/>as<sp/>control<sp/>characters<sp/>they<sp/>don&apos;t<sp/>limit<sp/>the<sp/>amount<sp/>of<sp/>available<sp/>characters<sp/>in<sp/>text<sp/>lines.</highlight></codeline>
<codeline lineno="58"><highlight class="normal">This<sp/>does<sp/>mean<sp/>however<sp/>if<sp/>someone<sp/>was<sp/>using<sp/>either<sp/>of<sp/>those<sp/>two<sp/>in<sp/>their<sp/>Yarn<sp/>files<sp/>their<sp/>files<sp/>won&apos;t<sp/>parse<sp/>correctly.</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal">While<sp/>this<sp/>works<sp/>this<sp/>also<sp/>allows<sp/>for<sp/>an<sp/>opportunity<sp/>to<sp/>discuss<sp/>the<sp/>`-&gt;`<sp/>syntax.</highlight></codeline>
<codeline lineno="61"><highlight class="normal">It<sp/>currently<sp/>has<sp/>remarkably<sp/>flexible<sp/>rules<sp/>around<sp/>the<sp/>whitespace,<sp/>such<sp/>that<sp/>it<sp/>allows<sp/>structures<sp/>that<sp/>would<sp/>break<sp/>in<sp/>almost<sp/>any<sp/>other<sp/>whitespace<sp/>programming<sp/>language.</highlight></codeline>
<codeline lineno="62"><highlight class="normal">Is<sp/>this<sp/>something<sp/>worth<sp/>changing?</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal">Options<sp/>to<sp/>change<sp/>include:</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal">-<sp/>Locking<sp/>down<sp/>the<sp/>syntax<sp/>a<sp/>bit<sp/>more<sp/>so<sp/>that<sp/>whitespace<sp/>rules<sp/>are<sp/>enforced<sp/>more<sp/>than<sp/>currently,<sp/>Python<sp/>offers<sp/>a<sp/>guideline<sp/>for<sp/>how<sp/>this<sp/>would<sp/>look.</highlight></codeline>
<codeline lineno="67"><highlight class="normal">-<sp/>Using<sp/>the<sp/>use<sp/>of<sp/>a<sp/>`{<sp/>}`<sp/>(or<sp/>something<sp/>similar)<sp/>syntax<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>the<sp/>`-&gt;`<sp/>code<sp/>blocks.</highlight></codeline>
<codeline lineno="68"><highlight class="normal">-<sp/>Using<sp/>a<sp/>close<sp/>tag<sp/>similar<sp/>to<sp/>`&lt;&lt;endif&gt;&gt;`<sp/>perhaps<sp/>`&lt;-`.</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal">At<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>stage<sp/>it<sp/>isn</highlight><highlight class="stringliteral">&apos;t<sp/>worth<sp/>changing<sp/>as<sp/>it<sp/>is<sp/>currently<sp/>working<sp/>fine,<sp/>but<sp/>this<sp/>is<sp/>something<sp/>to<sp/>consider<sp/>going<sp/>forward.</highlight></codeline>
<codeline lineno="71"><highlight class="stringliteral">It<sp/>might<sp/>well<sp/>be<sp/>worth<sp/>changing<sp/>the<sp/>ident<sp/>and<sp/>dedent<sp/>characters<sp/>to<sp/>^]<sp/>and<sp/>^^<sp/>(Group<sp/>Separator<sp/>and<sp/>Record<sp/>Separator)<sp/>as<sp/>these<sp/>are<sp/>*more*<sp/>invisible<sp/>than<sp/>bell<sp/>and<sp/>vertical<sp/>tab<sp/>and<sp/>semantically<sp/>make<sp/>more<sp/>sense<sp/>and<sp/>are<sp/>in<sp/>even<sp/>less<sp/>use<sp/>than<sp/>bell<sp/>or<sp/>vertical<sp/>tab.</highlight></codeline>
<codeline lineno="72"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="73"><highlight class="stringliteral">###<sp/>Reasons<sp/>to<sp/>keep<sp/>to<sp/>old<sp/>style</highlight></codeline>
<codeline lineno="74"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="75"><highlight class="stringliteral">-<sp/>Backwards<sp/>compatibility</highlight></codeline>
<codeline lineno="76"><highlight class="stringliteral">-<sp/>More<sp/>obvious<sp/>(subjective)</highlight></codeline>
<codeline lineno="77"><highlight class="stringliteral">-<sp/>easier<sp/>to<sp/>write</highlight></codeline>
<codeline lineno="78"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="79"><highlight class="stringliteral">###<sp/>Reasons<sp/>to<sp/>change<sp/>to<sp/>new<sp/>style</highlight></codeline>
<codeline lineno="80"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="81"><highlight class="stringliteral">-<sp/>Easier<sp/>to<sp/>parse</highlight></codeline>
<codeline lineno="82"><highlight class="stringliteral">-<sp/>Allows<sp/>for<sp/>single<sp/>line<sp/>shortcuts<sp/>eg<sp/>-&gt;etc<sp/>{-&gt;etcetc}</highlight></codeline>
<codeline lineno="83"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="84"><highlight class="stringliteral">##<sp/>Comments<sp/>can&apos;</highlight><highlight class="normal">t<sp/>go<sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>a<sp/>command</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal">For<sp/>example<sp/>the<sp/>following<sp/>doesn</highlight><highlight class="stringliteral">&apos;t<sp/>work</highlight></codeline>
<codeline lineno="87"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="88"><highlight class="stringliteral">```</highlight></codeline>
<codeline lineno="89"><highlight class="stringliteral">&lt;&lt;set<sp/>$foo<sp/>=<sp/>2<sp/>+<sp/>1<sp/>*</highlight></codeline>
<codeline lineno="90"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>(2<sp/>+<sp/>1)<sp/>//<sp/>quick<sp/>explanation<sp/>why<sp/>you<sp/>would<sp/>do<sp/>this,<sp/>seriously<sp/>explain<sp/>this,<sp/>this<sp/>seems<sp/>weird<sp/>to<sp/>break<sp/>this<sp/>statement<sp/>up...</highlight></codeline>
<codeline lineno="91"><highlight class="stringliteral">&gt;&gt;</highlight></codeline>
<codeline lineno="92"><highlight class="stringliteral">```</highlight></codeline>
<codeline lineno="93"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="94"><highlight class="stringliteral">Purely<sp/>an<sp/>implementation<sp/>issue,<sp/>I<sp/>see<sp/>literally<sp/>no<sp/>reason<sp/>this<sp/>shouldn&apos;</highlight><highlight class="normal">t<sp/>happen,<sp/>just<sp/>saying<sp/>that<sp/>it<sp/>is<sp/>that<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>now.</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal">##<sp/>Option<sp/>parsing<sp/>is<sp/>far<sp/>from<sp/>ideal</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal">Because<sp/>the<sp/>structure<sp/>of<sp/>the<sp/>option<sp/>syntax<sp/>is<sp/>`[[free<sp/>text<sp/>|<sp/>nodeName]]`,<sp/>when<sp/>creating<sp/>single<sp/>structure<sp/>option<sp/>`[[nodeName]]`<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>is<sp/>not<sp/>being<sp/>correctly<sp/>identified<sp/>as<sp/>an<sp/>option<sp/>link<sp/>but<sp/>instead<sp/>as<sp/>an<sp/>option<sp/>text.</highlight></codeline>
<codeline lineno="99"><highlight class="normal">This<sp/>isn</highlight><highlight class="stringliteral">&apos;t<sp/>really<sp/>a<sp/>huge<sp/>issue<sp/>and<sp/>it<sp/>doesn&apos;</highlight><highlight class="normal">t<sp/>impact<sp/>the<sp/>implementation<sp/>of<sp/>the<sp/>ANTLR<sp/>compiler,<sp/>it<sp/>just<sp/>looks<sp/>messy<sp/>to<sp/>me.</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal">Options<sp/>are<sp/>to<sp/>change<sp/>the<sp/>syntax.</highlight></codeline>
<codeline lineno="102"><highlight class="normal">My<sp/>suggestion<sp/>to<sp/>change<sp/>the<sp/>syntax<sp/>so<sp/>that<sp/>it<sp/>goes<sp/>`[[nodeName<sp/>|<sp/>free<sp/>text]]`,<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>makes<sp/>it<sp/>easier<sp/>to<sp/>parse.</highlight></codeline>
<codeline lineno="103"><highlight class="normal">This<sp/>also<sp/>makes<sp/>more<sp/>semantic<sp/>sense<sp/>to<sp/>me<sp/>as<sp/>the<sp/>link<sp/>to<sp/>the<sp/>node<sp/>is<sp/>more<sp/>important<sp/>than<sp/>the<sp/>dialogue<sp/>line<sp/>that<sp/>triggers<sp/>it.</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal">###<sp/>Reasons<sp/>to<sp/>keep<sp/>to<sp/>the<sp/>old<sp/>style</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal">-<sp/>backwards<sp/>compatibility</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal">###<sp/>Reasons<sp/>to<sp/>change<sp/>to<sp/>the<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>style</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal">-<sp/>easier<sp/>to<sp/>parse</highlight></codeline>
<codeline lineno="112"><highlight class="normal">-<sp/>makes<sp/>more<sp/>sense<sp/>start<sp/>with<sp/>the<sp/>link<sp/>(subjective)</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="preprocessor">##<sp/>Keywords<sp/>are<sp/>allowed<sp/>to<sp/>be<sp/>upper<sp/>or<sp/>lower<sp/>case</highlight></codeline>
<codeline lineno="115"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal">Keywords<sp/>like<sp/>`</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">`,<sp/>`endif`,<sp/>`is`,<sp/>etc<sp/>etc<sp/>are<sp/>allowed<sp/>in<sp/>either<sp/>all<sp/>upper<sp/>(eg<sp/>`SET`)<sp/>or<sp/>all<sp/>lower<sp/>(eg<sp/>`set`)<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal">.</highlight></codeline>
<codeline lineno="117"><highlight class="normal">This<sp/>is<sp/>something<sp/>I<sp/>did<sp/>quickly<sp/>as<sp/>it<sp/>took<sp/>almost<sp/>zero<sp/>effort<sp/>to<sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>and<sp/>personally<sp/>makes<sp/>sense.</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal">The<sp/>question<sp/>is,<sp/>is<sp/>it<sp/>worth<sp/>keeping<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>picking<sp/>a<sp/>single<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>approach,<sp/>extending<sp/>it<sp/>to<sp/>allowed<sp/>mixed<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>(eg<sp/>`eNDiF`),<sp/>extending<sp/>to<sp/>allow<sp/>Titled<sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>(eg<sp/>`True`,<sp/>`</highlight><highlight class="keyword">true</highlight><highlight class="normal">`,<sp/>`TRUE`<sp/>all<sp/>being<sp/>valid<sp/>but<sp/>`tRue`<sp/>not<sp/>valid)?</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="preprocessor">##<sp/>functions<sp/>vs<sp/>actions<sp/>vs<sp/>commands</highlight></codeline>
<codeline lineno="122"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal">As<sp/>it<sp/>currently<sp/>stands<sp/>YarnSpinner<sp/>has<sp/>three<sp/>different<sp/>ways<sp/>of<sp/>controlling<sp/>the<sp/>game<sp/>and<sp/>dialogue.</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal">Commands<sp/>use<sp/>a<sp/>keyword<sp/>(like<sp/>`</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">`<sp/>or<sp/>`set`)<sp/>and<sp/>are<sp/>followed<sp/>by<sp/>an<sp/>expression:</highlight></codeline>
<codeline lineno="126"><highlight class="normal">`&lt;&lt;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>expression&gt;&gt;`</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal">Actions<sp/>allow<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>the<sp/>dialogue<sp/>to<sp/>send<sp/>a<sp/>message<sp/>back<sp/>to<sp/>the<sp/>game<sp/>and<sp/>don</highlight><highlight class="stringliteral">&apos;t<sp/>use<sp/>keywords<sp/>and<sp/>are<sp/>allowed<sp/>most<sp/>text:</highlight></codeline>
<codeline lineno="129"><highlight class="stringliteral">`&lt;&lt;unlockAchievement<sp/>doAThing&gt;&gt;`</highlight></codeline>
<codeline lineno="130"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="131"><highlight class="stringliteral">Functions<sp/>don&apos;</highlight><highlight class="normal">t<sp/>use<sp/>keywords<sp/>and<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>as<sp/>an<sp/>expression<sp/>and<sp/>can<sp/>influence<sp/>both<sp/>the<sp/>game<sp/>and<sp/>the<sp/>dialogue<sp/>(depending<sp/>how<sp/>used):</highlight></codeline>
<codeline lineno="132"><highlight class="normal">`&lt;&lt;assert(1<sp/>&lt;<sp/>3)&gt;&gt;`</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal">This<sp/>is<sp/>not<sp/>only<sp/>messy<sp/>in<sp/>my<sp/>mind<sp/>from<sp/>a<sp/>readability<sp/>perspective<sp/>it<sp/>also<sp/>makes<sp/>it<sp/>trickier<sp/>to<sp/>parse.</highlight></codeline>
<codeline lineno="135"><highlight class="normal">We<sp/>have<sp/>3<sp/>uses<sp/>of<sp/>the<sp/>`&lt;&lt;&gt;&gt;`<sp/>syntax,<sp/>one<sp/>of<sp/>which<sp/>has<sp/>keywords<sp/>to<sp/>control<sp/>and<sp/>two<sp/>which<sp/>are<sp/>determined<sp/>entirely<sp/>on<sp/>the<sp/>text<sp/>inside.</highlight></codeline>
<codeline lineno="136"><highlight class="normal">The<sp/>commands<sp/>impact<sp/>the<sp/>dialogue,<sp/>functions<sp/>impact<sp/>YarnSpinner<sp/>itself,<sp/>and<sp/>actions<sp/>impact<sp/>the<sp/>game.</highlight></codeline>
<codeline lineno="137"><highlight class="normal">In<sp/>my<sp/>mind<sp/>these<sp/>are<sp/>completely<sp/>unrelated<sp/>to<sp/>each<sp/>other<sp/>in<sp/>functionality<sp/>yet<sp/>share<sp/>a<sp/>very<sp/>common<sp/>syntax,<sp/>leading<sp/>to<sp/>confusion<sp/>or<sp/>small<sp/>typos<sp/>resulting<sp/>in<sp/>unexpected<sp/>behaviour,<sp/>eg:</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal">-<sp/>should<sp/>`&lt;&lt;if<sp/>5&gt;&gt;`<sp/>be<sp/>a<sp/>command<sp/>or<sp/>an<sp/>action?</highlight></codeline>
<codeline lineno="140"><highlight class="normal">-<sp/>is<sp/>`&lt;&lt;hello<sp/>there()&gt;&gt;`<sp/>a<sp/>function<sp/>or<sp/>an<sp/>action?</highlight></codeline>
<codeline lineno="141"><highlight class="normal">-<sp/>how<sp/>is<sp/>`&lt;&lt;assert(2<sp/>&lt;<sp/>3)&gt;&gt;`<sp/>different<sp/>from<sp/>`&lt;&lt;assert<sp/>2<sp/>&lt;<sp/>3&gt;&gt;`?</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal">These<sp/>are<sp/>easily<sp/>answered<sp/>and<sp/>understandable<sp/>from<sp/>my<sp/>perspective<sp/>but<sp/>I<sp/>believe<sp/>the<sp/>point<sp/>should<sp/>be<sp/>to<sp/>minimise<sp/>the<sp/>amount<sp/>of<sp/>specialised<sp/>knowledge<sp/>needed,<sp/>and<sp/>overloading<sp/>syntax<sp/>is<sp/>the<sp/>opposite<sp/>of<sp/>that.</highlight></codeline>
<codeline lineno="144"><highlight class="normal">While<sp/>these<sp/>can<sp/>be<sp/>fixed<sp/>with<sp/>warning<sp/>and<sp/>error<sp/>messages<sp/>it<sp/>does<sp/>feel<sp/>a<sp/>bit<sp/>like<sp/>something<sp/>that<sp/>should<sp/>be<sp/>investigated<sp/>if<sp/>this<sp/>is<sp/>the<sp/>right<sp/>way<sp/>moving<sp/>forward.</highlight></codeline>
<codeline lineno="145"><highlight class="normal">I<sp/>would<sp/>change<sp/>this<sp/>either<sp/>so<sp/>everything<sp/>has<sp/>a<sp/>keyword<sp/>to<sp/>control<sp/>its<sp/>functionality,<sp/>or<sp/>change<sp/>the<sp/>`&lt;&lt;&gt;&gt;`<sp/>so<sp/>that<sp/>the<sp/>different<sp/>capabilities<sp/>use<sp/>different<sp/>syntax.</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal">##<sp/>Identifiers</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal">The<sp/>rules<sp/>around<sp/>what<sp/>can<sp/>be<sp/>identifiers<sp/>are<sp/>effectively<sp/>arbitrary,<sp/>as<sp/>it<sp/>currently<sp/>stands<sp/>they<sp/>can<sp/>be<sp/>any<sp/>upper<sp/>or<sp/>lower<sp/>a-z,<sp/>any<sp/>numbers,<sp/>and<sp/>the<sp/>_<sp/>symbol.</highlight></codeline>
<codeline lineno="150"><highlight class="normal">This<sp/>also<sp/>somewhat<sp/>ties<sp/>into<sp/>almost<sp/>everything<sp/>else<sp/>that<sp/>can<sp/>have<sp/>generic<sp/>text,<sp/>i.e<sp/>do<sp/>we<sp/>allow<sp/>arbitrary<sp/>text<sp/>inside<sp/>actions<sp/>or<sp/>does<sp/>it<sp/>have<sp/>to<sp/>conform<sp/>to<sp/>a<sp/>pattern?</highlight></codeline>
<codeline lineno="151"><highlight class="normal">What<sp/>should<sp/>and<sp/>shouldn</highlight><highlight class="stringliteral">&apos;t<sp/>be<sp/>allowed<sp/>as<sp/>identifiers<sp/>and<sp/>why?</highlight></codeline>
<codeline lineno="152"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="153"><highlight class="stringliteral">##<sp/>Headers</highlight></codeline>
<codeline lineno="154"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="155"><highlight class="stringliteral">As<sp/>it<sp/>currently<sp/>stands<sp/>the<sp/>allowed<sp/>headers<sp/>are<sp/>`title`<sp/>(required)<sp/>and<sp/>`tags`,<sp/>`position`,<sp/>and<sp/>`colorID`<sp/>all<sp/>being<sp/>optional.</highlight></codeline>
<codeline lineno="156"><highlight class="stringliteral">Because<sp/>of<sp/>a<sp/>combination<sp/>of<sp/>my<sp/>hesitance<sp/>to<sp/>in<sp/>line<sp/>code,<sp/>and<sp/>ANTLR4<sp/>syntax<sp/>there<sp/>is<sp/>nothing<sp/>stopping<sp/>you<sp/>putting<sp/>as<sp/>many<sp/>of<sp/>the<sp/>optional<sp/>headers<sp/>in<sp/>as<sp/>you<sp/>want.</highlight></codeline>
<codeline lineno="157"><highlight class="stringliteral">When<sp/>it<sp/>comes<sp/>time<sp/>to<sp/>compile<sp/>the<sp/>Yarn<sp/>files<sp/>the<sp/>compiler<sp/>will<sp/>complain<sp/>about<sp/>this<sp/>but<sp/>the<sp/>parser<sp/>will<sp/>not.</highlight></codeline>
<codeline lineno="158"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="159"><highlight class="stringliteral">This<sp/>is<sp/>another<sp/>area<sp/>that<sp/>needs<sp/>to<sp/>be<sp/>discussed,<sp/>not<sp/>everything<sp/>can<sp/>be<sp/>done<sp/>in<sp/>ANTLR,<sp/>in<sp/>places<sp/>where<sp/>it<sp/>can<sp/>be<sp/>solved<sp/>with<sp/>in<sp/>lining<sp/>code<sp/>we<sp/>need<sp/>to<sp/>work<sp/>out<sp/>some<sp/>rules<sp/>for<sp/>when<sp/>we<sp/>should<sp/>and<sp/>should<sp/>not<sp/>do<sp/>this.</highlight></codeline>
<codeline lineno="160"><highlight class="stringliteral">As<sp/>it<sp/>currently<sp/>stands<sp/>there<sp/>are<sp/>no<sp/>code<sp/>sections<sp/>in<sp/>the<sp/>the<sp/>grammar.</highlight></codeline>
<codeline lineno="161"><highlight class="stringliteral">This<sp/>is<sp/>partially<sp/>due<sp/>to<sp/>my<sp/>experience<sp/>with<sp/>ANTLR<sp/>and<sp/>partially<sp/>due<sp/>to<sp/>my<sp/>unwillingness<sp/>to<sp/>add<sp/>code,<sp/>as<sp/>each<sp/>part<sp/>of<sp/>code<sp/>is<sp/>something<sp/>that<sp/>will<sp/>have<sp/>to<sp/>be<sp/>ported<sp/>when<sp/>the<sp/>time<sp/>comes,<sp/>this<sp/>feels<sp/>messy<sp/>and<sp/>against<sp/>the<sp/>spirit<sp/>of<sp/>ANTLR<sp/>to<sp/>me.</highlight></codeline>
<codeline lineno="162"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="163"><highlight class="stringliteral">With<sp/>that<sp/>said,<sp/>some<sp/>things<sp/>will<sp/>be<sp/>MUCH<sp/>easier<sp/>to<sp/>do<sp/>with<sp/>in<sp/>line<sp/>code<sp/>and<sp/>can<sp/>likely<sp/>be<sp/>written<sp/>in<sp/>a<sp/>way<sp/>that<sp/>is<sp/>either<sp/>applicable<sp/>to<sp/>multiple<sp/>target<sp/>languages<sp/>or<sp/>simple<sp/>enough<sp/>that<sp/>tweaking<sp/>it<sp/>won&apos;</highlight><highlight class="normal">t<sp/>be<sp/>a<sp/>problem,<sp/>this<sp/>is<sp/>all<sp/>an<sp/>area<sp/>we<sp/>need<sp/>to<sp/>look<sp/>at<sp/>as<sp/>we<sp/>head<sp/>forward.</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal">This<sp/>also<sp/>opens<sp/>up<sp/>the<sp/>question<sp/>of<sp/>what<sp/>are<sp/>allowed<sp/>in<sp/>headers.</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal">-<sp/>What<sp/>headers<sp/>should<sp/>be<sp/>mandatory?</highlight></codeline>
<codeline lineno="168"><highlight class="normal">-<sp/>Can<sp/>you<sp/>define<sp/>your<sp/>own<sp/>headers?</highlight></codeline>
<codeline lineno="169"><highlight class="normal">-<sp/>What<sp/>value<sp/>can<sp/>each<sp/>header<sp/>support?</highlight></codeline>
    </programlisting>
    <location file="/home/travis/build/thesecretlab/YarnSpinner/ANTLR/antlr-notes-and-discussion.md"/>
  </compounddef>
</doxygen>
