<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="d4/d3a/a00101" kind="file">
    <compoundname>Usage.md</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#<sp/>Yarn<sp/>for<sp/>Writers</highlight></codeline>
<codeline lineno="2"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal">This<sp/>document<sp/>talks<sp/>about<sp/>how<sp/>to<sp/>use<sp/>Yarn<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>you</highlight><highlight class="stringliteral">&apos;re<sp/>using<sp/>it<sp/>to<sp/>write<sp/>content.<sp/>It<sp/>doesn&apos;</highlight><highlight class="normal">t<sp/>talk<sp/>about<sp/>how<sp/>to<sp/>integrate<sp/>Yarn<sp/>Spinner<sp/>into<sp/>your<sp/>project;<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>that,<sp/>see<sp/>[</highlight><highlight class="stringliteral">&quot;Using<sp/>Yarn<sp/>Spinner<sp/>in<sp/>your<sp/>Unity<sp/>game&quot;</highlight><highlight class="normal">](Unity.md).</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal">##<sp/>Lines</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal">Yarn<sp/>lets<sp/>you<sp/>define<sp/>multiple<sp/>chunks<sp/>of<sp/>dialogue<sp/>that<sp/>are<sp/>linked<sp/>together.<sp/>Each<sp/>chunk<sp/>is<sp/>called<sp/>a<sp/>*node*.</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal">Nodes<sp/>are<sp/>filled<sp/>with<sp/>different<sp/>kinds<sp/>of<sp/>text.<sp/>The<sp/>simplest<sp/>is<sp/>lines<sp/>of<sp/>dialogue,<sp/>which<sp/>look<sp/>like<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>Alice:<sp/>Hey,<sp/>I</highlight><highlight class="stringliteral">&apos;m<sp/>a<sp/>character<sp/>speaking<sp/>in<sp/>a<sp/>dialogue!</highlight></codeline>
<codeline lineno="12"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Bob:<sp/>Wild!</highlight></codeline>
<codeline lineno="13"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="14"><highlight class="stringliteral">Each<sp/>line<sp/>is<sp/>delivered<sp/>to<sp/>your<sp/>game<sp/>one<sp/>at<sp/>a<sp/>time.</highlight></codeline>
<codeline lineno="15"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="16"><highlight class="stringliteral">##<sp/>Options</highlight></codeline>
<codeline lineno="17"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="18"><highlight class="stringliteral">To<sp/>link<sp/>a<sp/>node<sp/>to<sp/>another<sp/>node,<sp/>you<sp/>provide<sp/>*options*.<sp/>Options<sp/>look<sp/>like<sp/>this:</highlight></codeline>
<codeline lineno="19"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="20"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>[[Go<sp/>to<sp/>the<sp/>woods|GoToWoods]]</highlight></codeline>
<codeline lineno="21"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>[[Go<sp/>back<sp/>to<sp/>the<sp/>city|GoToCity]]</highlight></codeline>
<codeline lineno="22"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="23"><highlight class="stringliteral">Options<sp/>have<sp/>two<sp/>parts:<sp/>the<sp/>label,<sp/>which<sp/>is<sp/>shown<sp/>to<sp/>the<sp/>user,<sp/>and<sp/>the<sp/>name<sp/>of<sp/>the<sp/>node<sp/>that<sp/>we<sp/>should<sp/>link<sp/>to<sp/>when<sp/>the<sp/>user<sp/>selects<sp/>the<sp/>option.<sp/>The<sp/>label<sp/>and<sp/>the<sp/>node<sp/>name<sp/>are<sp/>separated<sp/>by<sp/>a<sp/>vertical<sp/>bar<sp/>(`|`).</highlight></codeline>
<codeline lineno="24"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="25"><highlight class="stringliteral">You<sp/>don&apos;</highlight><highlight class="normal">t<sp/>have<sp/>to<sp/>provide<sp/>the<sp/>label.<sp/>Instead,<sp/>you<sp/>can<sp/>just<sp/>provide<sp/>the<sp/>node<sp/>name,<sp/>like<sp/>so:</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>[[GoToCity]]</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="29"><highlight class="normal">If<sp/>an<sp/>option<sp/>has<sp/>no<sp/>label,<sp/>Yarn<sp/>will<sp/>automatically<sp/>jump<sp/>to<sp/>that<sp/>node<sp/>when<sp/>that<sp/>line<sp/>is<sp/>run,<sp/>and<sp/>it<sp/>won</highlight><highlight class="stringliteral">&apos;t<sp/>show<sp/>options<sp/>to<sp/>the<sp/>player.</highlight></codeline>
<codeline lineno="30"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="31"><highlight class="stringliteral">When<sp/>all<sp/>of<sp/>the<sp/>lines<sp/>in<sp/>a<sp/>node<sp/>have<sp/>been<sp/>displayed,<sp/>the<sp/>dialogue<sp/>system<sp/>gives<sp/>your<sp/>game<sp/>the<sp/>list<sp/>of<sp/>available<sp/>options.<sp/>You<sp/>then<sp/>let<sp/>the<sp/>user<sp/>choose<sp/>an<sp/>option,<sp/>and<sp/>then<sp/>continue<sp/>loading<sp/>lines<sp/>of<sp/>dialogue,<sp/>one<sp/>at<sp/>a<sp/>time.</highlight></codeline>
<codeline lineno="32"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="33"><highlight class="stringliteral">If<sp/>there<sp/>are<sp/>no<sp/>options<sp/>when<sp/>we<sp/>reach<sp/>the<sp/>end<sp/>of<sp/>a<sp/>node,<sp/>then<sp/>we&apos;</highlight><highlight class="normal">ve<sp/>reached<sp/>the<sp/>end<sp/>of<sp/>a<sp/>conversation,<sp/>and<sp/>Yarn<sp/>Spinner<sp/>will<sp/>let<sp/>your<sp/>game<sp/>know.</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal">##<sp/>Shortcut<sp/>Options</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal">Sometimes,<sp/>you</highlight><highlight class="stringliteral">&apos;ll<sp/>want<sp/>to<sp/>add<sp/>little<sp/>branches<sp/>to<sp/>your<sp/>conversation,<sp/>but<sp/>you<sp/>don&apos;</highlight><highlight class="normal">t<sp/>want<sp/>to<sp/>create<sp/>separate<sp/>nodes<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>them.<sp/>Instead,<sp/>you<sp/>can<sp/>use<sp/>*shortcut<sp/>options*:</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>Mae:<sp/>What<sp/>did<sp/>you<sp/>say<sp/>to<sp/>her?</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>-&gt;<sp/>Nothing.</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mae:<sp/>Oh,<sp/>man.<sp/>Maybe<sp/>you<sp/>should<sp/>have.</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>-&gt;<sp/>That<sp/>she<sp/>was<sp/>an<sp/>idiot.</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mae:<sp/>Hah!<sp/>I<sp/>bet<sp/>that<sp/>pissed<sp/>her<sp/>off.</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>Mae:<sp/>Anyway,<sp/>I</highlight><highlight class="stringliteral">&apos;d<sp/>better<sp/>get<sp/>going.</highlight></codeline>
<codeline lineno="46"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="47"><highlight class="stringliteral">When<sp/>this<sp/>is<sp/>run,<sp/>Yarn<sp/>Spinner<sp/>will<sp/>behave<sp/>just<sp/>as<sp/>if<sp/>you&apos;</highlight><highlight class="normal">d<sp/>broken<sp/>all<sp/>of<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>up<sp/>into<sp/>multiple<sp/>nodes.</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal">You<sp/>can<sp/>also<sp/>attach<sp/>conditions<sp/>to<sp/>shortcut<sp/>options,<sp/>which<sp/>will<sp/>make<sp/>them<sp/>only<sp/>appear<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>a<sp/>certain<sp/>condition<sp/>passes:</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>Bob:<sp/>What<sp/>would<sp/>you<sp/>like?</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>-&gt;<sp/>A<sp/>burger.<sp/>&lt;&lt;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>$money<sp/>&gt;=<sp/>5&gt;&gt;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Bob:<sp/>Nice.<sp/>Enjoy!</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>-&gt;<sp/>A<sp/>soda.<sp/>&lt;&lt;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>$money<sp/>&gt;=<sp/>2&gt;&gt;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Bob:<sp/>Yum!</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>-&gt;<sp/>Nothing.</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>Bob:<sp/>Thanks<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>coming!</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="59"><highlight class="normal">Note<sp/>that<sp/>in<sp/>the<sp/>last<sp/>example,<sp/>there<sp/>wasn</highlight><highlight class="stringliteral">&apos;t<sp/>any<sp/>attached<sp/>text.<sp/>If<sp/>the<sp/>player<sp/>selected<sp/>the<sp/>last<sp/>option<sp/>(&quot;Nothing.&quot;),<sp/>then<sp/>the<sp/>next<sp/>line<sp/>to<sp/>appear<sp/>would<sp/>be<sp/>&quot;Bob:<sp/>Thanks<sp/>for<sp/>coming!&quot;</highlight></codeline>
<codeline lineno="60"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="61"><highlight class="stringliteral">You<sp/>can<sp/>also<sp/>nest<sp/>these<sp/>shortcut<sp/>options,<sp/>if<sp/>you<sp/>like.<sp/>Be<sp/>careful,<sp/>though<sp/>-<sp/>too<sp/>much<sp/>nested<sp/>options<sp/>can<sp/>make<sp/>your<sp/>text<sp/>difficult<sp/>to<sp/>read.</highlight></codeline>
<codeline lineno="62"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="63"><highlight class="stringliteral">##<sp/>Commands</highlight></codeline>
<codeline lineno="64"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="65"><highlight class="stringliteral">In<sp/>addition<sp/>to<sp/>showing<sp/>lines<sp/>of<sp/>dialogue,<sp/>your<sp/>game<sp/>will<sp/>probably<sp/>want<sp/>to<sp/>run<sp/>actions<sp/>-<sp/>things<sp/>like<sp/>&quot;move<sp/>the<sp/>camera<sp/>to<sp/>position<sp/>X&quot;,<sp/>or<sp/>&quot;make<sp/>character<sp/>start<sp/>smiling&quot;.<sp/>You<sp/>can<sp/>use<sp/>commands<sp/>for<sp/>this.</highlight></codeline>
<codeline lineno="66"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="67"><highlight class="stringliteral">Commands<sp/>look<sp/>like<sp/>this:</highlight></codeline>
<codeline lineno="68"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="69"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&lt;&lt;move<sp/>alice<sp/>to<sp/>under_bridge&gt;&gt;</highlight></codeline>
<codeline lineno="70"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="71"><highlight class="stringliteral">Any<sp/>text<sp/>inside<sp/>the<sp/>double-chevrons<sp/>will<sp/>be<sp/>sent<sp/>directly<sp/>to<sp/>your<sp/>game<sp/>as<sp/>a<sp/>string.<sp/>It&apos;</highlight><highlight class="normal">s<sp/>up<sp/>to<sp/>you<sp/>to<sp/>decide<sp/>what<sp/>to<sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>with<sp/>that<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">.</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal">Yarn<sp/>has<sp/>a<sp/>special<sp/>command,<sp/>called<sp/>`stop`.<sp/>If<sp/>you<sp/>include<sp/>`&lt;&lt;stop&gt;&gt;`<sp/>in<sp/>your<sp/>node,<sp/>Yarn<sp/>will<sp/>stop<sp/>the<sp/>entire<sp/>conversation<sp/>when<sp/>it<sp/>reaches<sp/>it.</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="75"><highlight class="normal">##<sp/>Variables<sp/>and<sp/>If<sp/>statements</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal">You<sp/>can<sp/>store<sp/>numbers<sp/>in<sp/>variables.<sp/>To<sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>use<sp/>the<sp/>`set`<sp/>command:</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;set<sp/>$door_unlocked<sp/>to<sp/>1&gt;&gt;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="81"><highlight class="normal">You<sp/>can<sp/>check<sp/>the<sp/>value<sp/>of<sp/>a<sp/>variable<sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>the<sp/>`</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">`<sp/>command:</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>$door_unlocked<sp/>is<sp/>1&gt;&gt;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>door<sp/>is<sp/>unlocked!<sp/>(This<sp/>will<sp/>only<sp/>appear<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>$door_unlocked<sp/>is<sp/>equal<sp/>to<sp/>1.)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;endif&gt;&gt;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">##<sp/>Expressions</highlight></codeline>
<codeline lineno="88"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal">You<sp/>can<sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>math<sp/>in<sp/>an<sp/>`</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">`<sp/>command.<sp/>For<sp/>example:</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>$number_of_stars_collected<sp/>&gt;<sp/>5&gt;&gt;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>You<sp/>have<sp/>more<sp/>than<sp/>5<sp/>stars!</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;endif&gt;&gt;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal">You<sp/>can<sp/>also<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal"><sp/>fancier,<sp/>and<sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>stuff<sp/>like<sp/></highlight><highlight class="keyword">this</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>$hostages_saved<sp/>==<sp/>$number_of_hostages<sp/>and<sp/>$time_remaining<sp/>&gt;<sp/>0&gt;&gt;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>You<sp/>win<sp/>the<sp/>game!</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;elseif<sp/>$hostages_saved<sp/>&lt;<sp/>$number_of_hostages<sp/>and<sp/>$time_remaining<sp/>&gt;<sp/>0&gt;&gt;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>You<sp/>need<sp/>to<sp/>rescue<sp/>more<sp/>hostages!</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;elseif<sp/>$bomb_has_exploded<sp/>==<sp/>0&gt;&gt;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>You<sp/>failed<sp/>to<sp/>rescue<sp/>the<sp/>hostages<sp/>before<sp/>time<sp/>ran<sp/>out!</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;endif&gt;&gt;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="preprocessor">##<sp/>Types</highlight></codeline>
<codeline lineno="106"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal">There<sp/>are<sp/>four<sp/>different<sp/>types<sp/>of<sp/>value<sp/>in<sp/>Yarn:<sp/>strings,<sp/>numbers,<sp/>booleans,<sp/>and<sp/>`null`.</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal">*<sp/>Strings<sp/>contain<sp/>text.</highlight></codeline>
<codeline lineno="110"><highlight class="normal">*<sp/>Numbers<sp/>are<sp/>floating-point<sp/>numbers.</highlight></codeline>
<codeline lineno="111"><highlight class="normal">*<sp/>Booleans<sp/>are<sp/>either<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>or<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">.</highlight></codeline>
<codeline lineno="112"><highlight class="normal">*<sp/>`null`<sp/>means<sp/>no<sp/>value.</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal">Yarn<sp/>will<sp/>automatically<sp/>convert<sp/>between<sp/>types<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>you.<sp/>For<sp/>example:</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;hi&quot;</highlight><highlight class="normal"><sp/>==<sp/></highlight><highlight class="stringliteral">&quot;hi&quot;</highlight><highlight class="normal">&gt;&gt;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>two<sp/>strings<sp/>are<sp/>the<sp/>same!</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;endif&gt;&gt;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>1+1+</highlight><highlight class="stringliteral">&quot;hi&quot;</highlight><highlight class="normal"><sp/>==<sp/></highlight><highlight class="stringliteral">&quot;2hi&quot;</highlight><highlight class="normal">&gt;&gt;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Strings<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal"><sp/>joined<sp/>together<sp/>with<sp/>other<sp/>values!</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;endif&gt;&gt;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal">**Warning:**<sp/>Currently,<sp/>variables<sp/>can<sp/>only<sp/>store<sp/>numbers.<sp/><ref refid="d6/d5b/a00026_1a301aa7c866593a5b625a8fc158bbeacea786887572f6ef1c20f2d8177cb2f1639" kindref="member">If</ref><sp/>you<sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>to<sp/>store<sp/>anything<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>in<sp/>a<sp/>variable,<sp/>it<sp/>will<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal"><sp/>converted<sp/>to<sp/>a<sp/>number<sp/>first.</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal">##<sp/>Functions</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal">You<sp/>can<sp/>call<sp/>functions<sp/>in<sp/>your<sp/>`</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">`<sp/>commands.<sp/>For<sp/>example,<sp/>Yarn<sp/>Spinner<sp/>provides<sp/>a<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>called<sp/>`visited`,<sp/>which<sp/>you<sp/>can<sp/>use<sp/>to<sp/>find<sp/>out<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>a<sp/>node<sp/>has<sp/>been<sp/>entered<sp/>before<sp/>or<sp/>not.<sp/>It<sp/>takes<sp/>a<sp/>single<sp/>parameter<sp/>(which<sp/>is<sp/>a<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">),<sp/>and<sp/>returns<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"><sp/>or<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal"><sp/>depending<sp/>on<sp/>whether<sp/>or<sp/>not<sp/>the<sp/>node<sp/>you<sp/>specified<sp/>has<sp/>been<sp/>entered.</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>visited(</highlight><highlight class="stringliteral">&quot;GoToCity&quot;</highlight><highlight class="normal">)&gt;&gt;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>We<sp/>have<sp/>gone<sp/>to<sp/>the<sp/>city<sp/>before!</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>&lt;&lt;endif&gt;&gt;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="134"><highlight class="normal">You<sp/>can</highlight><highlight class="stringliteral">&apos;t<sp/>define<sp/>your<sp/>own<sp/>functions<sp/>inside<sp/>Yarn<sp/>itself,<sp/>but<sp/>they<sp/>can<sp/>be<sp/>added<sp/>at<sp/>run-time.<sp/>See<sp/>[&quot;Extending<sp/>Yarn<sp/>Spinner&quot;](Extending.md)<sp/>for<sp/>more<sp/>info.</highlight></codeline>
    </programlisting>
    <location file="/home/travis/build/thesecretlab/YarnSpinner/Documentation/Usage.md"/>
  </compounddef>
</doxygen>
