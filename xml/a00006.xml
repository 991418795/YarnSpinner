<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="a00006" kind="page">
    <compoundname>md_Documentation_Building</compoundname>
    <title>Building Yarn Spinner</title>
    <detaileddescription>
<para><blockquote><para>***Important:*** This document only matters to you if you want to build <ref refid="a00026" kindref="compound">Yarn</ref> Spinner from source. In almost all cases, you&apos;ll be totally fine with <ulink url="https://github.com/thesecretlab/YarnSpinner/releases">downloading a build</ulink>, and using that in your project.</para><para></para></blockquote></para><para><heading level="2">Windows, Mac and Linux using MonoDevelop</heading>
</para><para>To build <ref refid="a00026" kindref="compound">Yarn</ref> Spinner on Windows or Mac, you&apos;ll need MonoDevelop. You can <ulink url="http://www.monodevelop.com/download/">download MonoDevelop for your OS from the MonoDevelop site</ulink>. To build <ref refid="a00026" kindref="compound">Yarn</ref> Spinner on Linux, you&apos;ll need MonoDevelop&apos;s Flatpak. Once you have installed <ulink url="http://flatpak.org/getting.html">Flatpak for your distribution</ulink>, you can <ulink url="http://www.monodevelop.com/download/linux/">download MonoDevelop from the MonoDevelop site</ulink>.</para><para>Once it&apos;s downloaded, follow these steps:</para><para><itemizedlist>
<listitem><para>Open <bold>YarnSpinner.sln</bold>.</para></listitem><listitem><para>Open the <bold>Build menu</bold>, and choose <bold>Build All</bold>.</para></listitem><listitem><para>Open the <bold>Unity/Assets/Yarn Spinner</bold> folder. You&apos;ll find a copy of <bold>YarnSpinner.dll</bold> there. You can now copy that DLL file wherever you need it.</para></listitem></itemizedlist>
</para><para><heading level="2">Linux</heading>
</para><para>As well as using MonoDevelop, you can use xbuild to build on Linux. At this stage, see the <ulink url="../build.sh">build.sh</ulink> script for information on how to do this.</para><para><heading level="2">Building Documentation</heading>
</para><para><ref refid="a00026" kindref="compound">Yarn</ref> Spinner uses <ulink url="https://www.stack.nl/~dimitri/doxygen">Doxygen</ulink> to generate <ulink url="http://docbook.org/">DocBook</ulink>, <ulink url="https://en.wikipedia.org/wiki/HTML">HTML</ulink>, <ulink url="https://www.latex-project.org/help/documentation/">LaTeX</ulink>, <ulink url="https://en.wikipedia.org/wiki/Rich_Text_Format">RTF</ulink>, and <ulink url="https://en.wikipedia.org/wiki/XML">XML</ulink> documentation. <ulink url="https://www.gnu.org/software/global/">GNU GLOBAL</ulink> is also used.</para><para>Basic steps to clean out existing documentation, generate new documentation and check the new documentation for generation errors. Note that some ocurrences of the word &apos;error&apos; will be due to classes/methods etc. of <ref refid="a00154" kindref="compound">YarnSpinner</ref> itself and not an actual error in the documentation.</para><para><itemizedlist>
<listitem><para>rm -fr Documentation/{docbook,html,latex,rtf,xml}</para></listitem><listitem><para>doxygen Documentation/Doxyfile &gt; doxyoutput.txt 2&gt;&amp;1</para></listitem><listitem><para>grep -i error doxyoutput.txt</para></listitem></itemizedlist>
</para><para><ulink url="https://daringfireball.net/projects/markdown/">MarkDown</ulink> documentation is available via conversion of the XML output to Markdown using third party tools such as <ulink url="http://pandoc.org">Pandoc</ulink> or <ulink url="https://github.com/pferdinand/doxygen2md">doxygen2md</ulink> </para>    </detaileddescription>
  </compounddef>
</doxygen>
