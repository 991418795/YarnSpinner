<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="d1/d22/a00057" kind="class" prot="public">
    <compoundname>CsvHelper::CsvReader</compoundname>
    <basecompoundref refid="d9/dec/a00090" prot="public" virt="non-virtual">CsvHelper.ICsvReader</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d1/d22/a00057_1aa2e7952350ee7c52c74a3c259d372c89" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool CsvHelper.CsvReader.disposed</definition>
        <argsstring></argsstring>
        <name>disposed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" line="28" column="1" bodyfile="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d1/d22/a00057_1a34d0725235d140229f6a07e4c3b83552" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool CsvHelper.CsvReader.hasBeenRead</definition>
        <argsstring></argsstring>
        <name>hasBeenRead</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" line="29" column="1" bodyfile="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d1/d22/a00057_1ab2bfef15784add66e441c9d3a0d73751" prot="private" static="no" mutable="no">
        <type>string[]</type>
        <definition>string [] CsvHelper.CsvReader.currentRecord</definition>
        <argsstring></argsstring>
        <name>currentRecord</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" line="30" column="1" bodyfile="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d1/d22/a00057_1aa6e5fd8aa2961442ca1caf7a4ac54d65" prot="private" static="no" mutable="no">
        <type>string[]</type>
        <definition>string [] CsvHelper.CsvReader.headerRecord</definition>
        <argsstring></argsstring>
        <name>headerRecord</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" line="31" column="1" bodyfile="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d1/d22/a00057_1aaf2ee64c7a157027aea69bfae1fa9edc" prot="private" static="no" mutable="no">
        <type><ref refid="db/dab/a00089" kindref="compound">ICsvParser</ref></type>
        <definition>ICsvParser CsvHelper.CsvReader.parser</definition>
        <argsstring></argsstring>
        <name>parser</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" line="32" column="1" bodyfile="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d1/d22/a00057_1a56e974bc7e2242912e956393e831e166" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int CsvHelper.CsvReader.currentIndex</definition>
        <argsstring></argsstring>
        <name>currentIndex</name>
        <initializer>= -1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" line="33" column="1" bodyfile="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d1/d22/a00057_1a04a4a668ae50f5383cdd2a1691bbd718" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool CsvHelper.CsvReader.doneReading</definition>
        <argsstring></argsstring>
        <name>doneReading</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" line="34" column="1" bodyfile="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d1/d22/a00057_1a3114f49bd2b3c4966f4b15a310747aeb" prot="private" static="no" mutable="no">
        <type>readonly Dictionary&lt; string, List&lt; int &gt; &gt;</type>
        <definition>readonly Dictionary&lt;string, List&lt;int&gt; &gt; CsvHelper.CsvReader.namedIndexes</definition>
        <argsstring></argsstring>
        <name>namedIndexes</name>
        <initializer>= new Dictionary&lt;string, List&lt;int&gt;&gt;()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" line="35" column="1" bodyfile="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d1/d22/a00057_1af8fa2e4c94750a1d6df3112d5f1d701c" prot="private" static="no" mutable="no">
        <type>readonly Dictionary&lt; Type, Delegate &gt;</type>
        <definition>readonly Dictionary&lt;Type, Delegate&gt; CsvHelper.CsvReader.recordFuncs</definition>
        <argsstring></argsstring>
        <name>recordFuncs</name>
        <initializer>= new Dictionary&lt;Type, Delegate&gt;()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" line="37" column="1" bodyfile="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d1/d22/a00057_1a695622911e45cbac8d67dcbd9a3e2967" prot="private" static="no" mutable="no">
        <type>readonly <ref refid="d6/d42/a00043" kindref="compound">CsvConfiguration</ref></type>
        <definition>readonly CsvConfiguration CsvHelper.CsvReader.configuration</definition>
        <argsstring></argsstring>
        <name>configuration</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" line="39" column="1" bodyfile="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d1/d22/a00057_1abea2bd0359f517019984de31f9d9fb96" prot="private" static="no" mutable="no">
        <type>const string</type>
        <definition>const string CsvHelper.CsvReader.DoneReadingExceptionMessage</definition>
        <argsstring></argsstring>
        <name>DoneReadingExceptionMessage</name>
        <initializer>=
			&quot;The reader has already exhausted all records. &quot; +
			&quot;If you would like to iterate the records more than &quot; +
			&quot;once, store the records in memory. i.e. Use &quot; +
			&quot;<ref refid="d1/d22/a00057_1aaa94b8f27e410194fbaadd75f38b030e" kindref="member">CsvReader.GetRecords</ref>&lt;T&gt;().ToList()&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" line="41" column="1" bodyfile="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" bodystart="41" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="property">
      <memberdef kind="property" id="d1/d22/a00057_1a797f57aadbd5220ccb0cc65e4eef4034" prot="public" static="no" readable="no" writable="no" gettable="yes" settable="no">
        <type><ref refid="d6/d42/a00043" kindref="compound">CsvConfiguration</ref></type>
        <definition>virtual CsvConfiguration CsvHelper.CsvReader.Configuration</definition>
        <argsstring></argsstring>
        <name>Configuration</name>
        <briefdescription>
<para>Gets the configuration. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" line="51" column="1" bodyfile="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="d1/d22/a00057_1a67874ae540cf6cf32522a38167a3f3b6" prot="public" static="no" readable="no" writable="no" gettable="yes" settable="no">
        <type><ref refid="db/dab/a00089" kindref="compound">ICsvParser</ref></type>
        <definition>virtual ICsvParser CsvHelper.CsvReader.Parser</definition>
        <argsstring></argsstring>
        <name>Parser</name>
        <briefdescription>
<para>Gets the parser. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" line="59" column="1" bodyfile="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="d1/d22/a00057_1a7e3244a36e320faec69d44248cc248bf" prot="public" static="no" readable="no" writable="no" gettable="yes" settable="no">
        <type>string[]</type>
        <definition>virtual string [] CsvHelper.CsvReader.FieldHeaders</definition>
        <argsstring></argsstring>
        <name>FieldHeaders</name>
        <briefdescription>
<para>Gets the field headers. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" line="67" column="1" bodyfile="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="d1/d22/a00057_1aae4cb2c8d93c9fe0c57bd146c926ecb6" prot="public" static="no" readable="no" writable="no" gettable="yes" settable="no">
        <type>string[]</type>
        <definition>virtual string [] CsvHelper.CsvReader.CurrentRecord</definition>
        <argsstring></argsstring>
        <name>CurrentRecord</name>
        <briefdescription>
<para>Get the current record; </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" line="85" column="1" bodyfile="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="d1/d22/a00057_1a780a686daf1d594f478f5aaf347dc4ad" prot="public" static="no" readable="no" writable="no" gettable="yes" settable="no">
        <type>int</type>
        <definition>int CsvHelper.CsvReader.Row</definition>
        <argsstring></argsstring>
        <name>Row</name>
        <briefdescription>
<para>Gets the current row. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" line="99" column="1" bodyfile="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="d1/d22/a00057_1a2ba794407171014c1c4a604cdb272a0b" prot="public" static="no" readable="no" writable="no" gettable="yes" settable="no">
        <type>string</type>
        <definition>virtual string CsvHelper.CsvReader.this[int index]</definition>
        <argsstring></argsstring>
        <name>this[int index]</name>
        <briefdescription>
<para>Gets the raw field at position (column) index. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The zero based index of the field.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The raw field.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" line="237" column="1" bodyfile="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" bodystart="238" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="d1/d22/a00057_1a24af16e0522cb8b96775334783ea6939" prot="public" static="no" readable="no" writable="no" gettable="yes" settable="no">
        <type>string</type>
        <definition>virtual string CsvHelper.CsvReader.this[string name]</definition>
        <argsstring></argsstring>
        <name>this[string name]</name>
        <briefdescription>
<para>Gets the raw field at position (column) name. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The named index of the field.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The raw field.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" line="253" column="1" bodyfile="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" bodystart="254" bodyend="-1"/>
      </memberdef>
      <memberdef kind="property" id="d1/d22/a00057_1a1e72b5694536f70fd2df975c3fd5b827" prot="public" static="no" readable="no" writable="no" gettable="yes" settable="no">
        <type>string</type>
        <definition>virtual string CsvHelper.CsvReader.this[string name, int index]</definition>
        <argsstring></argsstring>
        <name>this[string name, int index]</name>
        <briefdescription>
<para>Gets the raw field at position (column) name. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The named index of the field.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The zero based index of the field.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The raw field.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" line="270" column="1" bodyfile="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" bodystart="271" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d1/d22/a00057_1a451bc92ee354c42cb09a10be46ed89df" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CsvHelper.CsvReader.CsvReader</definition>
        <argsstring>(TextReader reader)</argsstring>
        <name>CsvReader</name>
        <param>
          <type>TextReader</type>
          <declname>reader</declname>
        </param>
        <briefdescription>
<para>Creates a new CSV reader using the given TextReader and <ref refid="d4/dca/a00048" kindref="compound">CsvParser</ref> as the default parser. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>reader</parametername>
</parameternamelist>
<parameterdescription>
<para>The reader.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" line="115" column="1" bodyfile="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" bodystart="115" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="d1/d22/a00057_1a69ae54f0a1f3b84bc1dc2287cc0923ac" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CsvHelper.CsvReader.CsvReader</definition>
        <argsstring>(TextReader reader, CsvConfiguration configuration)</argsstring>
        <name>CsvReader</name>
        <param>
          <type>TextReader</type>
          <declname>reader</declname>
        </param>
        <param>
          <type><ref refid="d6/d42/a00043" kindref="compound">CsvConfiguration</ref></type>
          <declname>configuration</declname>
        </param>
        <briefdescription>
<para>Creates a new CSV reader using the given TextReader and CsvConfiguration and <ref refid="d4/dca/a00048" kindref="compound">CsvParser</ref> as the default parser. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>reader</parametername>
</parameternamelist>
<parameterdescription>
<para>The reader.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>configuration</parametername>
</parameternamelist>
<parameterdescription>
<para>The configuration.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" line="123" column="1" bodyfile="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" bodystart="123" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="d1/d22/a00057_1a2a7e1bcb33d8013182286439e6f7416f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>CsvHelper.CsvReader.CsvReader</definition>
        <argsstring>(ICsvParser parser)</argsstring>
        <name>CsvReader</name>
        <param>
          <type><ref refid="db/dab/a00089" kindref="compound">ICsvParser</ref></type>
          <declname>parser</declname>
        </param>
        <briefdescription>
<para>Creates a new CSV reader using the given <ref refid="db/dab/a00089" kindref="compound">ICsvParser</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parser</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="db/dab/a00089" kindref="compound">ICsvParser</ref> used to parse the CSV file.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" line="143" column="1" bodyfile="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" bodystart="143" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="d1/d22/a00057_1a57ba5fa523de97bd2cf068973329090d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool CsvHelper.CsvReader.ReadHeader</definition>
        <argsstring>()</argsstring>
        <name>ReadHeader</name>
        <reimplements refid="d9/dec/a00090_1ac90848a26c5ce46d1acb7719e669897b">ReadHeader</reimplements>
        <briefdescription>
<para>Reads the header field without reading the first row. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if there are more records, otherwise false.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" line="163" column="1" bodyfile="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" bodystart="163" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="d1/d22/a00057_1af1f0d4d722e93df9da30fe60b89ff2d6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool CsvHelper.CsvReader.Read</definition>
        <argsstring>()</argsstring>
        <name>Read</name>
        <reimplements refid="d9/dec/a00090_1a260a692346cfbfaaa23a1075def81898">Read</reimplements>
        <briefdescription>
<para>Advances the reader to the next record. If HasHeaderRecord is true (true by default), the first record of the CSV file will be automatically read in as the header record and the second record will be returned. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if there are more records, otherwise false.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" line="201" column="1" bodyfile="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" bodystart="201" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="d1/d22/a00057_1ac1500fd628ea947c3ae05a7ce3fbd01a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>string</type>
        <definition>virtual string CsvHelper.CsvReader.GetField</definition>
        <argsstring>(int index)</argsstring>
        <name>GetField</name>
        <reimplements refid="da/d82/a00091_1a3051b174bf5018e7480e6c4e53fbeeb5">GetField</reimplements>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Gets the raw field at position (column) index. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The zero based index of the field.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The raw field.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" line="286" column="1" bodyfile="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" bodystart="286" bodyend="315"/>
      </memberdef>
      <memberdef kind="function" id="d1/d22/a00057_1a2dea592c2879215b86a4e49280492930" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>string</type>
        <definition>virtual string CsvHelper.CsvReader.GetField</definition>
        <argsstring>(string name)</argsstring>
        <name>GetField</name>
        <reimplements refid="da/d82/a00091_1aef0f82a96420210343b447e7709400ae">GetField</reimplements>
        <param>
          <type>string</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Gets the raw field at position (column) name. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The named index of the field.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The raw field.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" line="322" column="1" bodyfile="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" bodystart="322" bodyend="334"/>
      </memberdef>
      <memberdef kind="function" id="d1/d22/a00057_1aa1d5909bc0bb20045ece92b3448a5297" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>string</type>
        <definition>virtual string CsvHelper.CsvReader.GetField</definition>
        <argsstring>(string name, int index)</argsstring>
        <name>GetField</name>
        <reimplements refid="da/d82/a00091_1a89d1e21e131f988e0959c5edff4f982f">GetField</reimplements>
        <param>
          <type>string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Gets the raw field at position (column) name and the index instance of that field. The index is used when there are multiple columns with the same header name. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The named index of the field.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The zero based index of the instance of the field.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The raw field.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" line="344" column="1" bodyfile="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" bodystart="344" bodyend="356"/>
      </memberdef>
      <memberdef kind="function" id="d1/d22/a00057_1a5fd40b95bcd109c3c688419efaed1dbc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>object</type>
        <definition>virtual object CsvHelper.CsvReader.GetField</definition>
        <argsstring>(int index, ITypeConverter converter)</argsstring>
        <name>GetField</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="da/d74/a00099" kindref="compound">ITypeConverter</ref></type>
          <declname>converter</declname>
        </param>
        <briefdescription>
<para>Gets the field converted to Object using the specified ITypeConverter. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the field.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>converter</parametername>
</parameternamelist>
<parameterdescription>
<para>The ITypeConverter used to convert the field to Object.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The field converted to Object.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" line="366" column="1" bodyfile="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" bodystart="366" bodyend="378"/>
      </memberdef>
      <memberdef kind="function" id="d1/d22/a00057_1afe8aeec6713f35c1b8be00c063dc2448" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>object</type>
        <definition>virtual object CsvHelper.CsvReader.GetField</definition>
        <argsstring>(string name, ITypeConverter converter)</argsstring>
        <name>GetField</name>
        <param>
          <type>string</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="da/d74/a00099" kindref="compound">ITypeConverter</ref></type>
          <declname>converter</declname>
        </param>
        <briefdescription>
<para>Gets the field converted to Object using the specified ITypeConverter. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The named index of the field.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>converter</parametername>
</parameternamelist>
<parameterdescription>
<para>The ITypeConverter used to convert the field to Object.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The field converted to Object.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" line="388" column="1" bodyfile="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" bodystart="388" bodyend="395"/>
      </memberdef>
      <memberdef kind="function" id="d1/d22/a00057_1a1b5348e89c9befcc71159fca907f6b4f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>object</type>
        <definition>virtual object CsvHelper.CsvReader.GetField</definition>
        <argsstring>(string name, int index, ITypeConverter converter)</argsstring>
        <name>GetField</name>
        <param>
          <type>string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="da/d74/a00099" kindref="compound">ITypeConverter</ref></type>
          <declname>converter</declname>
        </param>
        <briefdescription>
<para>Gets the field converted to Object using the specified ITypeConverter. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The named index of the field.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The zero based index of the instance of the field.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>converter</parametername>
</parameternamelist>
<parameterdescription>
<para>The ITypeConverter used to convert the field to Object.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The field converted to Object.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" line="406" column="1" bodyfile="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" bodystart="406" bodyend="413"/>
      </memberdef>
      <memberdef kind="function" id="d1/d22/a00057_1a35724e33388ac5772ccfa0526ca812fc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>object</type>
        <definition>virtual object CsvHelper.CsvReader.GetField</definition>
        <argsstring>(Type type, int index)</argsstring>
        <name>GetField</name>
        <reimplements refid="da/d82/a00091_1a139fd51e035dc42bfc820371209b9782">GetField</reimplements>
        <param>
          <type>Type</type>
          <declname>type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Gets the field converted to Object using the specified ITypeConverter. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the field.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the field.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The field converted to Object.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" line="422" column="1" bodyfile="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" bodystart="422" bodyend="429"/>
      </memberdef>
      <memberdef kind="function" id="d1/d22/a00057_1a5e255cb4bfa8d7a9dc364660cb079415" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>object</type>
        <definition>virtual object CsvHelper.CsvReader.GetField</definition>
        <argsstring>(Type type, string name)</argsstring>
        <name>GetField</name>
        <reimplements refid="da/d82/a00091_1a3a5e6f3a5713f3fd9a5e3a45c3a7ab1c">GetField</reimplements>
        <param>
          <type>Type</type>
          <declname>type</declname>
        </param>
        <param>
          <type>string</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Gets the field converted to Object using the specified ITypeConverter. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the field.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The named index of the field.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The field converted to Object.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" line="438" column="1" bodyfile="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" bodystart="438" bodyend="445"/>
      </memberdef>
      <memberdef kind="function" id="d1/d22/a00057_1a3fb351f9f77bb39bddc05c76691e830f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>object</type>
        <definition>virtual object CsvHelper.CsvReader.GetField</definition>
        <argsstring>(Type type, string name, int index)</argsstring>
        <name>GetField</name>
        <reimplements refid="da/d82/a00091_1ae0128a2e48bd24db451e64b17b4631ae">GetField</reimplements>
        <param>
          <type>Type</type>
          <declname>type</declname>
        </param>
        <param>
          <type>string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Gets the field converted to Object using the specified ITypeConverter. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the field.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The named index of the field.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The zero based index of the instance of the field.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The field converted to Object.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" line="455" column="1" bodyfile="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" bodystart="455" bodyend="462"/>
      </memberdef>
      <memberdef kind="function" id="d1/d22/a00057_1ae574612025171f2169e3e3683067d326" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>object</type>
        <definition>virtual object CsvHelper.CsvReader.GetField</definition>
        <argsstring>(Type type, int index, ITypeConverter converter)</argsstring>
        <name>GetField</name>
        <reimplements refid="da/d82/a00091_1acc16f1e7d5c552c8adb86087c8774b43">GetField</reimplements>
        <param>
          <type>Type</type>
          <declname>type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="da/d74/a00099" kindref="compound">ITypeConverter</ref></type>
          <declname>converter</declname>
        </param>
        <briefdescription>
<para>Gets the field converted to Object using the specified ITypeConverter. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the field.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the field.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>converter</parametername>
</parameternamelist>
<parameterdescription>
<para>The ITypeConverter used to convert the field to Object.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The field converted to Object.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" line="472" column="1" bodyfile="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" bodystart="472" bodyend="485"/>
      </memberdef>
      <memberdef kind="function" id="d1/d22/a00057_1a29d9cc37e0a7fd6a08cba9626ebdfe69" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>object</type>
        <definition>virtual object CsvHelper.CsvReader.GetField</definition>
        <argsstring>(Type type, string name, ITypeConverter converter)</argsstring>
        <name>GetField</name>
        <reimplements refid="da/d82/a00091_1ad3fce0bfa735dc92844d51d756396892">GetField</reimplements>
        <param>
          <type>Type</type>
          <declname>type</declname>
        </param>
        <param>
          <type>string</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="da/d74/a00099" kindref="compound">ITypeConverter</ref></type>
          <declname>converter</declname>
        </param>
        <briefdescription>
<para>Gets the field converted to Object using the specified ITypeConverter. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the field.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The named index of the field.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>converter</parametername>
</parameternamelist>
<parameterdescription>
<para>The ITypeConverter used to convert the field to Object.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The field converted to Object.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" line="495" column="1" bodyfile="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" bodystart="495" bodyend="502"/>
      </memberdef>
      <memberdef kind="function" id="d1/d22/a00057_1a08ff19d0e0b2c10b644e14621966f2fa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>object</type>
        <definition>virtual object CsvHelper.CsvReader.GetField</definition>
        <argsstring>(Type type, string name, int index, ITypeConverter converter)</argsstring>
        <name>GetField</name>
        <reimplements refid="da/d82/a00091_1a04389e3edb60cc2ab9760668e7781518">GetField</reimplements>
        <param>
          <type>Type</type>
          <declname>type</declname>
        </param>
        <param>
          <type>string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="da/d74/a00099" kindref="compound">ITypeConverter</ref></type>
          <declname>converter</declname>
        </param>
        <briefdescription>
<para>Gets the field converted to Object using the specified ITypeConverter. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the field.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The named index of the field.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The zero based index of the instance of the field.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>converter</parametername>
</parameternamelist>
<parameterdescription>
<para>The ITypeConverter used to convert the field to Object.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The field converted to Object.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" line="513" column="1" bodyfile="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" bodystart="513" bodyend="520"/>
      </memberdef>
      <memberdef kind="function" id="d1/d22/a00057_1a6a43cfaf39caea93ecd87e506be7b404" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>T</type>
        <definition>virtual T CsvHelper.CsvReader.GetField&lt; T &gt;</definition>
        <argsstring>(int index)</argsstring>
        <name>GetField&lt; T &gt;</name>
        <reimplements refid="da/d82/a00091_1af5282bab4799899c6c986fa4189eea0a">GetField&lt; T &gt;</reimplements>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Gets the field converted to Type T at position (column) index. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The Type of the field.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The zero based index of the field.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The field converted to Type T.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" line="528" column="1" bodyfile="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" bodystart="528" bodyend="535"/>
      </memberdef>
      <memberdef kind="function" id="d1/d22/a00057_1a8ebe0d6e7644eebbbbddef3c9d2922be" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>T</type>
        <definition>virtual T CsvHelper.CsvReader.GetField&lt; T &gt;</definition>
        <argsstring>(string name)</argsstring>
        <name>GetField&lt; T &gt;</name>
        <reimplements refid="da/d82/a00091_1af3b292ed7d991a8e975f67fb8ddde859">GetField&lt; T &gt;</reimplements>
        <param>
          <type>string</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Gets the field converted to Type T at position (column) name. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The Type of the field.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The named index of the field.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The field converted to Type T.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" line="543" column="1" bodyfile="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" bodystart="543" bodyend="550"/>
      </memberdef>
      <memberdef kind="function" id="d1/d22/a00057_1afd2c85d724fdc84220a15e5f576cb673" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>T</type>
        <definition>virtual T CsvHelper.CsvReader.GetField&lt; T &gt;</definition>
        <argsstring>(string name, int index)</argsstring>
        <name>GetField&lt; T &gt;</name>
        <reimplements refid="da/d82/a00091_1aa8c349da18823eb8c30911d891b3e3bc">GetField&lt; T &gt;</reimplements>
        <param>
          <type>string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Gets the field converted to Type T at position (column) name and the index instance of that field. The index is used when there are multiple columns with the same header name. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The named index of the field.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The zero based index of the instance of the field.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" line="561" column="1" bodyfile="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" bodystart="561" bodyend="568"/>
      </memberdef>
      <memberdef kind="function" id="d1/d22/a00057_1a2b593a60de4dc4d776abde5c29232d0d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>T</type>
        <definition>virtual T CsvHelper.CsvReader.GetField&lt; T &gt;</definition>
        <argsstring>(int index, ITypeConverter converter)</argsstring>
        <name>GetField&lt; T &gt;</name>
        <reimplements refid="da/d82/a00091_1a8ae4f95a7b9bbbbf2ef19009da81dd18">GetField&lt; T &gt;</reimplements>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="da/d74/a00099" kindref="compound">ITypeConverter</ref></type>
          <declname>converter</declname>
        </param>
        <briefdescription>
<para>Gets the field converted to Type T at position (column) index using the given ITypeConverter. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The Type of the field.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The zero based index of the field.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>converter</parametername>
</parameternamelist>
<parameterdescription>
<para>The ITypeConverter used to convert the field to Type T.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The field converted to Type T.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" line="578" column="1" bodyfile="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" bodystart="578" bodyend="596"/>
      </memberdef>
      <memberdef kind="function" id="d1/d22/a00057_1aadec530254222a2c6fb0e25774a7498b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>T</type>
        <definition>virtual T CsvHelper.CsvReader.GetField&lt; T &gt;</definition>
        <argsstring>(string name, ITypeConverter converter)</argsstring>
        <name>GetField&lt; T &gt;</name>
        <reimplements refid="da/d82/a00091_1a640689c76826aafd8c79ff71d4f0992d">GetField&lt; T &gt;</reimplements>
        <param>
          <type>string</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="da/d74/a00099" kindref="compound">ITypeConverter</ref></type>
          <declname>converter</declname>
        </param>
        <briefdescription>
<para>Gets the field converted to Type T at position (column) name using the given ITypeConverter. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The Type of the field.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The named index of the field.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>converter</parametername>
</parameternamelist>
<parameterdescription>
<para>The ITypeConverter used to convert the field to Type T.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The field converted to Type T.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" line="606" column="1" bodyfile="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" bodystart="606" bodyend="613"/>
      </memberdef>
      <memberdef kind="function" id="d1/d22/a00057_1a607c6c23ce887b6de60f81c1ea2a8348" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>T</type>
        <definition>virtual T CsvHelper.CsvReader.GetField&lt; T &gt;</definition>
        <argsstring>(string name, int index, ITypeConverter converter)</argsstring>
        <name>GetField&lt; T &gt;</name>
        <reimplements refid="da/d82/a00091_1a8851c2bc99ee403fc003f62ae96b090c">GetField&lt; T &gt;</reimplements>
        <param>
          <type>string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="da/d74/a00099" kindref="compound">ITypeConverter</ref></type>
          <declname>converter</declname>
        </param>
        <briefdescription>
<para>Gets the field converted to Type T at position (column) name and the index instance of that field. The index is used when there are multiple columns with the same header name. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The named index of the field.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The zero based index of the instance of the field.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>converter</parametername>
</parameternamelist>
<parameterdescription>
<para>The ITypeConverter used to convert the field to Type T.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The field converted to Type T.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" line="625" column="1" bodyfile="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" bodystart="625" bodyend="632"/>
      </memberdef>
      <memberdef kind="function" id="d1/d22/a00057_1ac989008aec99a6462d9980a1d8a87072" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>T</type>
        <definition>virtual T CsvHelper.CsvReader.GetField&lt; T, TConverter &gt;</definition>
        <argsstring>(int index)</argsstring>
        <name>GetField&lt; T, TConverter &gt;</name>
        <reimplements refid="da/d82/a00091_1a787094f29179fcf06cec6db42fa59de3">GetField&lt; T, TConverter &gt;</reimplements>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Gets the field converted to Type T at position (column) index using the given ITypeConverter. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The Type of the field.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>TConverter</parametername>
</parameternamelist>
<parameterdescription>
<para>The ITypeConverter used to convert the field to Type T.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The zero based index of the field.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The field converted to Type T.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" line="642" column="1" bodyfile="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" bodystart="642" bodyend="649"/>
      </memberdef>
      <memberdef kind="function" id="d1/d22/a00057_1ac76d4fabc62e9ac896c1b2e6e861ed11" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>T</type>
        <definition>virtual T CsvHelper.CsvReader.GetField&lt; T, TConverter &gt;</definition>
        <argsstring>(string name)</argsstring>
        <name>GetField&lt; T, TConverter &gt;</name>
        <reimplements refid="da/d82/a00091_1ae7ea281792a1e0e8f64991062a3acffb">GetField&lt; T, TConverter &gt;</reimplements>
        <param>
          <type>string</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Gets the field converted to Type T at position (column) name using the given ITypeConverter. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The Type of the field.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>TConverter</parametername>
</parameternamelist>
<parameterdescription>
<para>The ITypeConverter used to convert the field to Type T.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The named index of the field.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The field converted to Type T.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" line="659" column="1" bodyfile="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" bodystart="659" bodyend="666"/>
      </memberdef>
      <memberdef kind="function" id="d1/d22/a00057_1a6b77ca85326f76d006935275b46342f0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>T</type>
        <definition>virtual T CsvHelper.CsvReader.GetField&lt; T, TConverter &gt;</definition>
        <argsstring>(string name, int index)</argsstring>
        <name>GetField&lt; T, TConverter &gt;</name>
        <reimplements refid="da/d82/a00091_1a6a55c1b2fc98eb7ef4bdb73e80f4b093">GetField&lt; T, TConverter &gt;</reimplements>
        <param>
          <type>string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Gets the field converted to Type T at position (column) name and the index instance of that field. The index is used when there are multiple columns with the same header name. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The Type of the field.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>TConverter</parametername>
</parameternamelist>
<parameterdescription>
<para>The ITypeConverter used to convert the field to Type T.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The named index of the field.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The zero based index of the instance of the field.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The field converted to Type T.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" line="678" column="1" bodyfile="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" bodystart="678" bodyend="685"/>
      </memberdef>
      <memberdef kind="function" id="d1/d22/a00057_1ae5531b6fa3247cf038ca6a9c20ca43dd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool CsvHelper.CsvReader.TryGetField&lt; T &gt;</definition>
        <argsstring>(int index, out T field)</argsstring>
        <name>TryGetField&lt; T &gt;</name>
        <reimplements refid="da/d82/a00091_1a476c426866e69a8c1b81f40956e0b538">TryGetField&lt; T &gt;</reimplements>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>out T</type>
          <declname>field</declname>
        </param>
        <briefdescription>
<para>Gets the field converted to Type T at position (column) index. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The Type of the field.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The zero based index of the field.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>field</parametername>
</parameternamelist>
<parameterdescription>
<para>The field converted to type T.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A value indicating if the get was successful.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" line="694" column="1" bodyfile="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" bodystart="694" bodyend="701"/>
      </memberdef>
      <memberdef kind="function" id="d1/d22/a00057_1aab6eff4536568c7c0268616aa2b9a674" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool CsvHelper.CsvReader.TryGetField&lt; T &gt;</definition>
        <argsstring>(string name, out T field)</argsstring>
        <name>TryGetField&lt; T &gt;</name>
        <reimplements refid="da/d82/a00091_1a1ac55ecd014a239d9b0b62345637b745">TryGetField&lt; T &gt;</reimplements>
        <param>
          <type>string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>out T</type>
          <declname>field</declname>
        </param>
        <briefdescription>
<para>Gets the field converted to Type T at position (column) name. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The Type of the field.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The named index of the field.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>field</parametername>
</parameternamelist>
<parameterdescription>
<para>The field converted to Type T.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A value indicating if the get was successful.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" line="710" column="1" bodyfile="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" bodystart="710" bodyend="717"/>
      </memberdef>
      <memberdef kind="function" id="d1/d22/a00057_1a6b32f9207db53d8d09598ee2d743d06b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool CsvHelper.CsvReader.TryGetField&lt; T &gt;</definition>
        <argsstring>(string name, int index, out T field)</argsstring>
        <name>TryGetField&lt; T &gt;</name>
        <reimplements refid="da/d82/a00091_1a4c2667e997378fa984f44d7d5e62492b">TryGetField&lt; T &gt;</reimplements>
        <param>
          <type>string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>out T</type>
          <declname>field</declname>
        </param>
        <briefdescription>
<para>Gets the field converted to Type T at position (column) name and the index instance of that field. The index is used when there are multiple columns with the same header name. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The named index of the field.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The zero based index of the instance of the field.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>field</parametername>
</parameternamelist>
<parameterdescription>
<para>The field converted to Type T.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A value indicating if the get was successful.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" line="729" column="1" bodyfile="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" bodystart="729" bodyend="736"/>
      </memberdef>
      <memberdef kind="function" id="d1/d22/a00057_1aa8622306f74940386663fa4020eb8971" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool CsvHelper.CsvReader.TryGetField&lt; T &gt;</definition>
        <argsstring>(int index, ITypeConverter converter, out T field)</argsstring>
        <name>TryGetField&lt; T &gt;</name>
        <reimplements refid="da/d82/a00091_1aa8aaa34c75b213e3774394b3f912842f">TryGetField&lt; T &gt;</reimplements>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="da/d74/a00099" kindref="compound">ITypeConverter</ref></type>
          <declname>converter</declname>
        </param>
        <param>
          <type>out T</type>
          <declname>field</declname>
        </param>
        <briefdescription>
<para>Gets the field converted to Type T at position (column) index using the specified ITypeConverter. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The Type of the field.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The zero based index of the field.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>converter</parametername>
</parameternamelist>
<parameterdescription>
<para>The ITypeConverter used to convert the field to Type T.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>field</parametername>
</parameternamelist>
<parameterdescription>
<para>The field converted to Type T.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A value indicating if the get was successful.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" line="747" column="1" bodyfile="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" bodystart="747" bodyend="777"/>
      </memberdef>
      <memberdef kind="function" id="d1/d22/a00057_1ade47afe2ea6cdd4439265e9364626c6b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool CsvHelper.CsvReader.TryGetField&lt; T &gt;</definition>
        <argsstring>(string name, ITypeConverter converter, out T field)</argsstring>
        <name>TryGetField&lt; T &gt;</name>
        <reimplements refid="da/d82/a00091_1a33e4e39bf2395a79a90cb02554c84d22">TryGetField&lt; T &gt;</reimplements>
        <param>
          <type>string</type>
          <declname>name</declname>
        </param>
        <param>
          <type><ref refid="da/d74/a00099" kindref="compound">ITypeConverter</ref></type>
          <declname>converter</declname>
        </param>
        <param>
          <type>out T</type>
          <declname>field</declname>
        </param>
        <briefdescription>
<para>Gets the field converted to Type T at position (column) name using the specified ITypeConverter. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The Type of the field.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The named index of the field.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>converter</parametername>
</parameternamelist>
<parameterdescription>
<para>The ITypeConverter used to convert the field to Type T.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>field</parametername>
</parameternamelist>
<parameterdescription>
<para>The field converted to Type T.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A value indicating if the get was successful.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" line="788" column="1" bodyfile="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" bodystart="788" bodyend="801"/>
      </memberdef>
      <memberdef kind="function" id="d1/d22/a00057_1a152975903578da620893d21cba2f8afa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool CsvHelper.CsvReader.TryGetField&lt; T &gt;</definition>
        <argsstring>(string name, int index, ITypeConverter converter, out T field)</argsstring>
        <name>TryGetField&lt; T &gt;</name>
        <reimplements refid="da/d82/a00091_1a2d001b5e65d063db9f102b720da0edf2">TryGetField&lt; T &gt;</reimplements>
        <param>
          <type>string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="da/d74/a00099" kindref="compound">ITypeConverter</ref></type>
          <declname>converter</declname>
        </param>
        <param>
          <type>out T</type>
          <declname>field</declname>
        </param>
        <briefdescription>
<para>Gets the field converted to Type T at position (column) name using the specified ITypeConverter. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The Type of the field.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The named index of the field.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The zero based index of the instance of the field.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>converter</parametername>
</parameternamelist>
<parameterdescription>
<para>The ITypeConverter used to convert the field to Type T.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>field</parametername>
</parameternamelist>
<parameterdescription>
<para>The field converted to Type T.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A value indicating if the get was successful.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" line="813" column="1" bodyfile="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" bodystart="813" bodyend="826"/>
      </memberdef>
      <memberdef kind="function" id="d1/d22/a00057_1a58c361c230abb87ae13f97646748be61" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool CsvHelper.CsvReader.TryGetField&lt; T, TConverter &gt;</definition>
        <argsstring>(int index, out T field)</argsstring>
        <name>TryGetField&lt; T, TConverter &gt;</name>
        <reimplements refid="da/d82/a00091_1a5df5f7bc974ec541c25bf63b29ebf618">TryGetField&lt; T, TConverter &gt;</reimplements>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>out T</type>
          <declname>field</declname>
        </param>
        <briefdescription>
<para>Gets the field converted to Type T at position (column) index using the specified ITypeConverter. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The Type of the field.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>TConverter</parametername>
</parameternamelist>
<parameterdescription>
<para>The ITypeConverter used to convert the field to Type T.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The zero based index of the field.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>field</parametername>
</parameternamelist>
<parameterdescription>
<para>The field converted to Type T.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A value indicating if the get was successful.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" line="837" column="1" bodyfile="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" bodystart="837" bodyend="844"/>
      </memberdef>
      <memberdef kind="function" id="d1/d22/a00057_1a1ad85089ce2a6eae15c48e21d5da6c47" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool CsvHelper.CsvReader.TryGetField&lt; T, TConverter &gt;</definition>
        <argsstring>(string name, out T field)</argsstring>
        <name>TryGetField&lt; T, TConverter &gt;</name>
        <reimplements refid="da/d82/a00091_1a9bd7b721a7b4acbc21050817aca71f21">TryGetField&lt; T, TConverter &gt;</reimplements>
        <param>
          <type>string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>out T</type>
          <declname>field</declname>
        </param>
        <briefdescription>
<para>Gets the field converted to Type T at position (column) name using the specified ITypeConverter. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The Type of the field.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>TConverter</parametername>
</parameternamelist>
<parameterdescription>
<para>The ITypeConverter used to convert the field to Type T.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The named index of the field.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>field</parametername>
</parameternamelist>
<parameterdescription>
<para>The field converted to Type T.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A value indicating if the get was successful.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" line="855" column="1" bodyfile="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" bodystart="855" bodyend="862"/>
      </memberdef>
      <memberdef kind="function" id="d1/d22/a00057_1a6665d63535ab6ca768ffbc76c1347e58" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool CsvHelper.CsvReader.TryGetField&lt; T, TConverter &gt;</definition>
        <argsstring>(string name, int index, out T field)</argsstring>
        <name>TryGetField&lt; T, TConverter &gt;</name>
        <reimplements refid="da/d82/a00091_1a8ecc5b03e5e818163aca86b979b01158">TryGetField&lt; T, TConverter &gt;</reimplements>
        <param>
          <type>string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>out T</type>
          <declname>field</declname>
        </param>
        <briefdescription>
<para>Gets the field converted to Type T at position (column) name using the specified ITypeConverter. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The Type of the field.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>TConverter</parametername>
</parameternamelist>
<parameterdescription>
<para>The ITypeConverter used to convert the field to Type T.</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The named index of the field.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The zero based index of the instance of the field.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>field</parametername>
</parameternamelist>
<parameterdescription>
<para>The field converted to Type T.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A value indicating if the get was successful.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" line="874" column="1" bodyfile="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" bodystart="874" bodyend="881"/>
      </memberdef>
      <memberdef kind="function" id="d1/d22/a00057_1a9f3f7336e8ceebafbfe0959508a2a9f0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool CsvHelper.CsvReader.IsRecordEmpty</definition>
        <argsstring>()</argsstring>
        <name>IsRecordEmpty</name>
        <reimplements refid="da/d82/a00091_1a49ad028b358d5a0642d8108b3bb87ff7">IsRecordEmpty</reimplements>
        <briefdescription>
<para>Determines whether the current record is empty. A record is considered empty if all fields are empty. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><computeroutput>true</computeroutput> if [is record empty]; otherwise, <computeroutput>false</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" line="890" column="1" bodyfile="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" bodystart="890" bodyend="896"/>
      </memberdef>
      <memberdef kind="function" id="d1/d22/a00057_1ac607c1182168a5f9c7fa1642670ad320" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>T</type>
        <definition>virtual T CsvHelper.CsvReader.GetRecord&lt; T &gt;</definition>
        <argsstring>()</argsstring>
        <name>GetRecord&lt; T &gt;</name>
        <reimplements refid="da/d82/a00091_1ae82d451b6e26742a685d652c84c0b807">GetRecord&lt; T &gt;</reimplements>
        <briefdescription>
<para>Gets the record converted into Type T. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The Type of the record.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The record converted to Type T.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" line="904" column="1" bodyfile="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" bodystart="904" bodyend="920"/>
      </memberdef>
      <memberdef kind="function" id="d1/d22/a00057_1a10680de48d9c21ef1792661947f9f601" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>object</type>
        <definition>virtual object CsvHelper.CsvReader.GetRecord</definition>
        <argsstring>(Type type)</argsstring>
        <name>GetRecord</name>
        <reimplements refid="da/d82/a00091_1a911748932ed897a2e7086c0c49bdceea">GetRecord</reimplements>
        <param>
          <type>Type</type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Gets the record. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The Type of the record.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The record.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" line="927" column="1" bodyfile="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" bodystart="927" bodyend="944"/>
      </memberdef>
      <memberdef kind="function" id="d1/d22/a00057_1afed61bbcd2a120487498acd36e6ae2f2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>IEnumerable&lt; T &gt;</type>
        <definition>virtual IEnumerable&lt;T&gt; CsvHelper.CsvReader.GetRecords&lt; T &gt;</definition>
        <argsstring>()</argsstring>
        <name>GetRecords&lt; T &gt;</name>
        <reimplements refid="da/d82/a00091_1a880d3ee25c0b55bd9a193c61cd116e21">GetRecords&lt; T &gt;</reimplements>
        <briefdescription>
<para>Gets all the records in the CSV file and converts each to Type T. The Read method should not be used when using this. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The Type of the record.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An IList{T} of records.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" line="953" column="1" bodyfile="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" bodystart="953" bodyend="987"/>
      </memberdef>
      <memberdef kind="function" id="d1/d22/a00057_1aaa94b8f27e410194fbaadd75f38b030e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>IEnumerable&lt; object &gt;</type>
        <definition>virtual IEnumerable&lt;object&gt; CsvHelper.CsvReader.GetRecords</definition>
        <argsstring>(Type type)</argsstring>
        <name>GetRecords</name>
        <reimplements refid="da/d82/a00091_1a8f1187e434201dc22036f2f48cc4d050">GetRecords</reimplements>
        <param>
          <type>Type</type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Gets all the records in the CSV file and converts each to Type T. The Read method should not be used when using this. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The Type of the record.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An IList{Object} of records.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" line="996" column="1" bodyfile="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" bodystart="996" bodyend="1030"/>
      </memberdef>
      <memberdef kind="function" id="d1/d22/a00057_1abc2052d47de1fc745579881daeae8806" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void CsvHelper.CsvReader.ClearRecordCache&lt; T &gt;</definition>
        <argsstring>()</argsstring>
        <name>ClearRecordCache&lt; T &gt;</name>
        <reimplements refid="da/d82/a00091_1ae903a343efdafa8b22236184dfcf7a97">ClearRecordCache&lt; T &gt;</reimplements>
        <briefdescription>
<para>Clears the record cache for the given type. After ICsvReaderRow.GetRecord{T} is called the first time, code is dynamically generated based on the CsvPropertyMapCollection, compiled, and stored for the given type T. If the CsvPropertyMapCollection changes, ICsvReaderRow.ClearRecordCache{T} needs to be called to update the record cache. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" line="1039" column="1" bodyfile="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" bodystart="1039" bodyend="1044"/>
      </memberdef>
      <memberdef kind="function" id="d1/d22/a00057_1a669ecad48ad94b03a06131e78faa767a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void CsvHelper.CsvReader.ClearRecordCache</definition>
        <argsstring>(Type type)</argsstring>
        <name>ClearRecordCache</name>
        <reimplements refid="da/d82/a00091_1aa035080da331f40071b29c17b1f8c228">ClearRecordCache</reimplements>
        <param>
          <type>Type</type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Clears the record cache for the given type. After ICsvReaderRow.GetRecord{T} is called the first time, code is dynamically generated based on the CsvPropertyMapCollection, compiled, and stored for the given type T. If the CsvPropertyMapCollection changes, ICsvReaderRow.ClearRecordCache(System.Type) needs to be called to update the record cache. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The type to invalidate.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" line="1054" column="1" bodyfile="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" bodystart="1054" bodyend="1059"/>
      </memberdef>
      <memberdef kind="function" id="d1/d22/a00057_1a1e115e1f379009b2b1cb91e7c24fdd02" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void CsvHelper.CsvReader.ClearRecordCache</definition>
        <argsstring>()</argsstring>
        <name>ClearRecordCache</name>
        <reimplements refid="da/d82/a00091_1a87251d0ff95c599cf3f6bd1cbb8204d8">ClearRecordCache</reimplements>
        <briefdescription>
<para>Clears the record cache for all types. After ICsvReaderRow.GetRecord{T} is called the first time, code is dynamically generated based on the CsvPropertyMapCollection, compiled, and stored for the given type T. If the CsvPropertyMapCollection changes, <ref refid="da/d82/a00091_1a87251d0ff95c599cf3f6bd1cbb8204d8" kindref="member">ICsvReaderRow.ClearRecordCache()</ref> needs to be called to update the record cache. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" line="1068" column="1" bodyfile="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" bodystart="1068" bodyend="1073"/>
      </memberdef>
      <memberdef kind="function" id="d1/d22/a00057_1aa71a48af4bad3b72dbd6d4c0f176e540" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void CsvHelper.CsvReader.Dispose</definition>
        <argsstring>()</argsstring>
        <name>Dispose</name>
        <briefdescription>
<para>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. </para>        </briefdescription>
        <detaileddescription>
<para>&lt;filterpriority&gt;2&lt;/filterpriority&gt; </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" line="1080" column="1" bodyfile="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" bodystart="1080" bodyend="1084"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="d1/d22/a00057_1ab0fe7955d9b2d31729fbc5b833bc263b" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void CsvHelper.CsvReader.Dispose</definition>
        <argsstring>(bool disposing)</argsstring>
        <name>Dispose</name>
        <param>
          <type>bool</type>
          <declname>disposing</declname>
        </param>
        <briefdescription>
<para>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>disposing</parametername>
</parameternamelist>
<parameterdescription>
<para>True if the instance needs to be disposed of.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" line="1090" column="1" bodyfile="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" bodystart="1090" bodyend="1107"/>
      </memberdef>
      <memberdef kind="function" id="d1/d22/a00057_1a6fa45a46ed1322dc1872ca2321b5edbc" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void CsvHelper.CsvReader.CheckDisposed</definition>
        <argsstring>()</argsstring>
        <name>CheckDisposed</name>
        <briefdescription>
<para>Checks if the instance has been disposed of. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>ObjectDisposedException</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" line="1113" column="1" bodyfile="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" bodystart="1113" bodyend="1119"/>
      </memberdef>
      <memberdef kind="function" id="d1/d22/a00057_1a2d9249171ed1568e45d152766d364c31" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void CsvHelper.CsvReader.CheckHasBeenRead</definition>
        <argsstring>()</argsstring>
        <name>CheckHasBeenRead</name>
        <briefdescription>
<para>Checks if the reader has been read yet. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="d7/df7/a00058" kindref="compound">CsvReaderException</ref></parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" line="1125" column="1" bodyfile="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" bodystart="1125" bodyend="1131"/>
      </memberdef>
      <memberdef kind="function" id="d1/d22/a00057_1a236f07d2376cb1b18e9550ccc3968728" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool CsvHelper.CsvReader.IsRecordEmpty</definition>
        <argsstring>(bool checkHasBeenRead)</argsstring>
        <name>IsRecordEmpty</name>
        <param>
          <type>bool</type>
          <declname>checkHasBeenRead</declname>
        </param>
        <briefdescription>
<para>Determines whether the current record is empty. A record is considered empty if all fields are empty. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>checkHasBeenRead</parametername>
</parameternamelist>
<parameterdescription>
<para>True to check if the record has been read, otherwise false.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if [is record empty]; otherwise, <computeroutput>false</computeroutput>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" line="1142" column="1" bodyfile="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" bodystart="1142" bodyend="1156"/>
      </memberdef>
      <memberdef kind="function" id="d1/d22/a00057_1ad1d1cde1588bb56eca326d5d92592956" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>Func&lt; string, bool &gt;</type>
        <definition>virtual Func&lt;string, bool&gt; CsvHelper.CsvReader.GetEmtpyStringMethod</definition>
        <argsstring>()</argsstring>
        <name>GetEmtpyStringMethod</name>
        <briefdescription>
<para>Gets a function to test for an empty string. Will check CsvConfiguration.TrimFields when making its decision. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The function to test for an empty string.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" line="1163" column="1" bodyfile="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" bodystart="1163" bodyend="1175"/>
      </memberdef>
      <memberdef kind="function" id="d1/d22/a00057_1a7e507d40e35fde7bf23e208be7be0884" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int CsvHelper.CsvReader.GetFieldIndex</definition>
        <argsstring>(string name, int index=0, bool isTryGet=false)</argsstring>
        <name>GetFieldIndex</name>
        <param>
          <type>string</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>isTryGet</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Gets the index of the field at name if found. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>The name of the field to get the index for.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the field if there are multiple fields with the same name.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>isTryGet</parametername>
</parameternamelist>
<parameterdescription>
<para>A value indicating if the call was initiated from a TryGet.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The index of the field if found, otherwise -1.</para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="d7/df7/a00058" kindref="compound">CsvReaderException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>Thrown if there is no header record.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="d6/d2d/a00047" kindref="compound">CsvMissingFieldException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>Thrown if there isn&apos;t a field with name.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" line="1186" column="1" bodyfile="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" bodystart="1186" bodyend="1189"/>
      </memberdef>
      <memberdef kind="function" id="d1/d22/a00057_1ad4d961c8e3f29a81e4ff56b279569d2d" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int CsvHelper.CsvReader.GetFieldIndex</definition>
        <argsstring>(string[] names, int index=0, bool isTryGet=false)</argsstring>
        <name>GetFieldIndex</name>
        <param>
          <type>string[]</type>
          <declname>names</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>isTryGet</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Gets the index of the field at name if found. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>names</parametername>
</parameternamelist>
<parameterdescription>
<para>The possible names of the field to get the index for.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the field if there are multiple fields with the same name.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>isTryGet</parametername>
</parameternamelist>
<parameterdescription>
<para>A value indicating if the call was initiated from a TryGet.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The index of the field if found, otherwise -1.</para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="d7/df7/a00058" kindref="compound">CsvReaderException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>Thrown if there is no header record.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername><ref refid="d6/d2d/a00047" kindref="compound">CsvMissingFieldException</ref></parametername>
</parameternamelist>
<parameterdescription>
<para>Thrown if there isn&apos;t a field with name.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" line="1200" column="1" bodyfile="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" bodystart="1200" bodyend="1251"/>
      </memberdef>
      <memberdef kind="function" id="d1/d22/a00057_1afc1150ed2f9ed7c9e87238e65a5e12e9" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void CsvHelper.CsvReader.ParseNamedIndexes</definition>
        <argsstring>()</argsstring>
        <name>ParseNamedIndexes</name>
        <briefdescription>
<para>Parses the named indexes from the header record. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" line="1256" column="1" bodyfile="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" bodystart="1256" bodyend="1280"/>
      </memberdef>
      <memberdef kind="function" id="d1/d22/a00057_1a3b8db0163b61e20d56ed8626e21338d6" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool CsvHelper.CsvReader.ShouldSkipRecord</definition>
        <argsstring>()</argsstring>
        <name>ShouldSkipRecord</name>
        <briefdescription>
<para>Checks if the current record should be skipped or not. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><computeroutput>true</computeroutput> if the current record should be skipped, <computeroutput>false</computeroutput> otherwise.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" line="1286" column="1" bodyfile="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" bodystart="1286" bodyend="1298"/>
      </memberdef>
      <memberdef kind="function" id="d1/d22/a00057_1aadbd9b18761654925be4bed3b906faa1" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>T</type>
        <definition>virtual T CsvHelper.CsvReader.CreateRecord&lt; T &gt;</definition>
        <argsstring>()</argsstring>
        <name>CreateRecord&lt; T &gt;</name>
        <briefdescription>
<para>Creates the record for the given type. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of record to create.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The created record.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" line="1306" column="1" bodyfile="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" bodystart="1306" bodyend="1320"/>
      </memberdef>
      <memberdef kind="function" id="d1/d22/a00057_1a722545ede4e575795ee9a73f6ada0ac7" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>object</type>
        <definition>virtual object CsvHelper.CsvReader.CreateRecord</definition>
        <argsstring>(Type type)</argsstring>
        <name>CreateRecord</name>
        <param>
          <type>Type</type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Creates the record for the given type. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of record to create.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The created record.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" line="1327" column="1" bodyfile="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" bodystart="1327" bodyend="1348"/>
      </memberdef>
      <memberdef kind="function" id="d1/d22/a00057_1a0273af46a69da3ce4af8ba4d4e0c3441" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>Func&lt; T &gt;</type>
        <definition>virtual Func&lt;T&gt; CsvHelper.CsvReader.GetReadRecordFunc&lt; T &gt;</definition>
        <argsstring>()</argsstring>
        <name>GetReadRecordFunc&lt; T &gt;</name>
        <briefdescription>
<para>Gets the function delegate used to populate a custom class object with data from the reader. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The Type of object that is created and populated.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function delegate.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" line="1357" column="1" bodyfile="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" bodystart="1357" bodyend="1363"/>
      </memberdef>
      <memberdef kind="function" id="d1/d22/a00057_1a80a053f470462225c390208e27a1132a" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>Delegate</type>
        <definition>virtual Delegate CsvHelper.CsvReader.GetReadRecordFunc</definition>
        <argsstring>(Type recordType)</argsstring>
        <name>GetReadRecordFunc</name>
        <param>
          <type>Type</type>
          <declname>recordType</declname>
        </param>
        <briefdescription>
<para>Gets the function delegate used to populate a custom class object with data from the reader. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>recordType</parametername>
</parameternamelist>
<parameterdescription>
<para>The Type of object that is created and populated.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The function delegate.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" line="1372" column="1" bodyfile="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" bodystart="1372" bodyend="1377"/>
      </memberdef>
      <memberdef kind="function" id="d1/d22/a00057_1afbdbf02b2d21a11d5eed9705be26f9e1" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void CsvHelper.CsvReader.CreateReadRecordFunc</definition>
        <argsstring>(Type recordType)</argsstring>
        <name>CreateReadRecordFunc</name>
        <param>
          <type>Type</type>
          <declname>recordType</declname>
        </param>
        <briefdescription>
<para>Creates the read record func for the given type if it doesn&apos;t already exist. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>recordType</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of the record.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" line="1384" column="1" bodyfile="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" bodystart="1384" bodyend="1404"/>
      </memberdef>
      <memberdef kind="function" id="d1/d22/a00057_1a40317e9dfefc684de48e8d2ad1bf4bcc" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void CsvHelper.CsvReader.CreateFuncForObject</definition>
        <argsstring>(Type recordType)</argsstring>
        <name>CreateFuncForObject</name>
        <param>
          <type>Type</type>
          <declname>recordType</declname>
        </param>
        <briefdescription>
<para>Creates the function for an object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>recordType</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of object to create the function for.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" line="1410" column="1" bodyfile="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" bodystart="1410" bodyend="1425"/>
      </memberdef>
      <memberdef kind="function" id="d1/d22/a00057_1ad6cc1addf9a64f0cdac3495a4c04f856" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void CsvHelper.CsvReader.CreateFuncForPrimitive</definition>
        <argsstring>(Type recordType)</argsstring>
        <name>CreateFuncForPrimitive</name>
        <param>
          <type>Type</type>
          <declname>recordType</declname>
        </param>
        <briefdescription>
<para>Creates the function for a primitive. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>recordType</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the primitive to create the function for.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" line="1431" column="1" bodyfile="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" bodystart="1431" bodyend="1448"/>
      </memberdef>
      <memberdef kind="function" id="d1/d22/a00057_1a5d8c85bf8923d38ead3df9b9463f3eae" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void CsvHelper.CsvReader.CreatePropertyBindingsForMapping</definition>
        <argsstring>(CsvClassMap mapping, Type recordType, List&lt; MemberBinding &gt; bindings)</argsstring>
        <name>CreatePropertyBindingsForMapping</name>
        <param>
          <type><ref refid="db/d3a/a00040" kindref="compound">CsvClassMap</ref></type>
          <declname>mapping</declname>
        </param>
        <param>
          <type>Type</type>
          <declname>recordType</declname>
        </param>
        <param>
          <type>List&lt; MemberBinding &gt;</type>
          <declname>bindings</declname>
        </param>
        <briefdescription>
<para>Creates the property bindings for the given CsvClassMap. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mapping</parametername>
</parameternamelist>
<parameterdescription>
<para>The mapping to create the bindings for.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>recordType</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of record.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bindings</parametername>
</parameternamelist>
<parameterdescription>
<para>The bindings that will be added to from the mapping.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" line="1456" column="1" bodyfile="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" bodystart="1456" bodyend="1472"/>
      </memberdef>
      <memberdef kind="function" id="d1/d22/a00057_1af1d56b760007c4ab11ccd93eb97e07b4" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void CsvHelper.CsvReader.AddPropertyBindings</definition>
        <argsstring>(CsvPropertyMapCollection properties, List&lt; MemberBinding &gt; bindings)</argsstring>
        <name>AddPropertyBindings</name>
        <param>
          <type><ref refid="d2/d79/a00051" kindref="compound">CsvPropertyMapCollection</ref></type>
          <declname>properties</declname>
        </param>
        <param>
          <type>List&lt; MemberBinding &gt;</type>
          <declname>bindings</declname>
        </param>
        <briefdescription>
<para>Adds a MemberBinding for each property for it&apos;s field. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>properties</parametername>
</parameternamelist>
<parameterdescription>
<para>The properties to add bindings for.</para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bindings</parametername>
</parameternamelist>
<parameterdescription>
<para>The bindings that will be added to from the properties.</para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" line="1479" column="1" bodyfile="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" bodystart="1479" bodyend="1579"/>
      </memberdef>
      <memberdef kind="function" id="d1/d22/a00057_1ab0f1158c863fdedadff576a28a533c71" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool CsvHelper.CsvReader.CanRead</definition>
        <argsstring>(CsvPropertyMap propertyMap)</argsstring>
        <name>CanRead</name>
        <param>
          <type><ref refid="d5/de0/a00050" kindref="compound">CsvPropertyMap</ref></type>
          <declname>propertyMap</declname>
        </param>
        <briefdescription>
<para>Determines if the property for the CsvPropertyMap can be read. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>propertyMap</parametername>
</parameternamelist>
<parameterdescription>
<para>The property map.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A value indicating of the property can be read. True if it can, otherwise false.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" line="1587" column="1" bodyfile="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" bodystart="1587" bodyend="1598"/>
      </memberdef>
      <memberdef kind="function" id="d1/d22/a00057_1a85552a491d9d488db0516324e9870998" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool CsvHelper.CsvReader.CanRead</definition>
        <argsstring>(CsvPropertyReferenceMap propertyReferenceMap)</argsstring>
        <name>CanRead</name>
        <param>
          <type><ref refid="d4/d6d/a00055" kindref="compound">CsvPropertyReferenceMap</ref></type>
          <declname>propertyReferenceMap</declname>
        </param>
        <briefdescription>
<para>Determines if the property for the CsvPropertyReferenceMap can be read. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>propertyReferenceMap</parametername>
</parameternamelist>
<parameterdescription>
<para>The reference map.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A value indicating of the property can be read. True if it can, otherwise false.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" line="1606" column="1" bodyfile="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" bodystart="1606" bodyend="1615"/>
      </memberdef>
      <memberdef kind="function" id="d1/d22/a00057_1a4b6150b5ff8a85d9cf05aa1027554a50" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>dynamic</type>
        <definition>virtual dynamic CsvHelper.CsvReader.CreateDynamic</definition>
        <argsstring>()</argsstring>
        <name>CreateDynamic</name>
        <briefdescription>
<para>Creates a dynamic object from the current record. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The dynamic object.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" line="1623" column="1" bodyfile="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" bodystart="1623" bodyend="1647"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Reads data that was parsed from <ref refid="db/dab/a00089" kindref="compound">ICsvParser</ref>. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1042">
        <label>IDisposable</label>
      </node>
      <node id="1041">
        <label>ICsvReaderRow</label>
        <link refid="da/d82/a00091"/>
      </node>
      <node id="1039">
        <label>CsvHelper.CsvReader</label>
        <link refid="d1/d22/a00057"/>
        <childnode refid="1040" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1040">
        <label>ICsvReader</label>
        <link refid="d9/dec/a00090"/>
        <childnode refid="1041" relation="public-inheritance">
        </childnode>
        <childnode refid="1042" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1047">
        <label>CsvHelper.Configuration.CsvConfiguration</label>
        <link refid="d6/d42/a00043"/>
        <childnode refid="1048" relation="usage">
          <edgelabel>-maps</edgelabel>
        </childnode>
      </node>
      <node id="1046">
        <label>IDisposable</label>
      </node>
      <node id="1045">
        <label>ICsvReaderRow</label>
        <link refid="da/d82/a00091"/>
      </node>
      <node id="1043">
        <label>CsvHelper.CsvReader</label>
        <link refid="d1/d22/a00057"/>
        <childnode refid="1044" relation="public-inheritance">
        </childnode>
        <childnode refid="1047" relation="usage">
          <edgelabel>-configuration</edgelabel>
        </childnode>
        <childnode refid="1049" relation="usage">
          <edgelabel>-parser</edgelabel>
        </childnode>
      </node>
      <node id="1048">
        <label>CsvHelper.Configuration.CsvClassMapCollection</label>
        <link refid="d5/db6/a00042"/>
      </node>
      <node id="1049">
        <label>CsvHelper.ICsvParser</label>
        <link refid="db/dab/a00089"/>
        <childnode refid="1046" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1044">
        <label>ICsvReader</label>
        <link refid="d9/dec/a00090"/>
        <childnode refid="1045" relation="public-inheritance">
        </childnode>
        <childnode refid="1046" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" line="27" column="1" bodyfile="/home/travis/build/thesecretlab/YarnSpinner/packages/CsvHelper.2.16.0.0/src/CsvHelper/CsvReader.cs" bodystart="26" bodyend="1649"/>
    <listofallmembers>
      <member refid="d1/d22/a00057_1af1d56b760007c4ab11ccd93eb97e07b4" prot="protected" virt="virtual"><scope>CsvHelper::CsvReader</scope><name>AddPropertyBindings</name></member>
      <member refid="d1/d22/a00057_1ab0f1158c863fdedadff576a28a533c71" prot="protected" virt="virtual"><scope>CsvHelper::CsvReader</scope><name>CanRead</name></member>
      <member refid="d1/d22/a00057_1a85552a491d9d488db0516324e9870998" prot="protected" virt="virtual"><scope>CsvHelper::CsvReader</scope><name>CanRead</name></member>
      <member refid="d1/d22/a00057_1a6fa45a46ed1322dc1872ca2321b5edbc" prot="protected" virt="virtual"><scope>CsvHelper::CsvReader</scope><name>CheckDisposed</name></member>
      <member refid="d1/d22/a00057_1a2d9249171ed1568e45d152766d364c31" prot="protected" virt="virtual"><scope>CsvHelper::CsvReader</scope><name>CheckHasBeenRead</name></member>
      <member refid="d1/d22/a00057_1a669ecad48ad94b03a06131e78faa767a" prot="public" virt="virtual"><scope>CsvHelper::CsvReader</scope><name>ClearRecordCache</name></member>
      <member refid="d1/d22/a00057_1a1e115e1f379009b2b1cb91e7c24fdd02" prot="public" virt="virtual"><scope>CsvHelper::CsvReader</scope><name>ClearRecordCache</name></member>
      <member refid="d1/d22/a00057_1abc2052d47de1fc745579881daeae8806" prot="public" virt="virtual"><scope>CsvHelper::CsvReader</scope><name>ClearRecordCache&lt; T &gt;</name></member>
      <member refid="d1/d22/a00057_1a695622911e45cbac8d67dcbd9a3e2967" prot="private" virt="non-virtual"><scope>CsvHelper::CsvReader</scope><name>configuration</name></member>
      <member refid="d1/d22/a00057_1a797f57aadbd5220ccb0cc65e4eef4034" prot="public" virt="non-virtual"><scope>CsvHelper::CsvReader</scope><name>Configuration</name></member>
      <member refid="d1/d22/a00057_1a4b6150b5ff8a85d9cf05aa1027554a50" prot="protected" virt="virtual"><scope>CsvHelper::CsvReader</scope><name>CreateDynamic</name></member>
      <member refid="d1/d22/a00057_1a40317e9dfefc684de48e8d2ad1bf4bcc" prot="protected" virt="virtual"><scope>CsvHelper::CsvReader</scope><name>CreateFuncForObject</name></member>
      <member refid="d1/d22/a00057_1ad6cc1addf9a64f0cdac3495a4c04f856" prot="protected" virt="virtual"><scope>CsvHelper::CsvReader</scope><name>CreateFuncForPrimitive</name></member>
      <member refid="d1/d22/a00057_1a5d8c85bf8923d38ead3df9b9463f3eae" prot="protected" virt="virtual"><scope>CsvHelper::CsvReader</scope><name>CreatePropertyBindingsForMapping</name></member>
      <member refid="d1/d22/a00057_1afbdbf02b2d21a11d5eed9705be26f9e1" prot="protected" virt="virtual"><scope>CsvHelper::CsvReader</scope><name>CreateReadRecordFunc</name></member>
      <member refid="d1/d22/a00057_1a722545ede4e575795ee9a73f6ada0ac7" prot="protected" virt="virtual"><scope>CsvHelper::CsvReader</scope><name>CreateRecord</name></member>
      <member refid="d1/d22/a00057_1aadbd9b18761654925be4bed3b906faa1" prot="protected" virt="virtual"><scope>CsvHelper::CsvReader</scope><name>CreateRecord&lt; T &gt;</name></member>
      <member refid="d1/d22/a00057_1a451bc92ee354c42cb09a10be46ed89df" prot="public" virt="non-virtual"><scope>CsvHelper::CsvReader</scope><name>CsvReader</name></member>
      <member refid="d1/d22/a00057_1a69ae54f0a1f3b84bc1dc2287cc0923ac" prot="public" virt="non-virtual"><scope>CsvHelper::CsvReader</scope><name>CsvReader</name></member>
      <member refid="d1/d22/a00057_1a2a7e1bcb33d8013182286439e6f7416f" prot="public" virt="non-virtual"><scope>CsvHelper::CsvReader</scope><name>CsvReader</name></member>
      <member refid="d1/d22/a00057_1a56e974bc7e2242912e956393e831e166" prot="private" virt="non-virtual"><scope>CsvHelper::CsvReader</scope><name>currentIndex</name></member>
      <member refid="d1/d22/a00057_1ab2bfef15784add66e441c9d3a0d73751" prot="private" virt="non-virtual"><scope>CsvHelper::CsvReader</scope><name>currentRecord</name></member>
      <member refid="d1/d22/a00057_1aae4cb2c8d93c9fe0c57bd146c926ecb6" prot="public" virt="non-virtual"><scope>CsvHelper::CsvReader</scope><name>CurrentRecord</name></member>
      <member refid="d1/d22/a00057_1aa71a48af4bad3b72dbd6d4c0f176e540" prot="public" virt="non-virtual"><scope>CsvHelper::CsvReader</scope><name>Dispose</name></member>
      <member refid="d1/d22/a00057_1ab0fe7955d9b2d31729fbc5b833bc263b" prot="protected" virt="virtual"><scope>CsvHelper::CsvReader</scope><name>Dispose</name></member>
      <member refid="d1/d22/a00057_1aa2e7952350ee7c52c74a3c259d372c89" prot="private" virt="non-virtual"><scope>CsvHelper::CsvReader</scope><name>disposed</name></member>
      <member refid="d1/d22/a00057_1a04a4a668ae50f5383cdd2a1691bbd718" prot="private" virt="non-virtual"><scope>CsvHelper::CsvReader</scope><name>doneReading</name></member>
      <member refid="d1/d22/a00057_1abea2bd0359f517019984de31f9d9fb96" prot="private" virt="non-virtual"><scope>CsvHelper::CsvReader</scope><name>DoneReadingExceptionMessage</name></member>
      <member refid="d1/d22/a00057_1a7e3244a36e320faec69d44248cc248bf" prot="public" virt="non-virtual"><scope>CsvHelper::CsvReader</scope><name>FieldHeaders</name></member>
      <member refid="d1/d22/a00057_1ad1d1cde1588bb56eca326d5d92592956" prot="protected" virt="virtual"><scope>CsvHelper::CsvReader</scope><name>GetEmtpyStringMethod</name></member>
      <member refid="d1/d22/a00057_1ac1500fd628ea947c3ae05a7ce3fbd01a" prot="public" virt="virtual"><scope>CsvHelper::CsvReader</scope><name>GetField</name></member>
      <member refid="d1/d22/a00057_1a2dea592c2879215b86a4e49280492930" prot="public" virt="virtual"><scope>CsvHelper::CsvReader</scope><name>GetField</name></member>
      <member refid="d1/d22/a00057_1aa1d5909bc0bb20045ece92b3448a5297" prot="public" virt="virtual"><scope>CsvHelper::CsvReader</scope><name>GetField</name></member>
      <member refid="d1/d22/a00057_1a5fd40b95bcd109c3c688419efaed1dbc" prot="public" virt="virtual"><scope>CsvHelper::CsvReader</scope><name>GetField</name></member>
      <member refid="d1/d22/a00057_1afe8aeec6713f35c1b8be00c063dc2448" prot="public" virt="virtual"><scope>CsvHelper::CsvReader</scope><name>GetField</name></member>
      <member refid="d1/d22/a00057_1a1b5348e89c9befcc71159fca907f6b4f" prot="public" virt="virtual"><scope>CsvHelper::CsvReader</scope><name>GetField</name></member>
      <member refid="d1/d22/a00057_1a35724e33388ac5772ccfa0526ca812fc" prot="public" virt="virtual"><scope>CsvHelper::CsvReader</scope><name>GetField</name></member>
      <member refid="d1/d22/a00057_1a5e255cb4bfa8d7a9dc364660cb079415" prot="public" virt="virtual"><scope>CsvHelper::CsvReader</scope><name>GetField</name></member>
      <member refid="d1/d22/a00057_1a3fb351f9f77bb39bddc05c76691e830f" prot="public" virt="virtual"><scope>CsvHelper::CsvReader</scope><name>GetField</name></member>
      <member refid="d1/d22/a00057_1ae574612025171f2169e3e3683067d326" prot="public" virt="virtual"><scope>CsvHelper::CsvReader</scope><name>GetField</name></member>
      <member refid="d1/d22/a00057_1a29d9cc37e0a7fd6a08cba9626ebdfe69" prot="public" virt="virtual"><scope>CsvHelper::CsvReader</scope><name>GetField</name></member>
      <member refid="d1/d22/a00057_1a08ff19d0e0b2c10b644e14621966f2fa" prot="public" virt="virtual"><scope>CsvHelper::CsvReader</scope><name>GetField</name></member>
      <member refid="d1/d22/a00057_1a6a43cfaf39caea93ecd87e506be7b404" prot="public" virt="virtual"><scope>CsvHelper::CsvReader</scope><name>GetField&lt; T &gt;</name></member>
      <member refid="d1/d22/a00057_1a8ebe0d6e7644eebbbbddef3c9d2922be" prot="public" virt="virtual"><scope>CsvHelper::CsvReader</scope><name>GetField&lt; T &gt;</name></member>
      <member refid="d1/d22/a00057_1afd2c85d724fdc84220a15e5f576cb673" prot="public" virt="virtual"><scope>CsvHelper::CsvReader</scope><name>GetField&lt; T &gt;</name></member>
      <member refid="d1/d22/a00057_1a2b593a60de4dc4d776abde5c29232d0d" prot="public" virt="virtual"><scope>CsvHelper::CsvReader</scope><name>GetField&lt; T &gt;</name></member>
      <member refid="d1/d22/a00057_1aadec530254222a2c6fb0e25774a7498b" prot="public" virt="virtual"><scope>CsvHelper::CsvReader</scope><name>GetField&lt; T &gt;</name></member>
      <member refid="d1/d22/a00057_1a607c6c23ce887b6de60f81c1ea2a8348" prot="public" virt="virtual"><scope>CsvHelper::CsvReader</scope><name>GetField&lt; T &gt;</name></member>
      <member refid="d1/d22/a00057_1ac989008aec99a6462d9980a1d8a87072" prot="public" virt="virtual"><scope>CsvHelper::CsvReader</scope><name>GetField&lt; T, TConverter &gt;</name></member>
      <member refid="d1/d22/a00057_1ac76d4fabc62e9ac896c1b2e6e861ed11" prot="public" virt="virtual"><scope>CsvHelper::CsvReader</scope><name>GetField&lt; T, TConverter &gt;</name></member>
      <member refid="d1/d22/a00057_1a6b77ca85326f76d006935275b46342f0" prot="public" virt="virtual"><scope>CsvHelper::CsvReader</scope><name>GetField&lt; T, TConverter &gt;</name></member>
      <member refid="d1/d22/a00057_1a7e507d40e35fde7bf23e208be7be0884" prot="protected" virt="virtual"><scope>CsvHelper::CsvReader</scope><name>GetFieldIndex</name></member>
      <member refid="d1/d22/a00057_1ad4d961c8e3f29a81e4ff56b279569d2d" prot="protected" virt="virtual"><scope>CsvHelper::CsvReader</scope><name>GetFieldIndex</name></member>
      <member refid="d1/d22/a00057_1a80a053f470462225c390208e27a1132a" prot="protected" virt="virtual"><scope>CsvHelper::CsvReader</scope><name>GetReadRecordFunc</name></member>
      <member refid="d1/d22/a00057_1a0273af46a69da3ce4af8ba4d4e0c3441" prot="protected" virt="virtual"><scope>CsvHelper::CsvReader</scope><name>GetReadRecordFunc&lt; T &gt;</name></member>
      <member refid="d1/d22/a00057_1a10680de48d9c21ef1792661947f9f601" prot="public" virt="virtual"><scope>CsvHelper::CsvReader</scope><name>GetRecord</name></member>
      <member refid="d1/d22/a00057_1ac607c1182168a5f9c7fa1642670ad320" prot="public" virt="virtual"><scope>CsvHelper::CsvReader</scope><name>GetRecord&lt; T &gt;</name></member>
      <member refid="d1/d22/a00057_1aaa94b8f27e410194fbaadd75f38b030e" prot="public" virt="virtual"><scope>CsvHelper::CsvReader</scope><name>GetRecords</name></member>
      <member refid="d1/d22/a00057_1afed61bbcd2a120487498acd36e6ae2f2" prot="public" virt="virtual"><scope>CsvHelper::CsvReader</scope><name>GetRecords&lt; T &gt;</name></member>
      <member refid="d1/d22/a00057_1a34d0725235d140229f6a07e4c3b83552" prot="private" virt="non-virtual"><scope>CsvHelper::CsvReader</scope><name>hasBeenRead</name></member>
      <member refid="d1/d22/a00057_1aa6e5fd8aa2961442ca1caf7a4ac54d65" prot="private" virt="non-virtual"><scope>CsvHelper::CsvReader</scope><name>headerRecord</name></member>
      <member refid="d1/d22/a00057_1a9f3f7336e8ceebafbfe0959508a2a9f0" prot="public" virt="virtual"><scope>CsvHelper::CsvReader</scope><name>IsRecordEmpty</name></member>
      <member refid="d1/d22/a00057_1a236f07d2376cb1b18e9550ccc3968728" prot="protected" virt="virtual"><scope>CsvHelper::CsvReader</scope><name>IsRecordEmpty</name></member>
      <member refid="d1/d22/a00057_1a3114f49bd2b3c4966f4b15a310747aeb" prot="private" virt="non-virtual"><scope>CsvHelper::CsvReader</scope><name>namedIndexes</name></member>
      <member refid="d1/d22/a00057_1afc1150ed2f9ed7c9e87238e65a5e12e9" prot="protected" virt="virtual"><scope>CsvHelper::CsvReader</scope><name>ParseNamedIndexes</name></member>
      <member refid="d1/d22/a00057_1aaf2ee64c7a157027aea69bfae1fa9edc" prot="private" virt="non-virtual"><scope>CsvHelper::CsvReader</scope><name>parser</name></member>
      <member refid="d1/d22/a00057_1a67874ae540cf6cf32522a38167a3f3b6" prot="public" virt="non-virtual"><scope>CsvHelper::CsvReader</scope><name>Parser</name></member>
      <member refid="d1/d22/a00057_1af1f0d4d722e93df9da30fe60b89ff2d6" prot="public" virt="virtual"><scope>CsvHelper::CsvReader</scope><name>Read</name></member>
      <member refid="d1/d22/a00057_1a57ba5fa523de97bd2cf068973329090d" prot="public" virt="virtual"><scope>CsvHelper::CsvReader</scope><name>ReadHeader</name></member>
      <member refid="d1/d22/a00057_1af8fa2e4c94750a1d6df3112d5f1d701c" prot="private" virt="non-virtual"><scope>CsvHelper::CsvReader</scope><name>recordFuncs</name></member>
      <member refid="d1/d22/a00057_1a780a686daf1d594f478f5aaf347dc4ad" prot="public" virt="non-virtual"><scope>CsvHelper::CsvReader</scope><name>Row</name></member>
      <member refid="d1/d22/a00057_1a3b8db0163b61e20d56ed8626e21338d6" prot="protected" virt="virtual"><scope>CsvHelper::CsvReader</scope><name>ShouldSkipRecord</name></member>
      <member refid="d1/d22/a00057_1a2ba794407171014c1c4a604cdb272a0b" prot="public" virt="non-virtual"><scope>CsvHelper::CsvReader</scope><name>this[int index]</name></member>
      <member refid="d1/d22/a00057_1a1e72b5694536f70fd2df975c3fd5b827" prot="public" virt="non-virtual"><scope>CsvHelper::CsvReader</scope><name>this[string name, int index]</name></member>
      <member refid="d1/d22/a00057_1a24af16e0522cb8b96775334783ea6939" prot="public" virt="non-virtual"><scope>CsvHelper::CsvReader</scope><name>this[string name]</name></member>
      <member refid="d1/d22/a00057_1ae5531b6fa3247cf038ca6a9c20ca43dd" prot="public" virt="virtual"><scope>CsvHelper::CsvReader</scope><name>TryGetField&lt; T &gt;</name></member>
      <member refid="d1/d22/a00057_1aab6eff4536568c7c0268616aa2b9a674" prot="public" virt="virtual"><scope>CsvHelper::CsvReader</scope><name>TryGetField&lt; T &gt;</name></member>
      <member refid="d1/d22/a00057_1a6b32f9207db53d8d09598ee2d743d06b" prot="public" virt="virtual"><scope>CsvHelper::CsvReader</scope><name>TryGetField&lt; T &gt;</name></member>
      <member refid="d1/d22/a00057_1aa8622306f74940386663fa4020eb8971" prot="public" virt="virtual"><scope>CsvHelper::CsvReader</scope><name>TryGetField&lt; T &gt;</name></member>
      <member refid="d1/d22/a00057_1ade47afe2ea6cdd4439265e9364626c6b" prot="public" virt="virtual"><scope>CsvHelper::CsvReader</scope><name>TryGetField&lt; T &gt;</name></member>
      <member refid="d1/d22/a00057_1a152975903578da620893d21cba2f8afa" prot="public" virt="virtual"><scope>CsvHelper::CsvReader</scope><name>TryGetField&lt; T &gt;</name></member>
      <member refid="d1/d22/a00057_1a58c361c230abb87ae13f97646748be61" prot="public" virt="virtual"><scope>CsvHelper::CsvReader</scope><name>TryGetField&lt; T, TConverter &gt;</name></member>
      <member refid="d1/d22/a00057_1a1ad85089ce2a6eae15c48e21d5da6c47" prot="public" virt="virtual"><scope>CsvHelper::CsvReader</scope><name>TryGetField&lt; T, TConverter &gt;</name></member>
      <member refid="d1/d22/a00057_1a6665d63535ab6ca768ffbc76c1347e58" prot="public" virt="virtual"><scope>CsvHelper::CsvReader</scope><name>TryGetField&lt; T, TConverter &gt;</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
